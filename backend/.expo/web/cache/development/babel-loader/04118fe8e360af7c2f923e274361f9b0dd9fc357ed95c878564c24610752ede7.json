{"ast":null,"code":"'use strict';\n\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { registerWorkletStackDetails } from \"./errors\";\nimport { isSynchronizable } from \"./isSynchronizable\";\nimport { logger } from \"./logger\";\nimport { SHOULD_BE_USE_WEB } from \"./PlatformChecker\";\nimport { serializableMappingCache, serializableMappingFlag } from \"./serializableMappingCache\";\nimport { jsVersion } from \"./utils/jsVersion\";\nimport { isWorkletFunction } from \"./workletFunction\";\nimport { WorkletsError } from \"./WorkletsError\";\nimport { WorkletsModule } from \"./WorkletsModule\";\nvar MAGIC_KEY = 'REANIMATED_MAGIC_KEY';\nfunction isHostObject(value) {\n  'worklet';\n  return MAGIC_KEY in value;\n}\nexport function isSerializableRef(value) {\n  return typeof value === 'object' && value !== null && '__serializableRef' in value;\n}\nfunction isPlainJSObject(object) {\n  'worklet';\n\n  return Object.getPrototypeOf(object) === Object.prototype;\n}\nfunction isTurboModuleLike(object) {\n  return isHostObject(Object.getPrototypeOf(object));\n}\nfunction getFromCache(value) {\n  var cached = serializableMappingCache.get(value);\n  if (cached === serializableMappingFlag) {\n    return value;\n  }\n  return cached;\n}\nvar INACCESSIBLE_OBJECT = {\n  __init: function __init() {\n    'worklet';\n\n    return new Proxy({}, {\n      get: function get(_, prop) {\n        if (prop === '_isReanimatedSharedValue' || prop === '__remoteFunction') {\n          return false;\n        }\n        throw new WorkletsError(`Trying to access property \\`${String(prop)}\\` of an object which cannot be sent to the UI runtime.`);\n      },\n      set: function set() {\n        throw new WorkletsError('Trying to write to an object which cannot be sent to the UI runtime.');\n      }\n    });\n  }\n};\nvar VALID_ARRAY_VIEWS_NAMES = ['Int8Array', 'Uint8Array', 'Uint8ClampedArray', 'Int16Array', 'Uint16Array', 'Int32Array', 'Uint32Array', 'Float32Array', 'Float64Array', 'BigInt64Array', 'BigUint64Array', 'DataView'];\nvar DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD = 30;\nvar processedObjectAtThresholdDepth;\nfunction createSerializableWeb(value) {\n  return value;\n}\nfunction createSerializableNative(value) {\n  var shouldPersistRemote = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  detectCyclicObject(value, depth);\n  var isObject = typeof value === 'object';\n  var isFunction = typeof value === 'function';\n  if (typeof value === 'string') {\n    return cloneString(value);\n  }\n  if (typeof value === 'number') {\n    return cloneNumber(value);\n  }\n  if (typeof value === 'boolean') {\n    return cloneBoolean(value);\n  }\n  if (typeof value === 'bigint') {\n    return cloneBigInt(value);\n  }\n  if (value === undefined) {\n    return cloneUndefined();\n  }\n  if (value === null) {\n    return cloneNull();\n  }\n  if (!isObject && !isFunction || value === null) {\n    return clonePrimitive(value, shouldPersistRemote);\n  }\n  var cached = getFromCache(value);\n  if (cached !== undefined) {\n    return cached;\n  }\n  if (Array.isArray(value)) {\n    return cloneArray(value, shouldPersistRemote, depth);\n  }\n  if (globalThis._WORKLETS_BUNDLE_MODE && isFunction && value.__bundleData) {\n    return cloneImport(value);\n  }\n  if (isFunction && !isWorkletFunction(value)) {\n    return cloneRemoteFunction(value);\n  }\n  if (isTurboModuleLike(value)) {\n    return cloneTurboModuleLike(value, shouldPersistRemote, depth);\n  }\n  if (isHostObject(value)) {\n    return cloneHostObject(value);\n  }\n  if (isPlainJSObject(value) && value.__init) {\n    return cloneInitializer(value, shouldPersistRemote, depth);\n  }\n  if (isPlainJSObject(value) && value.__workletContextObjectFactory) {\n    return cloneContextObject(value);\n  }\n  if ((isPlainJSObject(value) || isFunction) && isWorkletFunction(value)) {\n    return cloneWorklet(value, shouldPersistRemote, depth);\n  }\n  if (isSynchronizable(value)) {\n    return cloneSynchronizable(value);\n  }\n  if (isPlainJSObject(value) || isFunction) {\n    return clonePlainJSObject(value, shouldPersistRemote, depth);\n  }\n  if (value instanceof Set) {\n    return cloneSet(value);\n  }\n  if (value instanceof Map) {\n    return cloneMap(value);\n  }\n  if (value instanceof RegExp) {\n    return cloneRegExp(value);\n  }\n  if (value instanceof Error) {\n    return cloneError(value);\n  }\n  if (value instanceof ArrayBuffer) {\n    return cloneArrayBuffer(value, shouldPersistRemote);\n  }\n  if (ArrayBuffer.isView(value)) {\n    return cloneArrayBufferView(value);\n  }\n  return inaccessibleObject(value);\n}\nif (globalThis._WORKLETS_BUNDLE_MODE) {\n  createSerializableNative.__bundleData = {\n    imported: 'createSerializable',\n    source: require.resolveWeak('./index')\n  };\n}\nexport var createSerializable = SHOULD_BE_USE_WEB ? createSerializableWeb : createSerializableNative;\nfunction detectCyclicObject(value, depth) {\n  if (depth >= DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD) {\n    if (depth === DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD) {\n      processedObjectAtThresholdDepth = value;\n    } else if (value === processedObjectAtThresholdDepth) {\n      throw new WorkletsError('Trying to convert a cyclic object to a serializable. This is not supported.');\n    }\n  } else {\n    processedObjectAtThresholdDepth = undefined;\n  }\n}\nfunction clonePrimitive(value, shouldPersistRemote) {\n  return WorkletsModule.createSerializable(value, shouldPersistRemote);\n}\nfunction cloneString(value) {\n  return WorkletsModule.createSerializableString(value);\n}\nfunction cloneNumber(value) {\n  return WorkletsModule.createSerializableNumber(value);\n}\nfunction cloneBoolean(value) {\n  return WorkletsModule.createSerializableBoolean(value);\n}\nfunction cloneBigInt(value) {\n  return WorkletsModule.createSerializableBigInt(value);\n}\nfunction cloneUndefined() {\n  return WorkletsModule.createSerializableUndefined();\n}\nfunction cloneNull() {\n  return WorkletsModule.createSerializableNull();\n}\nfunction cloneObjectProperties(value, shouldPersistRemote, depth) {\n  var clonedProps = {};\n  for (var _ref of Object.entries(value)) {\n    var _ref2 = _slicedToArray(_ref, 2);\n    var key = _ref2[0];\n    var element = _ref2[1];\n    if (key === '__initData' && clonedProps.__initData !== undefined) {\n      continue;\n    }\n    clonedProps[key] = createSerializable(element, shouldPersistRemote, depth + 1);\n  }\n  return clonedProps;\n}\nfunction cloneInitializer(value) {\n  var shouldPersistRemote = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var clonedProps = cloneObjectProperties(value, shouldPersistRemote, depth);\n  return WorkletsModule.createSerializableInitializer(clonedProps);\n}\nfunction cloneArray(value, shouldPersistRemote, depth) {\n  var clonedElements = value.map(function (element) {\n    return createSerializable(element, shouldPersistRemote, depth + 1);\n  });\n  var clone = WorkletsModule.createSerializableArray(clonedElements, shouldPersistRemote);\n  serializableMappingCache.set(value, clone);\n  serializableMappingCache.set(clone);\n  freezeObjectInDev(value);\n  return clone;\n}\nfunction cloneRemoteFunction(value) {\n  var clone = WorkletsModule.createSerializableFunction(value);\n  serializableMappingCache.set(value, clone);\n  serializableMappingCache.set(clone);\n  freezeObjectInDev(value);\n  return clone;\n}\nfunction cloneHostObject(value) {\n  var clone = WorkletsModule.createSerializableHostObject(value);\n  serializableMappingCache.set(value, clone);\n  serializableMappingCache.set(clone);\n  return clone;\n}\nfunction cloneWorklet(value, shouldPersistRemote, depth) {\n  if (__DEV__) {\n    var babelVersion = value.__pluginVersion;\n    if (babelVersion !== undefined && babelVersion !== jsVersion) {\n      throw new WorkletsError(`Mismatch between JavaScript code version and Worklets Babel plugin version (${jsVersion} vs. ${babelVersion}).\n    See \\`https://docs.swmansion.com/react-native-worklets/docs/guides/troubleshooting#mismatch-between-javascript-code-version-and-worklets-babel-plugin-version\\` for more details.\n    Offending code was: \\`${getWorkletCode(value)}\\``);\n    }\n    registerWorkletStackDetails(value.__workletHash, value.__stackDetails);\n  }\n  if (value.__stackDetails) {\n    delete value.__stackDetails;\n  }\n  var clonedProps = cloneObjectProperties(value, true, depth);\n  clonedProps.__initData = createSerializable(value.__initData, true, depth + 1);\n  var clone = WorkletsModule.createSerializableWorklet(clonedProps, true);\n  serializableMappingCache.set(value, clone);\n  serializableMappingCache.set(clone);\n  freezeObjectInDev(value);\n  return clone;\n}\nfunction cloneTurboModuleLike(value, shouldPersistRemote, depth) {\n  var proto = Object.getPrototypeOf(value);\n  var clonedProps = cloneObjectProperties(value, shouldPersistRemote, depth);\n  var clone = WorkletsModule.createSerializableTurboModuleLike(clonedProps, proto);\n  return clone;\n}\nfunction cloneContextObject(value) {\n  var workletContextObjectFactory = value.__workletContextObjectFactory;\n  var handle = cloneInitializer({\n    __init: function __init() {\n      'worklet';\n\n      return workletContextObjectFactory();\n    }\n  });\n  serializableMappingCache.set(value, handle);\n  return handle;\n}\nfunction clonePlainJSObject(value, shouldPersistRemote, depth) {\n  var clonedProps = cloneObjectProperties(value, shouldPersistRemote, depth);\n  var clone = WorkletsModule.createSerializableObject(clonedProps, shouldPersistRemote, value);\n  serializableMappingCache.set(value, clone);\n  serializableMappingCache.set(clone);\n  freezeObjectInDev(value);\n  return clone;\n}\nfunction cloneMap(value) {\n  var clonedKeys = [];\n  var clonedValues = [];\n  for (var _ref3 of value.entries()) {\n    var _ref4 = _slicedToArray(_ref3, 2);\n    var key = _ref4[0];\n    var element = _ref4[1];\n    clonedKeys.push(createSerializable(key));\n    clonedValues.push(createSerializable(element));\n  }\n  var clone = WorkletsModule.createSerializableMap(clonedKeys, clonedValues);\n  serializableMappingCache.set(value, clone);\n  serializableMappingCache.set(clone);\n  freezeObjectInDev(value);\n  return clone;\n}\nfunction cloneSet(value) {\n  var clonedElements = [];\n  for (var element of value) {\n    clonedElements.push(createSerializable(element));\n  }\n  var clone = WorkletsModule.createSerializableSet(clonedElements);\n  serializableMappingCache.set(value, clone);\n  serializableMappingCache.set(clone);\n  freezeObjectInDev(value);\n  return clone;\n}\nfunction cloneRegExp(value) {\n  var pattern = value.source;\n  var flags = value.flags;\n  var handle = cloneInitializer({\n    __init: function __init() {\n      'worklet';\n\n      return new RegExp(pattern, flags);\n    }\n  });\n  serializableMappingCache.set(value, handle);\n  return handle;\n}\nfunction cloneError(value) {\n  var name = value.name,\n    message = value.message,\n    stack = value.stack;\n  var handle = cloneInitializer({\n    __init: function __init() {\n      'worklet';\n      var error = new Error();\n      error.name = name;\n      error.message = message;\n      error.stack = stack;\n      return error;\n    }\n  });\n  serializableMappingCache.set(value, handle);\n  return handle;\n}\nfunction cloneArrayBuffer(value, shouldPersistRemote) {\n  var clone = WorkletsModule.createSerializable(value, shouldPersistRemote, value);\n  serializableMappingCache.set(value, clone);\n  serializableMappingCache.set(clone);\n  return clone;\n}\nfunction cloneArrayBufferView(value) {\n  var buffer = value.buffer;\n  var typeName = value.constructor.name;\n  var handle = cloneInitializer({\n    __init: function __init() {\n      'worklet';\n\n      if (!VALID_ARRAY_VIEWS_NAMES.includes(typeName)) {\n        throw new WorkletsError(`Invalid array view name \\`${typeName}\\`.`);\n      }\n      var constructor = global[typeName];\n      if (constructor === undefined) {\n        throw new WorkletsError(`Constructor for \\`${typeName}\\` not found.`);\n      }\n      return new constructor(buffer);\n    }\n  });\n  serializableMappingCache.set(value, handle);\n  return handle;\n}\nfunction cloneSynchronizable(value) {\n  serializableMappingCache.set(value);\n  return value;\n}\nfunction cloneImport(value) {\n  var _value$__bundleData = value.__bundleData,\n    source = _value$__bundleData.source,\n    imported = _value$__bundleData.imported;\n  var clone = WorkletsModule.createSerializableImport(source, imported);\n  serializableMappingCache.set(value, clone);\n  serializableMappingCache.set(clone);\n  return clone;\n}\nfunction inaccessibleObject(value) {\n  var clone = createSerializable(INACCESSIBLE_OBJECT);\n  serializableMappingCache.set(value, clone);\n  return clone;\n}\nvar WORKLET_CODE_THRESHOLD = 255;\nfunction getWorkletCode(value) {\n  var _value$__initData;\n  var code = value == null ? void 0 : (_value$__initData = value.__initData) == null ? void 0 : _value$__initData.code;\n  if (!code) {\n    return 'unknown';\n  }\n  if (code.length > WORKLET_CODE_THRESHOLD) {\n    return `${code.substring(0, WORKLET_CODE_THRESHOLD)}...`;\n  }\n  return code;\n}\nfunction isRemoteFunction(value) {\n  'worklet';\n\n  return !!value.__remoteFunction;\n}\nfunction freezeObjectInDev(value) {\n  if (!__DEV__) {\n    return;\n  }\n  Object.entries(value).forEach(function (_ref5) {\n    var _ref6 = _slicedToArray(_ref5, 2),\n      key = _ref6[0],\n      element = _ref6[1];\n    var descriptor = Object.getOwnPropertyDescriptor(value, key);\n    if (!descriptor.configurable) {\n      return;\n    }\n    Object.defineProperty(value, key, {\n      get: function get() {\n        return element;\n      },\n      set: function set() {\n        logger.warn(`Tried to modify key \\`${key}\\` of an object which has been already passed to a worklet. See\n        https://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#tried-to-modify-key-of-an-object-which-has-been-converted-to-a-serializable\n        for more details.`);\n      }\n    });\n  });\n  Object.preventExtensions(value);\n}\nfunction makeShareableCloneOnUIRecursiveLEGACY(value) {\n  'worklet';\n\n  if (SHOULD_BE_USE_WEB) {\n    return value;\n  }\n  function cloneRecursive(value) {\n    if (typeof value === 'object' && value !== null || typeof value === 'function') {\n      if (isHostObject(value)) {\n        return global._createSerializableHostObject(value);\n      }\n      if (isRemoteFunction(value)) {\n        return value.__remoteFunction;\n      }\n      if (Array.isArray(value)) {\n        return global._createSerializableArray(value.map(cloneRecursive));\n      }\n      if (value.__synchronizableRef) {\n        return global._createSerializableSynchronizable(value);\n      }\n      var toAdapt = {};\n      for (var _ref7 of Object.entries(value)) {\n        var _ref8 = _slicedToArray(_ref7, 2);\n        var key = _ref8[0];\n        var element = _ref8[1];\n        toAdapt[key] = cloneRecursive(element);\n      }\n      return global._createSerializable(toAdapt, value);\n    }\n    if (typeof value === 'string') {\n      return global._createSerializableString(value);\n    }\n    if (typeof value === 'number') {\n      return global._createSerializableNumber(value);\n    }\n    if (typeof value === 'boolean') {\n      return global._createSerializableBoolean(value);\n    }\n    if (typeof value === 'bigint') {\n      return global._createSerializableBigInt(value);\n    }\n    if (value === undefined) {\n      return global._createSerializableUndefined();\n    }\n    if (value === null) {\n      return global._createSerializableNull();\n    }\n    return global._createSerializable(value, undefined);\n  }\n  return cloneRecursive(value);\n}\nexport var makeShareableCloneOnUIRecursive = globalThis._WORKLETS_BUNDLE_MODE ? createSerializable : makeShareableCloneOnUIRecursiveLEGACY;\nfunction makeShareableJS(value) {\n  return value;\n}\nfunction makeShareableNative(value) {\n  if (serializableMappingCache.get(value)) {\n    return value;\n  }\n  var handle = createSerializable({\n    __init: function __init() {\n      'worklet';\n\n      return value;\n    }\n  });\n  serializableMappingCache.set(value, handle);\n  return value;\n}\nexport var makeShareable = SHOULD_BE_USE_WEB ? makeShareableJS : makeShareableNative;","map":{"version":3,"names":["_slicedToArray","registerWorkletStackDetails","isSynchronizable","logger","SHOULD_BE_USE_WEB","serializableMappingCache","serializableMappingFlag","jsVersion","isWorkletFunction","WorkletsError","WorkletsModule","MAGIC_KEY","isHostObject","value","isSerializableRef","isPlainJSObject","object","Object","getPrototypeOf","prototype","isTurboModuleLike","getFromCache","cached","get","INACCESSIBLE_OBJECT","__init","Proxy","_","prop","String","set","VALID_ARRAY_VIEWS_NAMES","DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD","processedObjectAtThresholdDepth","createSerializableWeb","createSerializableNative","shouldPersistRemote","arguments","length","undefined","depth","detectCyclicObject","isObject","isFunction","cloneString","cloneNumber","cloneBoolean","cloneBigInt","cloneUndefined","cloneNull","clonePrimitive","Array","isArray","cloneArray","globalThis","_WORKLETS_BUNDLE_MODE","__bundleData","cloneImport","cloneRemoteFunction","cloneTurboModuleLike","cloneHostObject","cloneInitializer","__workletContextObjectFactory","cloneContextObject","cloneWorklet","cloneSynchronizable","clonePlainJSObject","Set","cloneSet","Map","cloneMap","RegExp","cloneRegExp","Error","cloneError","ArrayBuffer","cloneArrayBuffer","isView","cloneArrayBufferView","inaccessibleObject","imported","source","require","resolveWeak","createSerializable","createSerializableString","createSerializableNumber","createSerializableBoolean","createSerializableBigInt","createSerializableUndefined","createSerializableNull","cloneObjectProperties","clonedProps","_ref","entries","_ref2","key","element","__initData","createSerializableInitializer","clonedElements","map","clone","createSerializableArray","freezeObjectInDev","createSerializableFunction","createSerializableHostObject","__DEV__","babelVersion","__pluginVersion","getWorkletCode","__workletHash","__stackDetails","createSerializableWorklet","proto","createSerializableTurboModuleLike","workletContextObjectFactory","handle","createSerializableObject","clonedKeys","clonedValues","_ref3","_ref4","push","createSerializableMap","createSerializableSet","pattern","flags","name","message","stack","error","buffer","typeName","constructor","includes","global","_value$__bundleData","createSerializableImport","WORKLET_CODE_THRESHOLD","_value$__initData","code","substring","isRemoteFunction","__remoteFunction","forEach","_ref5","_ref6","descriptor","getOwnPropertyDescriptor","configurable","defineProperty","warn","preventExtensions","makeShareableCloneOnUIRecursiveLEGACY","cloneRecursive","_createSerializableHostObject","_createSerializableArray","__synchronizableRef","_createSerializableSynchronizable","toAdapt","_ref7","_ref8","_createSerializable","_createSerializableString","_createSerializableNumber","_createSerializableBoolean","_createSerializableBigInt","_createSerializableUndefined","_createSerializableNull","makeShareableCloneOnUIRecursive","makeShareableJS","makeShareableNative","makeShareable"],"sources":["C:\\Users\\User\\Desktop\\Atividade1-Desenvolvimento-Mobile-8-6--Periodo\\backend\\node_modules\\react-native-worklets\\src\\serializable.ts"],"sourcesContent":["'use strict';\nimport { registerWorkletStackDetails } from './errors';\nimport { isSynchronizable } from './isSynchronizable';\nimport { logger } from './logger';\nimport { SHOULD_BE_USE_WEB } from './PlatformChecker';\nimport {\n  serializableMappingCache,\n  serializableMappingFlag,\n} from './serializableMappingCache';\nimport type { Synchronizable } from './synchronizable';\nimport { jsVersion } from './utils/jsVersion';\nimport { isWorkletFunction } from './workletFunction';\nimport { WorkletsError } from './WorkletsError';\nimport { WorkletsModule } from './WorkletsModule';\nimport type {\n  FlatSerializableRef,\n  SerializableRef,\n  WorkletFunction,\n  WorkletImport,\n} from './workletTypes';\n\n// for web and jest environments this file provides a stub implementation\n// where no serializable references are used. Instead, the objects themselves are used\n// instead of serializable references, because of the fact that we don't have to deal with\n// running the code on separate VMs.\n\nconst MAGIC_KEY = 'REANIMATED_MAGIC_KEY';\n\nfunction isHostObject(value: NonNullable<object>) {\n  'worklet';\n  // We could use JSI to determine whether an object is a host object, however\n  // the below workaround works well and is way faster than an additional JSI call.\n  // We use the fact that host objects have broken implementation of `hasOwnProperty`\n  // and hence return true for all `in` checks regardless of the key we ask for.\n  return MAGIC_KEY in value;\n}\n\nexport function isSerializableRef(value: unknown): value is SerializableRef {\n  return (\n    typeof value === 'object' && value !== null && '__serializableRef' in value\n  );\n}\n\nfunction isPlainJSObject(object: object): object is Record<string, unknown> {\n  'worklet';\n  return Object.getPrototypeOf(object) === Object.prototype;\n}\n\nfunction isTurboModuleLike(object: object): object is Record<string, unknown> {\n  return isHostObject(Object.getPrototypeOf(object));\n}\n\nfunction getFromCache(value: object) {\n  const cached = serializableMappingCache.get(value);\n  if (cached === serializableMappingFlag) {\n    // This means that `value` was already a clone and we should return it as is.\n    return value;\n  }\n  return cached;\n}\n\n// The below object is used as a replacement for objects that cannot be transferred\n// as serializable values. In createSerializable we detect if an object is of\n// a plain Object.prototype and only allow such objects to be transferred. This lets\n// us avoid all sorts of react internals from leaking into the UI runtime. To make it\n// possible to catch errors when someone actually tries to access such object on the UI\n// runtime, we use the below Proxy object which is instantiated on the UI runtime and\n// throws whenever someone tries to access its fields.\nconst INACCESSIBLE_OBJECT = {\n  __init: () => {\n    'worklet';\n    return new Proxy(\n      {},\n      {\n        get: (_: unknown, prop: string | symbol) => {\n          if (\n            prop === '_isReanimatedSharedValue' ||\n            prop === '__remoteFunction'\n          ) {\n            // not very happy about this check here, but we need to allow for\n            // \"inaccessible\" objects to be tested with isSerializableRef check\n            // as it is being used in the mappers when extracting inputs recursively\n            // as well as with isRemoteFunction when cloning objects recursively.\n            // Apparently we can't check if a key exists there as HostObjects always\n            // return true for such tests, so the only possibility for us is to\n            // actually access that key and see if it is set to true. We therefore\n            // need to allow for this key to be accessed here.\n            return false;\n          }\n          throw new WorkletsError(\n            `Trying to access property \\`${String(\n              prop\n            )}\\` of an object which cannot be sent to the UI runtime.`\n          );\n        },\n        set: () => {\n          throw new WorkletsError(\n            'Trying to write to an object which cannot be sent to the UI runtime.'\n          );\n        },\n      }\n    );\n  },\n};\n\nconst VALID_ARRAY_VIEWS_NAMES = [\n  'Int8Array',\n  'Uint8Array',\n  'Uint8ClampedArray',\n  'Int16Array',\n  'Uint16Array',\n  'Int32Array',\n  'Uint32Array',\n  'Float32Array',\n  'Float64Array',\n  'BigInt64Array',\n  'BigUint64Array',\n  'DataView',\n];\n\nconst DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD = 30;\n// Below variable stores object that we process in createSerializable at the specified depth.\n// We use it to check if later on the function reenters with the same object\nlet processedObjectAtThresholdDepth: unknown;\n\nfunction createSerializableWeb<T>(value: T): SerializableRef<T> {\n  return value as SerializableRef<T>;\n}\n\nfunction createSerializableNative<T>(\n  value: T,\n  shouldPersistRemote = false,\n  depth = 0\n): SerializableRef<T> {\n  detectCyclicObject(value, depth);\n\n  const isObject = typeof value === 'object';\n  const isFunction = typeof value === 'function';\n\n  if (typeof value === 'string') {\n    return cloneString(value) as SerializableRef<T>;\n  }\n\n  if (typeof value === 'number') {\n    return cloneNumber(value) as SerializableRef<T>;\n  }\n\n  if (typeof value === 'boolean') {\n    return cloneBoolean(value) as SerializableRef<T>;\n  }\n\n  if (typeof value === 'bigint') {\n    return cloneBigInt(value) as SerializableRef<T>;\n  }\n\n  if (value === undefined) {\n    return cloneUndefined() as SerializableRef<T>;\n  }\n\n  if (value === null) {\n    return cloneNull() as SerializableRef<T>;\n  }\n\n  if ((!isObject && !isFunction) || value === null) {\n    return clonePrimitive(value, shouldPersistRemote);\n  }\n\n  const cached = getFromCache(value);\n  if (cached !== undefined) {\n    return cached as SerializableRef<T>;\n  }\n\n  if (Array.isArray(value)) {\n    return cloneArray(value, shouldPersistRemote, depth);\n  }\n  if (\n    globalThis._WORKLETS_BUNDLE_MODE &&\n    isFunction &&\n    (value as WorkletImport).__bundleData\n  ) {\n    return cloneImport(value as WorkletImport) as SerializableRef<T>;\n  }\n  if (isFunction && !isWorkletFunction(value)) {\n    return cloneRemoteFunction(value);\n  }\n  // RN has introduced a new representation of TurboModules as a JS object whose prototype is the host object\n  // More details: https://github.com/facebook/react-native/blob/main/packages/react-native/ReactCommon/react/nativemodule/core/ReactCommon/TurboModuleBinding.cpp#L182\n  if (isTurboModuleLike(value)) {\n    return cloneTurboModuleLike(value, shouldPersistRemote, depth);\n  }\n  if (isHostObject(value)) {\n    return cloneHostObject(value);\n  }\n  if (isPlainJSObject(value) && value.__init) {\n    return cloneInitializer(\n      value,\n      shouldPersistRemote,\n      depth\n    ) as SerializableRef<T>;\n  }\n  if (isPlainJSObject(value) && value.__workletContextObjectFactory) {\n    return cloneContextObject(value);\n  }\n  if ((isPlainJSObject(value) || isFunction) && isWorkletFunction(value)) {\n    return cloneWorklet(value, shouldPersistRemote, depth);\n  }\n  if (isSynchronizable(value)) {\n    return cloneSynchronizable(value) as SerializableRef<T>;\n  }\n  if (isPlainJSObject(value) || isFunction) {\n    return clonePlainJSObject(value, shouldPersistRemote, depth);\n  }\n  if (value instanceof Set) {\n    return cloneSet(value);\n  }\n  if (value instanceof Map) {\n    return cloneMap(value);\n  }\n  if (value instanceof RegExp) {\n    return cloneRegExp(value);\n  }\n  if (value instanceof Error) {\n    return cloneError(value);\n  }\n  if (value instanceof ArrayBuffer) {\n    return cloneArrayBuffer(value, shouldPersistRemote);\n  }\n  if (ArrayBuffer.isView(value)) {\n    // typed array (e.g. Int32Array, Uint8ClampedArray) or DataView\n    return cloneArrayBufferView(value);\n  }\n  return inaccessibleObject(value);\n}\n\nif (globalThis._WORKLETS_BUNDLE_MODE) {\n  // TODO: Do it programatically.\n  createSerializableNative.__bundleData = {\n    imported: 'createSerializable',\n    // @ts-expect-error resolveWeak is defined by Metro\n    source: require.resolveWeak('./index'),\n  };\n}\n\ninterface CreateSerializable {\n  <T>(value: T): SerializableRef<T>;\n  <T>(\n    value: T,\n    shouldPersistRemote: boolean,\n    depth: number\n  ): SerializableRef<T>;\n}\n\nexport const createSerializable: CreateSerializable = SHOULD_BE_USE_WEB\n  ? createSerializableWeb\n  : createSerializableNative;\n\nfunction detectCyclicObject(value: unknown, depth: number) {\n  if (depth >= DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD) {\n    // if we reach certain recursion depth we suspect that we are dealing with a cyclic object.\n    // this type of objects are not supported and cannot be transferred as serializable, so we\n    // implement a simple detection mechanism that remembers the value at a given depth and\n    // tests whether we try reenter this method later on with the same value. If that happens\n    // we throw an appropriate error.\n    if (depth === DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD) {\n      processedObjectAtThresholdDepth = value;\n    } else if (value === processedObjectAtThresholdDepth) {\n      throw new WorkletsError(\n        'Trying to convert a cyclic object to a serializable. This is not supported.'\n      );\n    }\n  } else {\n    processedObjectAtThresholdDepth = undefined;\n  }\n}\n\nfunction clonePrimitive<T>(\n  value: T,\n  shouldPersistRemote: boolean\n): SerializableRef<T> {\n  return WorkletsModule.createSerializable(value, shouldPersistRemote);\n}\n\nfunction cloneString(value: string): SerializableRef<string> {\n  return WorkletsModule.createSerializableString(value);\n}\n\nfunction cloneNumber(value: number): SerializableRef<number> {\n  return WorkletsModule.createSerializableNumber(value);\n}\n\nfunction cloneBoolean(value: boolean): SerializableRef<boolean> {\n  return WorkletsModule.createSerializableBoolean(value);\n}\n\nfunction cloneBigInt(value: bigint): SerializableRef<bigint> {\n  return WorkletsModule.createSerializableBigInt(value);\n}\n\nfunction cloneUndefined(): SerializableRef<undefined> {\n  return WorkletsModule.createSerializableUndefined();\n}\n\nfunction cloneNull(): SerializableRef<null> {\n  return WorkletsModule.createSerializableNull();\n}\n\nfunction cloneObjectProperties<T extends object>(\n  value: T,\n  shouldPersistRemote: boolean,\n  depth: number\n): Record<string, unknown> {\n  const clonedProps: Record<string, unknown> = {};\n  for (const [key, element] of Object.entries(value)) {\n    // We don't need to clone __initData field as it contains long strings\n    // representing the worklet code, source map, and location, and we will\n    // serialize/deserialize it once.\n    if (key === '__initData' && clonedProps.__initData !== undefined) {\n      continue;\n    }\n    clonedProps[key] = createSerializable(\n      element,\n      shouldPersistRemote,\n      depth + 1\n    );\n  }\n  return clonedProps;\n}\n\nfunction cloneInitializer(\n  value: object,\n  shouldPersistRemote = false,\n  depth = 0\n): SerializableRef<object> {\n  const clonedProps: Record<string, unknown> = cloneObjectProperties(\n    value,\n    shouldPersistRemote,\n    depth\n  );\n  return WorkletsModule.createSerializableInitializer(clonedProps);\n}\n\nfunction cloneArray<T extends unknown[]>(\n  value: T,\n  shouldPersistRemote: boolean,\n  depth: number\n): SerializableRef<T> {\n  const clonedElements = value.map((element) =>\n    createSerializable(element, shouldPersistRemote, depth + 1)\n  );\n  const clone = WorkletsModule.createSerializableArray(\n    clonedElements,\n    shouldPersistRemote\n  ) as SerializableRef<T>;\n  serializableMappingCache.set(value, clone);\n  serializableMappingCache.set(clone);\n\n  freezeObjectInDev(value);\n  return clone;\n}\n\nfunction cloneRemoteFunction<TArgs extends unknown[], TReturn>(\n  value: (...args: TArgs) => TReturn\n): SerializableRef<TReturn> {\n  const clone = WorkletsModule.createSerializableFunction(value);\n  serializableMappingCache.set(value, clone);\n  serializableMappingCache.set(clone);\n\n  freezeObjectInDev(value);\n  return clone;\n}\n\nfunction cloneHostObject<T extends object>(value: T): SerializableRef<T> {\n  // for host objects we pass the reference to the object as serializable and\n  // then recreate new host object wrapping the same instance on the UI thread.\n  // there is no point of iterating over keys as we do for regular objects.\n  const clone = WorkletsModule.createSerializableHostObject(value);\n  serializableMappingCache.set(value, clone);\n  serializableMappingCache.set(clone);\n\n  return clone;\n}\n\nfunction cloneWorklet<T extends WorkletFunction>(\n  value: T,\n  shouldPersistRemote: boolean,\n  depth: number\n): SerializableRef<T> {\n  if (__DEV__) {\n    const babelVersion = (value as WorkletFunction).__pluginVersion;\n    if (babelVersion !== undefined && babelVersion !== jsVersion) {\n      throw new WorkletsError(\n        `Mismatch between JavaScript code version and Worklets Babel plugin version (${jsVersion} vs. ${babelVersion}).\n    See \\`https://docs.swmansion.com/react-native-worklets/docs/guides/troubleshooting#mismatch-between-javascript-code-version-and-worklets-babel-plugin-version\\` for more details.\n    Offending code was: \\`${getWorkletCode(value)}\\``\n      );\n    }\n    registerWorkletStackDetails(\n      value.__workletHash,\n      (value as WorkletFunction).__stackDetails!\n    );\n  }\n  if ((value as WorkletFunction).__stackDetails) {\n    // `Error` type of value cannot be copied to the UI thread, so we\n    // remove it after we handled it in dev mode or delete it to ignore it in production mode.\n    // Not removing this would cause an infinite loop in production mode and it just\n    // seems more elegant to handle it this way.\n    delete (value as WorkletFunction).__stackDetails;\n  }\n  const clonedProps: Record<string, unknown> = cloneObjectProperties(\n    value,\n    true,\n    depth\n  );\n  // to save on transferring static __initData field of worklet structure\n  // we request serializable value to persist its UI counterpart. This means\n  // that the __initData field that contains long strings representing the\n  // worklet code, source map, and location, will always be\n  // serialized/deserialized once.\n  clonedProps.__initData = createSerializable(\n    value.__initData,\n    true,\n    depth + 1\n  );\n\n  const clone = WorkletsModule.createSerializableWorklet(\n    clonedProps,\n    // TODO: Check after refactor if we can remove shouldPersistRemote parameter (imho it's redundant here since worklets are always persistent)\n    // retain all worklets\n    true\n  ) as SerializableRef<T>;\n  serializableMappingCache.set(value, clone);\n  serializableMappingCache.set(clone);\n\n  freezeObjectInDev(value);\n  return clone;\n}\n\n/**\n * TurboModuleLike objects are JS objects that have a TurboModule as their\n * prototype.\n */\nfunction cloneTurboModuleLike<T extends object>(\n  value: T,\n  shouldPersistRemote: boolean,\n  depth: number\n): SerializableRef<T> {\n  const proto = Object.getPrototypeOf(value);\n  const clonedProps = cloneObjectProperties(value, shouldPersistRemote, depth);\n  const clone = WorkletsModule.createSerializableTurboModuleLike(\n    clonedProps,\n    proto\n  ) as SerializableRef<T>;\n  return clone;\n}\n\nfunction cloneContextObject<T extends object>(value: T): SerializableRef<T> {\n  const workletContextObjectFactory = (value as Record<string, unknown>)\n    .__workletContextObjectFactory as () => T;\n  const handle = cloneInitializer({\n    __init: () => {\n      'worklet';\n      return workletContextObjectFactory();\n    },\n  });\n  serializableMappingCache.set(value, handle);\n  return handle as SerializableRef<T>;\n}\n\nfunction clonePlainJSObject<T extends object>(\n  value: T,\n  shouldPersistRemote: boolean,\n  depth: number\n): SerializableRef<T> {\n  const clonedProps: Record<string, unknown> = cloneObjectProperties(\n    value,\n    shouldPersistRemote,\n    depth\n  );\n  const clone = WorkletsModule.createSerializableObject(\n    clonedProps,\n    shouldPersistRemote,\n    value\n  ) as SerializableRef<T>;\n  serializableMappingCache.set(value, clone);\n  serializableMappingCache.set(clone);\n\n  freezeObjectInDev(value);\n  return clone;\n}\n\nfunction cloneMap<T extends Map<unknown, unknown>>(\n  value: T\n): SerializableRef<T> {\n  const clonedKeys: unknown[] = [];\n  const clonedValues: unknown[] = [];\n  for (const [key, element] of value.entries()) {\n    clonedKeys.push(createSerializable(key));\n    clonedValues.push(createSerializable(element));\n  }\n  const clone = WorkletsModule.createSerializableMap(\n    clonedKeys,\n    clonedValues\n  ) as SerializableRef<T>;\n  serializableMappingCache.set(value, clone);\n  serializableMappingCache.set(clone);\n\n  freezeObjectInDev(value);\n  return clone;\n}\n\nfunction cloneSet<T extends Set<unknown>>(value: T): SerializableRef<T> {\n  const clonedElements: unknown[] = [];\n  for (const element of value) {\n    clonedElements.push(createSerializable(element));\n  }\n  const clone = WorkletsModule.createSerializableSet(\n    clonedElements\n  ) as SerializableRef<T>;\n  serializableMappingCache.set(value, clone);\n  serializableMappingCache.set(clone);\n\n  freezeObjectInDev(value);\n  return clone;\n}\n\nfunction cloneRegExp<T extends RegExp>(value: T): SerializableRef<T> {\n  const pattern = value.source;\n  const flags = value.flags;\n  const handle = cloneInitializer({\n    __init: () => {\n      'worklet';\n      return new RegExp(pattern, flags);\n    },\n  }) as unknown as SerializableRef<T>;\n  serializableMappingCache.set(value, handle);\n\n  return handle;\n}\n\nfunction cloneError<T extends Error>(value: T): SerializableRef<T> {\n  const { name, message, stack } = value;\n  const handle = cloneInitializer({\n    __init: () => {\n      'worklet';\n      // eslint-disable-next-line reanimated/use-worklets-error\n      const error = new Error();\n      error.name = name;\n      error.message = message;\n      error.stack = stack;\n      return error;\n    },\n  });\n  serializableMappingCache.set(value, handle);\n  return handle as unknown as SerializableRef<T>;\n}\n\nfunction cloneArrayBuffer<T extends ArrayBuffer>(\n  value: T,\n  shouldPersistRemote: boolean\n): SerializableRef<T> {\n  const clone = WorkletsModule.createSerializable(\n    value,\n    shouldPersistRemote,\n    value\n  );\n  serializableMappingCache.set(value, clone);\n  serializableMappingCache.set(clone);\n\n  return clone;\n}\n\nfunction cloneArrayBufferView<T extends ArrayBufferView>(\n  value: T\n): SerializableRef<T> {\n  const buffer = value.buffer;\n  const typeName = value.constructor.name;\n  const handle = cloneInitializer({\n    __init: () => {\n      'worklet';\n      if (!VALID_ARRAY_VIEWS_NAMES.includes(typeName)) {\n        throw new WorkletsError(`Invalid array view name \\`${typeName}\\`.`);\n      }\n      const constructor = global[typeName as keyof typeof global];\n      if (constructor === undefined) {\n        throw new WorkletsError(`Constructor for \\`${typeName}\\` not found.`);\n      }\n      return new constructor(buffer);\n    },\n  }) as unknown as SerializableRef<T>;\n  serializableMappingCache.set(value, handle);\n\n  return handle;\n}\n\nfunction cloneSynchronizable<TValue>(\n  value: Synchronizable<TValue>\n): SerializableRef<TValue> {\n  serializableMappingCache.set(value);\n  return value;\n}\n\nfunction cloneImport<TValue extends WorkletImport>(\n  value: TValue\n): SerializableRef<TValue> {\n  const { source, imported } = value.__bundleData;\n  const clone = WorkletsModule.createSerializableImport(source, imported);\n\n  serializableMappingCache.set(value, clone);\n  serializableMappingCache.set(clone);\n\n  return clone as SerializableRef<TValue>;\n}\n\nfunction inaccessibleObject<T extends object>(value: T): SerializableRef<T> {\n  // This is reached for object types that are not of plain Object.prototype.\n  // We don't support such objects from being transferred as serializables to\n  // the UI runtime and hence we replace them with \"inaccessible object\"\n  // which is implemented as a Proxy object that throws on any attempt\n  // of accessing its fields. We argue that such objects can sometimes leak\n  // as attributes of objects being captured by worklets but should never\n  // be used on the UI runtime regardless. If they are being accessed, the user\n  // will get an appropriate error message.\n  const clone = createSerializable<T>(INACCESSIBLE_OBJECT as T);\n  serializableMappingCache.set(value, clone);\n  return clone;\n}\n\nconst WORKLET_CODE_THRESHOLD = 255;\n\nfunction getWorkletCode(value: WorkletFunction) {\n  const code = value?.__initData?.code;\n  if (!code) {\n    return 'unknown';\n  }\n  if (code.length > WORKLET_CODE_THRESHOLD) {\n    return `${code.substring(0, WORKLET_CODE_THRESHOLD)}...`;\n  }\n  return code;\n}\n\ntype RemoteFunction<T> = {\n  __remoteFunction: FlatSerializableRef<T>;\n};\n\nfunction isRemoteFunction<T>(value: {\n  __remoteFunction?: unknown;\n}): value is RemoteFunction<T> {\n  'worklet';\n  return !!value.__remoteFunction;\n}\n\n/**\n * We freeze\n *\n * - Arrays,\n * - Remote functions,\n * - Plain JS objects,\n *\n * That are transformed to a serializable with a meaningful warning. This should\n * help detect issues when someone modifies data after it's been converted.\n * Meaning that they may be doing a faulty assumption in their code expecting\n * that the updates are going to automatically propagate to the object sent to\n * the UI thread. If the user really wants some objects to be mutable they\n * should use shared values instead.\n */\nfunction freezeObjectInDev<T extends object>(value: T) {\n  if (!__DEV__) {\n    return;\n  }\n  Object.entries(value).forEach(([key, element]) => {\n    const descriptor = Object.getOwnPropertyDescriptor(value, key)!;\n    if (!descriptor.configurable) {\n      return;\n    }\n    Object.defineProperty(value, key, {\n      get() {\n        return element;\n      },\n      set() {\n        logger.warn(\n          `Tried to modify key \\`${key}\\` of an object which has been already passed to a worklet. See\n        https://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#tried-to-modify-key-of-an-object-which-has-been-converted-to-a-serializable\n        for more details.`\n        );\n      },\n    });\n  });\n  Object.preventExtensions(value);\n}\n\nfunction makeShareableCloneOnUIRecursiveLEGACY<T>(\n  value: T\n): FlatSerializableRef<T> {\n  'worklet';\n  if (SHOULD_BE_USE_WEB) {\n    // @ts-ignore web is an interesting place where we don't run a secondary VM on the UI thread\n    // see more details in the comment where USE_STUB_IMPLEMENTATION is defined.\n    return value;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  function cloneRecursive(value: T): FlatSerializableRef<T> {\n    if (\n      (typeof value === 'object' && value !== null) ||\n      typeof value === 'function'\n    ) {\n      if (isHostObject(value)) {\n        // We call `_createSerializableClone` to wrap the provided HostObject\n        // inside SerializableJSRef.\n        return global._createSerializableHostObject(\n          value\n        ) as FlatSerializableRef<T>;\n      }\n      if (isRemoteFunction<T>(value)) {\n        // RemoteFunctions are created by us therefore they are\n        // a Serializable out of the box and there is no need to\n        // call `_createSerializableClone`.\n        return value.__remoteFunction;\n      }\n      if (Array.isArray(value)) {\n        return global._createSerializableArray(\n          value.map(cloneRecursive)\n        ) as FlatSerializableRef<T>;\n      }\n      if ((value as Record<string, unknown>).__synchronizableRef) {\n        return global._createSerializableSynchronizable(\n          value\n        ) as FlatSerializableRef<T>;\n      }\n      const toAdapt: Record<string, FlatSerializableRef<T>> = {};\n      for (const [key, element] of Object.entries(value)) {\n        toAdapt[key] = cloneRecursive(element);\n      }\n      return global._createSerializable(\n        toAdapt,\n        value\n      ) as FlatSerializableRef<T>;\n    }\n\n    if (typeof value === 'string') {\n      return global._createSerializableString(value);\n    }\n\n    if (typeof value === 'number') {\n      return global._createSerializableNumber(value);\n    }\n\n    if (typeof value === 'boolean') {\n      return global._createSerializableBoolean(value);\n    }\n\n    if (typeof value === 'bigint') {\n      return global._createSerializableBigInt(value);\n    }\n\n    if (value === undefined) {\n      return global._createSerializableUndefined();\n    }\n\n    if (value === null) {\n      return global._createSerializableNull();\n    }\n\n    return global._createSerializable(value, undefined);\n  }\n  return cloneRecursive(value);\n}\n\n/** @deprecated This function is no longer supported. */\nexport const makeShareableCloneOnUIRecursive = (\n  globalThis._WORKLETS_BUNDLE_MODE\n    ? createSerializable\n    : makeShareableCloneOnUIRecursiveLEGACY\n) as typeof makeShareableCloneOnUIRecursiveLEGACY;\n\nfunction makeShareableJS<T>(value: T): T {\n  return value;\n}\n\nfunction makeShareableNative<T extends object>(value: T): T {\n  if (serializableMappingCache.get(value)) {\n    return value;\n  }\n  const handle = createSerializable({\n    __init: () => {\n      'worklet';\n      return value;\n    },\n  });\n  serializableMappingCache.set(value, handle);\n  return value;\n}\n\n/**\n * This function creates a value on UI with persistent state - changes to it on\n * the UI thread will be seen by all worklets. Use it when you want to create a\n * value that is read and written only on the UI thread.\n */\n/** @deprecated This function is no longer supported. */\nexport const makeShareable = SHOULD_BE_USE_WEB\n  ? makeShareableJS\n  : makeShareableNative;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}