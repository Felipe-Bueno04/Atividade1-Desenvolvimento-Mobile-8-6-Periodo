{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { ReanimatedError } from \"../../../../common\";\nimport { isAngle, isNumber, isNumberArray, isPercentage } from \"../../../utils\";\nexport var ERROR_MESSAGES = {\n  invalidTransform: function invalidTransform(transform) {\n    return `Invalid transform property: ${transform}`;\n  }\n};\nvar parseTransformProperty = function parseTransformProperty(transform) {\n  var _transform$split = transform.split(/\\(\\s*/),\n    _transform$split2 = _slicedToArray(_transform$split, 2),\n    key = _transform$split2[0],\n    valueString = _transform$split2[1];\n  var values = parseValues(valueString.replace(/\\)$/g, ''));\n  switch (key) {\n    case 'translate':\n      return parseTranslate(values);\n    case 'translateX':\n      return parseTranslateX(values);\n    case 'translateY':\n      return parseTranslateY(values);\n    case 'scale':\n      return parseScale(values);\n    case 'scaleX':\n      return parseScaleX(values);\n    case 'scaleY':\n      return parseScaleY(values);\n    case 'rotate':\n    case 'rotateX':\n    case 'rotateY':\n    case 'rotateZ':\n      return parseRotate(key, values);\n    case 'skew':\n      return parseSkew(values);\n    case 'skewX':\n      return parseSkewX(values);\n    case 'skewY':\n      return parseSkewY(values);\n    case 'matrix':\n      return parseMatrix(values);\n    default:\n      return [];\n  }\n};\nfunction parseValues(valueString) {\n  return valueString.split(',').map(function (value) {\n    var trimmedValue = value.trim();\n    if (['deg', 'rad', '%'].some(function (unit) {\n      return trimmedValue.endsWith(unit);\n    })) {\n      return trimmedValue;\n    }\n    var numValue = parseFloat(trimmedValue);\n    return isNaN(numValue) ? trimmedValue : numValue;\n  });\n}\nfunction parseTranslate(values) {\n  var _values$;\n  if (values.length > 2) {\n    return [];\n  }\n  var result = parseTranslateX([values[0]]).concat(parseTranslateY([(_values$ = values[1]) != null ? _values$ : values[0]]));\n  return result.length === 2 ? result : [];\n}\nfunction parseTranslateX(values) {\n  return values.length === 1 && (isNumber(values[0]) || isPercentage(values[0])) ? [{\n    translateX: values[0]\n  }] : [];\n}\nfunction parseTranslateY(values) {\n  return values.length === 1 && (isNumber(values[0]) || isPercentage(values[0])) ? [{\n    translateY: values[0]\n  }] : [];\n}\nfunction parseScale(values) {\n  var _values$2;\n  if (values.length > 2) {\n    return [];\n  }\n  if (values.length === 1) {\n    return isNumber(values[0]) ? [{\n      scale: values[0]\n    }] : [];\n  }\n  var result = parseScaleX([values[0]]).concat(parseScaleY([(_values$2 = values[1]) != null ? _values$2 : values[0]]));\n  return result.length === 2 ? result : [];\n}\nfunction parseScaleX(values) {\n  return values.length === 1 && isNumber(values[0]) ? [{\n    scaleX: values[0]\n  }] : [];\n}\nfunction parseScaleY(values) {\n  return values.length === 1 && isNumber(values[0]) ? [{\n    scaleY: values[0]\n  }] : [];\n}\nfunction parseRotate(key, values) {\n  return values.length === 1 && (isAngle(values[0]) || values[0] === 0) ? [_defineProperty({}, key, values[0] === 0 ? '0deg' : values[0])] : [];\n}\nfunction parseSkew(values) {\n  var _values$3;\n  if (values.length > 2) {\n    return [];\n  }\n  var result = parseSkewX([values[0]]).concat(parseSkewY([(_values$3 = values[1]) != null ? _values$3 : values[0]]));\n  return result.length === 2 ? result : [];\n}\nfunction parseSkewX(values) {\n  return values.length === 1 && (isAngle(values[0]) || values[0] === 0) ? [{\n    skewX: values[0] === 0 ? '0deg' : values[0]\n  }] : [];\n}\nfunction parseSkewY(values) {\n  return values.length === 1 && (isAngle(values[0]) || values[0] === 0) ? [{\n    skewY: values[0] === 0 ? '0deg' : values[0]\n  }] : [];\n}\nfunction parseMatrix(values) {\n  var matrixValues = [];\n  if (isNumberArray(values)) {\n    if (values.length === 6) {\n      matrixValues = [values[0], values[1], 0, 0, values[2], values[3], 0, 0, 0, 0, 1, 0, values[4], values[5], 0, 1];\n    } else if (values.length === 16) {\n      matrixValues = values;\n    }\n  }\n  return matrixValues.length > 0 ? [{\n    matrix: matrixValues\n  }] : [];\n}\nexport var processTransform = function processTransform(value) {\n  if (typeof value !== 'string') {\n    return value;\n  }\n  return value.split(/\\)\\s*/).filter(Boolean).flatMap(function (part) {\n    var parsed = parseTransformProperty(part);\n    if (parsed.length === 0) {\n      throw new ReanimatedError(ERROR_MESSAGES.invalidTransform(`${part})`));\n    }\n    return parsed;\n  });\n};","map":{"version":3,"names":["_defineProperty","_slicedToArray","ReanimatedError","isAngle","isNumber","isNumberArray","isPercentage","ERROR_MESSAGES","invalidTransform","transform","parseTransformProperty","_transform$split","split","_transform$split2","key","valueString","values","parseValues","replace","parseTranslate","parseTranslateX","parseTranslateY","parseScale","parseScaleX","parseScaleY","parseRotate","parseSkew","parseSkewX","parseSkewY","parseMatrix","map","value","trimmedValue","trim","some","unit","endsWith","numValue","parseFloat","isNaN","_values$","length","result","concat","translateX","translateY","_values$2","scale","scaleX","scaleY","_values$3","skewX","skewY","matrixValues","matrix","processTransform","filter","Boolean","flatMap","part","parsed"],"sources":["C:\\Users\\User\\Desktop\\Atividade1-Desenvolvimento-Mobile-8-6--Periodo\\backend\\node_modules\\react-native-reanimated\\src\\css\\native\\style\\processors\\transform.ts"],"sourcesContent":["'use strict';\nimport { ReanimatedError } from '../../../../common';\nimport type { TransformsArray } from '../../../types';\nimport { isAngle, isNumber, isNumberArray, isPercentage } from '../../../utils';\nimport type { ValueProcessor } from '../types';\n\nexport const ERROR_MESSAGES = {\n  invalidTransform: (transform: string) =>\n    `Invalid transform property: ${transform}`,\n};\n\nconst parseTransformProperty = (transform: string): TransformsArray => {\n  const [key, valueString] = transform.split(/\\(\\s*/);\n  const values = parseValues(valueString.replace(/\\)$/g, ''));\n\n  switch (key) {\n    case 'translate':\n      return parseTranslate(values);\n    case 'translateX':\n      return parseTranslateX(values);\n    case 'translateY':\n      return parseTranslateY(values);\n    case 'scale':\n      return parseScale(values);\n    case 'scaleX':\n      return parseScaleX(values);\n    case 'scaleY':\n      return parseScaleY(values);\n    case 'rotate':\n    case 'rotateX':\n    case 'rotateY':\n    case 'rotateZ':\n      return parseRotate(key, values);\n    case 'skew':\n      return parseSkew(values);\n    case 'skewX':\n      return parseSkewX(values);\n    case 'skewY':\n      return parseSkewY(values);\n    case 'matrix':\n      return parseMatrix(values);\n    default:\n      return [];\n  }\n};\n\nfunction parseValues(valueString: string): (string | number)[] {\n  return valueString.split(',').map((value) => {\n    const trimmedValue = value.trim();\n    if (['deg', 'rad', '%'].some((unit) => trimmedValue.endsWith(unit))) {\n      return trimmedValue;\n    }\n    const numValue = parseFloat(trimmedValue);\n    return isNaN(numValue) ? trimmedValue : numValue;\n  });\n}\n\nfunction parseTranslate(values: (number | string)[]): TransformsArray {\n  if (values.length > 2) {\n    return [];\n  }\n  const result = parseTranslateX([values[0]]).concat(\n    parseTranslateY([values[1] ?? values[0]])\n  );\n  return result.length === 2 ? result : [];\n}\n\nfunction parseTranslateX(values: (number | string)[]): TransformsArray {\n  return values.length === 1 && (isNumber(values[0]) || isPercentage(values[0]))\n    ? [{ translateX: values[0] }]\n    : [];\n}\n\nfunction parseTranslateY(values: (number | string)[]): TransformsArray {\n  return values.length === 1 && (isNumber(values[0]) || isPercentage(values[0]))\n    ? [{ translateY: values[0] }]\n    : [];\n}\n\nfunction parseScale(values: (number | string)[]): TransformsArray {\n  if (values.length > 2) {\n    return [];\n  }\n  if (values.length === 1) {\n    return isNumber(values[0]) ? [{ scale: values[0] }] : [];\n  }\n  const result = parseScaleX([values[0]]).concat(\n    parseScaleY([values[1] ?? values[0]])\n  );\n  return result.length === 2 ? result : [];\n}\n\nfunction parseScaleX(values: (number | string)[]): TransformsArray {\n  return values.length === 1 && isNumber(values[0])\n    ? [{ scaleX: values[0] }]\n    : [];\n}\n\nfunction parseScaleY(values: (number | string)[]): TransformsArray {\n  return values.length === 1 && isNumber(values[0])\n    ? [{ scaleY: values[0] }]\n    : [];\n}\n\nfunction parseRotate(\n  key: string,\n  values: (string | number)[]\n): TransformsArray {\n  return values.length === 1 && (isAngle(values[0]) || values[0] === 0)\n    ? ([\n        { [key]: values[0] === 0 ? '0deg' : values[0] },\n      ] as unknown as TransformsArray)\n    : [];\n}\n\nfunction parseSkew(values: (number | string)[]): TransformsArray {\n  if (values.length > 2) {\n    return [];\n  }\n  const result = parseSkewX([values[0]]).concat(\n    parseSkewY([values[1] ?? values[0]])\n  );\n  return result.length === 2 ? result : [];\n}\n\nfunction parseSkewX(values: (number | string)[]): TransformsArray {\n  return values.length === 1 && (isAngle(values[0]) || values[0] === 0)\n    ? [{ skewX: values[0] === 0 ? '0deg' : values[0] }]\n    : [];\n}\n\nfunction parseSkewY(values: (number | string)[]): TransformsArray {\n  return values.length === 1 && (isAngle(values[0]) || values[0] === 0)\n    ? [{ skewY: values[0] === 0 ? '0deg' : values[0] }]\n    : [];\n}\n\nfunction parseMatrix(values: (number | string)[]): TransformsArray {\n  let matrixValues: number[] = [];\n\n  if (isNumberArray(values)) {\n    if (values.length === 6) {\n      // prettier-ignore\n      matrixValues = [\n        values[0], values[1], 0, 0,\n        values[2], values[3], 0, 0,\n        0,         0,         1, 0,\n        values[4], values[5], 0, 1\n      ];\n    } else if (values.length === 16) {\n      matrixValues = values;\n    }\n  }\n\n  return matrixValues.length > 0 ? [{ matrix: matrixValues }] : [];\n}\n\nexport const processTransform: ValueProcessor<TransformsArray | string> = (\n  value\n) => {\n  if (typeof value !== 'string') {\n    return value;\n  }\n\n  return value\n    .split(/\\)\\s*/)\n    .filter(Boolean)\n    .flatMap((part) => {\n      const parsed = parseTransformProperty(part);\n\n      if (parsed.length === 0) {\n        throw new ReanimatedError(ERROR_MESSAGES.invalidTransform(`${part})`));\n      }\n\n      return parsed;\n    });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}