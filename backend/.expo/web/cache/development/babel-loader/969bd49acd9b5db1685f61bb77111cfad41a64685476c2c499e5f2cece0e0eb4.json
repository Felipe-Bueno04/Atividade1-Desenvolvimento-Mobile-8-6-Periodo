{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { registerCSSKeyframes, unregisterCSSKeyframes } from \"../proxy\";\nvar CSSKeyframesRegistry = function () {\n  function CSSKeyframesRegistry() {\n    _classCallCheck(this, CSSKeyframesRegistry);\n    this.cssTextToNameMap_ = new Map();\n    this.nameToKeyframes_ = new Map();\n  }\n  return _createClass(CSSKeyframesRegistry, [{\n    key: \"get\",\n    value: function get(nameOrCssText) {\n      var result = this.nameToKeyframes_.get(nameOrCssText);\n      if (result) {\n        return result.keyframesRule;\n      }\n      var animationName = this.cssTextToNameMap_.get(nameOrCssText);\n      if (animationName) {\n        var _this$nameToKeyframes;\n        return (_this$nameToKeyframes = this.nameToKeyframes_.get(animationName)) == null ? void 0 : _this$nameToKeyframes.keyframesRule;\n      }\n    }\n  }, {\n    key: \"add\",\n    value: function add(keyframesRule, viewName, viewTag) {\n      var existingKeyframesEntry = this.nameToKeyframes_.get(keyframesRule.name);\n      var existingComponentEntry = existingKeyframesEntry == null ? void 0 : existingKeyframesEntry.usedBy[viewName];\n      if (existingComponentEntry) {\n        existingComponentEntry.add(viewTag);\n        return;\n      }\n      if (existingKeyframesEntry) {\n        existingKeyframesEntry.usedBy[viewName] = new Set([viewTag]);\n      } else {\n        this.nameToKeyframes_.set(keyframesRule.name, {\n          keyframesRule: keyframesRule,\n          usedBy: _defineProperty({}, viewName, new Set([viewTag]))\n        });\n      }\n      this.cssTextToNameMap_.set(keyframesRule.cssText, keyframesRule.name);\n      registerCSSKeyframes(keyframesRule.name, viewName, keyframesRule.getNormalizedKeyframesConfig(viewName));\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(animationName, viewName, viewTag) {\n      var keyframesEntry = this.nameToKeyframes_.get(animationName);\n      if (!keyframesEntry) {\n        return;\n      }\n      var componentEntry = keyframesEntry.usedBy[viewName];\n      componentEntry.delete(viewTag);\n      if (componentEntry.size === 0) {\n        delete keyframesEntry.usedBy[viewName];\n        unregisterCSSKeyframes(animationName, viewName);\n      }\n      if (Object.keys(keyframesEntry.usedBy).length === 0) {\n        this.nameToKeyframes_.delete(animationName);\n        this.cssTextToNameMap_.delete(keyframesEntry.keyframesRule.cssText);\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.nameToKeyframes_.clear();\n      this.cssTextToNameMap_.clear();\n    }\n  }]);\n}();\nvar cssKeyframesRegistry = new CSSKeyframesRegistry();\nexport default cssKeyframesRegistry;","map":{"version":3,"names":["_defineProperty","_classCallCheck","_createClass","registerCSSKeyframes","unregisterCSSKeyframes","CSSKeyframesRegistry","cssTextToNameMap_","Map","nameToKeyframes_","key","value","get","nameOrCssText","result","keyframesRule","animationName","_this$nameToKeyframes","add","viewName","viewTag","existingKeyframesEntry","name","existingComponentEntry","usedBy","Set","set","cssText","getNormalizedKeyframesConfig","remove","keyframesEntry","componentEntry","delete","size","Object","keys","length","clear","cssKeyframesRegistry"],"sources":["C:\\Users\\User\\Desktop\\Atividade1-Desenvolvimento-Mobile-8-6--Periodo\\backend\\node_modules\\react-native-reanimated\\src\\css\\native\\keyframes\\CSSKeyframesRegistry.ts"],"sourcesContent":["'use strict';\nimport { registerCSSKeyframes, unregisterCSSKeyframes } from '../proxy';\nimport type CSSKeyframesRuleImpl from './CSSKeyframesRuleImpl';\n\ntype KeyframesEntry = {\n  keyframesRule: CSSKeyframesRuleImpl;\n  usedBy: Record<string, Set<number>>;\n};\n\n/**\n * This class is responsible for managing the registry of CSS animation\n * keyframes. It keeps track of views that use specific animations and handles\n * native-side registration. Animation keyframes are registered on the native\n * side only when used for the first time and unregistered when removed from the\n * last view that uses them.\n */\nclass CSSKeyframesRegistry {\n  private readonly cssTextToNameMap_: Map<string, string> = new Map();\n  private readonly nameToKeyframes_: Map<string, KeyframesEntry> = new Map();\n\n  get(nameOrCssText: string) {\n    const result = this.nameToKeyframes_.get(nameOrCssText);\n    if (result) {\n      return result.keyframesRule;\n    }\n\n    const animationName = this.cssTextToNameMap_.get(nameOrCssText);\n    if (animationName) {\n      return this.nameToKeyframes_.get(animationName)?.keyframesRule;\n    }\n  }\n\n  add(keyframesRule: CSSKeyframesRuleImpl, viewName: string, viewTag: number) {\n    const existingKeyframesEntry = this.nameToKeyframes_.get(\n      keyframesRule.name\n    );\n    const existingComponentEntry = existingKeyframesEntry?.usedBy[viewName];\n\n    if (existingComponentEntry) {\n      // Just add the view tag to the existing component entry if keyframes\n      // for the specific animation and component name are already registered\n      existingComponentEntry.add(viewTag);\n      return;\n    }\n\n    // Otherwise, we have to register keyframes preprocessed for the specific\n    // component name\n    if (existingKeyframesEntry) {\n      existingKeyframesEntry.usedBy[viewName] = new Set([viewTag]);\n    } else {\n      this.nameToKeyframes_.set(keyframesRule.name, {\n        keyframesRule,\n        usedBy: { [viewName]: new Set([viewTag]) },\n      });\n    }\n\n    // Store the keyframes to name mapping in order to reuse the same\n    // animation name when possible (when the same inline keyframes object\n    // is used)\n    this.cssTextToNameMap_.set(keyframesRule.cssText, keyframesRule.name);\n\n    // Register animation keyframes only if they are not already registered\n    // (when they are added for the first time)\n    registerCSSKeyframes(\n      keyframesRule.name,\n      viewName,\n      keyframesRule.getNormalizedKeyframesConfig(viewName)\n    );\n  }\n\n  remove(animationName: string, viewName: string, viewTag: number) {\n    const keyframesEntry = this.nameToKeyframes_.get(animationName);\n    if (!keyframesEntry) {\n      return;\n    }\n\n    const componentEntry = keyframesEntry.usedBy[viewName];\n    componentEntry.delete(viewTag);\n\n    if (componentEntry.size === 0) {\n      delete keyframesEntry.usedBy[viewName];\n      unregisterCSSKeyframes(animationName, viewName);\n    }\n\n    if (Object.keys(keyframesEntry.usedBy).length === 0) {\n      this.nameToKeyframes_.delete(animationName);\n      this.cssTextToNameMap_.delete(keyframesEntry.keyframesRule.cssText);\n    }\n  }\n\n  clear() {\n    this.nameToKeyframes_.clear();\n    this.cssTextToNameMap_.clear();\n  }\n}\n\nconst cssKeyframesRegistry = new CSSKeyframesRegistry();\n\nexport default cssKeyframesRegistry;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}