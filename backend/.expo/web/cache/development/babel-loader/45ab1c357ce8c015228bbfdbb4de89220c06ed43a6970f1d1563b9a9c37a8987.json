{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport { Component } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { IS_JEST, ReanimatedError, SHOULD_BE_USE_WEB } from \"../../common\";\nimport { getViewInfo } from \"../../createAnimatedComponent/getViewInfo\";\nimport { getShadowNodeWrapperFromRef } from \"../../fabricUtils\";\nimport { findHostInstance } from \"../../platform-specific/findHostInstance\";\nimport { markNodeAsRemovable, unmarkNodeAsRemovable } from \"../native\";\nimport { CSSManager } from \"../platform\";\nimport { filterNonCSSStyleProps } from \"./utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar AnimatedComponent = function (_Component) {\n  function AnimatedComponent(ChildComponent, props) {\n    var _this;\n    _classCallCheck(this, AnimatedComponent);\n    _this = _callSuper(this, AnimatedComponent, [props]);\n    _this._cssStyle = {};\n    _this._componentRef = null;\n    _this._hasAnimatedRef = false;\n    _this._componentDOMRef = null;\n    _this._willUnmount = false;\n    _this._setComponentRef = function (ref) {\n      var forwardedRef = _this.props.forwardedRef;\n      if (typeof forwardedRef === 'function') {\n        forwardedRef(ref);\n      } else if (typeof forwardedRef === 'object' && forwardedRef) {\n        forwardedRef.current = ref;\n      }\n      if (!ref) {\n        return;\n      }\n      if (ref !== _this._componentRef) {\n        _this._componentRef = _this._resolveComponentRef(ref);\n        _this._viewInfo = undefined;\n      }\n      _this._onSetLocalRef();\n    };\n    _this._resolveComponentRef = function (ref) {\n      var componentRef = ref;\n      if (componentRef && componentRef.getAnimatableRef) {\n        _this._hasAnimatedRef = true;\n        return componentRef.getAnimatableRef();\n      }\n      if (SHOULD_BE_USE_WEB) {\n        if (componentRef && componentRef.elementRef) {\n          _this._componentDOMRef = componentRef.elementRef.current;\n        } else {\n          _this._componentDOMRef = ref;\n        }\n      }\n      return componentRef;\n    };\n    _this.ChildComponent = ChildComponent;\n    return _this;\n  }\n  _inherits(AnimatedComponent, _Component);\n  return _createClass(AnimatedComponent, [{\n    key: \"getComponentViewTag\",\n    value: function getComponentViewTag() {\n      return this._getViewInfo().viewTag;\n    }\n  }, {\n    key: \"_onSetLocalRef\",\n    value: function _onSetLocalRef() {}\n  }, {\n    key: \"_getViewInfo\",\n    value: function _getViewInfo() {\n      if (this._viewInfo !== undefined) {\n        return this._viewInfo;\n      }\n      var viewTag;\n      var shadowNodeWrapper = null;\n      var DOMElement = null;\n      var viewName;\n      if (SHOULD_BE_USE_WEB) {\n        viewTag = this._componentRef;\n        DOMElement = this._componentDOMRef;\n      } else {\n        var _viewInfo$viewTag;\n        var hostInstance = findHostInstance(this);\n        if (!hostInstance) {\n          throw new ReanimatedError('Cannot find host instance for this component. Maybe it renders nothing?');\n        }\n        var viewInfo = getViewInfo(hostInstance);\n        viewTag = (_viewInfo$viewTag = viewInfo.viewTag) != null ? _viewInfo$viewTag : -1;\n        viewName = viewInfo.viewName;\n        shadowNodeWrapper = getShadowNodeWrapperFromRef(this, hostInstance);\n      }\n      this._viewInfo = {\n        viewTag: viewTag,\n        shadowNodeWrapper: shadowNodeWrapper,\n        viewName: viewName\n      };\n      if (DOMElement) {\n        this._viewInfo.DOMElement = DOMElement;\n      }\n      return this._viewInfo;\n    }\n  }, {\n    key: \"_updateStyles\",\n    value: function _updateStyles(props) {\n      var _StyleSheet$flatten;\n      this._cssStyle = (_StyleSheet$flatten = StyleSheet.flatten(props.style)) != null ? _StyleSheet$flatten : {};\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$_viewInfo;\n      this._updateStyles(this.props);\n      var viewTag = (_this$_viewInfo = this._viewInfo) == null ? void 0 : _this$_viewInfo.viewTag;\n      if (!SHOULD_BE_USE_WEB && this._willUnmount && typeof viewTag === 'number') {\n        unmarkNodeAsRemovable(viewTag);\n      }\n      if (!IS_JEST) {\n        var _this$_CSSManager;\n        this._CSSManager ??= new CSSManager(this._getViewInfo());\n        (_this$_CSSManager = this._CSSManager) == null ? void 0 : _this$_CSSManager.update(this._cssStyle);\n      }\n      this._willUnmount = false;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this$_viewInfo2;\n      if (!IS_JEST && this._CSSManager) {\n        this._CSSManager.unmountCleanup();\n      }\n      var wrapper = (_this$_viewInfo2 = this._viewInfo) == null ? void 0 : _this$_viewInfo2.shadowNodeWrapper;\n      if (!SHOULD_BE_USE_WEB && wrapper) {\n        markNodeAsRemovable(wrapper);\n      }\n      this._willUnmount = true;\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      this._updateStyles(nextProps);\n      if (this._CSSManager) {\n        this._CSSManager.update(this._cssStyle);\n      }\n      return true;\n    }\n  }, {\n    key: \"render\",\n    value: function render(props) {\n      var _props$style;\n      var ChildComponent = this.ChildComponent;\n      var platformProps = Platform.select({\n        web: {},\n        default: {\n          collapsable: false\n        }\n      });\n      return _jsx(ChildComponent, _objectSpread(_objectSpread(_objectSpread({}, props != null ? props : this.props), platformProps), {}, {\n        style: filterNonCSSStyleProps((_props$style = props == null ? void 0 : props.style) != null ? _props$style : this.props.style),\n        ref: this._setComponentRef\n      }));\n    }\n  }]);\n}(Component);\nexport { AnimatedComponent as default };","map":{"version":3,"names":["_defineProperty","_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_inherits","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","_callSuper","_isNativeReflectConstruct","Reflect","construct","constructor","Boolean","prototype","valueOf","call","Component","Platform","StyleSheet","IS_JEST","ReanimatedError","SHOULD_BE_USE_WEB","getViewInfo","getShadowNodeWrapperFromRef","findHostInstance","markNodeAsRemovable","unmarkNodeAsRemovable","CSSManager","filterNonCSSStyleProps","jsx","_jsx","AnimatedComponent","_Component","ChildComponent","props","_this","_cssStyle","_componentRef","_hasAnimatedRef","_componentDOMRef","_willUnmount","_setComponentRef","ref","forwardedRef","current","_resolveComponentRef","_viewInfo","undefined","_onSetLocalRef","componentRef","getAnimatableRef","elementRef","key","value","getComponentViewTag","_getViewInfo","viewTag","shadowNodeWrapper","DOMElement","viewName","_viewInfo$viewTag","hostInstance","viewInfo","_updateStyles","_StyleSheet$flatten","flatten","style","componentDidMount","_this$_viewInfo","_this$_CSSManager","_CSSManager","update","componentWillUnmount","_this$_viewInfo2","unmountCleanup","wrapper","shouldComponentUpdate","nextProps","render","_props$style","platformProps","select","web","default","collapsable"],"sources":["C:\\Users\\User\\Desktop\\Atividade1-Desenvolvimento-Mobile-8-6--Periodo\\backend\\node_modules\\react-native-reanimated\\src\\css\\component\\AnimatedComponent.tsx"],"sourcesContent":["'use strict';\nimport type { ComponentProps, Ref } from 'react';\nimport { Component } from 'react';\nimport type { StyleProp } from 'react-native';\nimport { Platform, StyleSheet } from 'react-native';\n\nimport { IS_JEST, ReanimatedError, SHOULD_BE_USE_WEB } from '../../common';\nimport type { ShadowNodeWrapper, WrapperRef } from '../../commonTypes';\nimport type {\n  AnimatedComponentRef,\n  IAnimatedComponentInternalBase,\n  ViewInfo,\n} from '../../createAnimatedComponent/commonTypes';\nimport { getViewInfo } from '../../createAnimatedComponent/getViewInfo';\nimport { getShadowNodeWrapperFromRef } from '../../fabricUtils';\nimport { findHostInstance } from '../../platform-specific/findHostInstance';\nimport { markNodeAsRemovable, unmarkNodeAsRemovable } from '../native';\nimport { CSSManager } from '../platform';\nimport type { AnyComponent, AnyRecord, CSSStyle, PlainStyle } from '../types';\nimport { filterNonCSSStyleProps } from './utils';\n\nexport type AnimatedComponentProps = Record<string, unknown> & {\n  ref?: Ref<Component>;\n  style?: StyleProp<PlainStyle>;\n};\n\n// TODO - change these ugly underscore prefixed methods and properties to real\n// private/protected ones when possible (when changes from this repo are merged\n// to the main one)\nexport default class AnimatedComponent<\n    P extends AnyRecord = AnimatedComponentProps,\n  >\n  extends Component<P>\n  implements IAnimatedComponentInternalBase\n{\n  ChildComponent: AnyComponent;\n\n  _CSSManager?: CSSManager;\n\n  _viewInfo?: ViewInfo;\n  _cssStyle: CSSStyle = {}; // RN style object with Reanimated CSS properties\n  _componentRef: AnimatedComponentRef | HTMLElement | null = null;\n  _hasAnimatedRef = false;\n  // Used only on web\n  _componentDOMRef: HTMLElement | null = null;\n  _willUnmount: boolean = false;\n\n  constructor(ChildComponent: AnyComponent, props: P) {\n    super(props);\n    this.ChildComponent = ChildComponent;\n  }\n\n  getComponentViewTag() {\n    return this._getViewInfo().viewTag as number;\n  }\n\n  _onSetLocalRef() {\n    // noop - can be overridden in subclasses\n  }\n\n  _getViewInfo(): ViewInfo {\n    if (this._viewInfo !== undefined) {\n      return this._viewInfo;\n    }\n\n    let viewTag: number | typeof this._componentRef;\n    let shadowNodeWrapper: ShadowNodeWrapper | null = null;\n    let DOMElement: HTMLElement | null = null;\n    let viewName: string | undefined;\n\n    if (SHOULD_BE_USE_WEB) {\n      // At this point we assume that `_setComponentRef` was already called and `_component` is set.\n      // `this._component` on web represents HTMLElement of our component, that's why we use casting\n      // TODO - implement a valid solution later on - this is a temporary fix\n      viewTag = this._componentRef;\n      DOMElement = this._componentDOMRef;\n    } else {\n      const hostInstance = findHostInstance(this);\n      if (!hostInstance) {\n        /* \n          findHostInstance can return null for a component that doesn't render anything \n          (render function returns null). Example: \n          svg Stop: https://github.com/react-native-svg/react-native-svg/blob/develop/src/elements/Stop.tsx\n        */\n        throw new ReanimatedError(\n          'Cannot find host instance for this component. Maybe it renders nothing?'\n        );\n      }\n\n      const viewInfo = getViewInfo(hostInstance);\n      viewTag = viewInfo.viewTag ?? -1;\n      viewName = viewInfo.viewName;\n      shadowNodeWrapper = getShadowNodeWrapperFromRef(\n        this as WrapperRef,\n        hostInstance\n      );\n    }\n    this._viewInfo = { viewTag, shadowNodeWrapper, viewName };\n    if (DOMElement) {\n      this._viewInfo.DOMElement = DOMElement;\n    }\n\n    return this._viewInfo;\n  }\n\n  _setComponentRef = (ref: Component | HTMLElement) => {\n    const forwardedRef = this.props.forwardedRef;\n    // Forward to user ref prop (if one has been specified)\n    if (typeof forwardedRef === 'function') {\n      // Handle function-based refs. String-based refs are handled as functions.\n      forwardedRef(ref);\n    } else if (typeof forwardedRef === 'object' && forwardedRef) {\n      // Handle createRef-based refs\n      forwardedRef.current = ref;\n    }\n\n    if (!ref) {\n      // component has been unmounted\n      return;\n    }\n    if (ref !== this._componentRef) {\n      this._componentRef = this._resolveComponentRef(ref);\n      // if ref is changed, reset viewInfo\n      this._viewInfo = undefined;\n    }\n    this._onSetLocalRef();\n  };\n\n  _resolveComponentRef = (ref: Component | HTMLElement | null) => {\n    const componentRef = ref as AnimatedComponentRef;\n    // Component can specify ref which should be animated when animated version of the component is created.\n    // Otherwise, we animate the component itself.\n    if (componentRef && componentRef.getAnimatableRef) {\n      this._hasAnimatedRef = true;\n      return componentRef.getAnimatableRef();\n    }\n    // Case for SVG components on Web\n    if (SHOULD_BE_USE_WEB) {\n      if (componentRef && componentRef.elementRef) {\n        this._componentDOMRef = componentRef.elementRef.current;\n      } else {\n        this._componentDOMRef = ref as HTMLElement;\n      }\n    }\n    return componentRef;\n  };\n\n  _updateStyles(props: P) {\n    this._cssStyle = StyleSheet.flatten(props.style) ?? {};\n  }\n\n  componentDidMount() {\n    this._updateStyles(this.props);\n\n    const viewTag = this._viewInfo?.viewTag;\n    if (\n      !SHOULD_BE_USE_WEB &&\n      this._willUnmount &&\n      typeof viewTag === 'number'\n    ) {\n      unmarkNodeAsRemovable(viewTag);\n    }\n\n    if (!IS_JEST) {\n      this._CSSManager ??= new CSSManager(this._getViewInfo());\n      this._CSSManager?.update(this._cssStyle);\n    }\n\n    this._willUnmount = false;\n  }\n\n  componentWillUnmount() {\n    if (!IS_JEST && this._CSSManager) {\n      this._CSSManager.unmountCleanup();\n    }\n\n    const wrapper = this._viewInfo?.shadowNodeWrapper;\n    if (!SHOULD_BE_USE_WEB && wrapper) {\n      // Mark node as removable on the native (C++) side, but only actually remove it\n      // when it no longer exists in the Shadow Tree. This ensures proper cleanup of\n      // animations/transitions/props while handling cases where the node might be\n      // remounted (e.g., when frozen) after componentWillUnmount is called.\n\n      markNodeAsRemovable(wrapper);\n    }\n\n    this._willUnmount = true;\n  }\n\n  shouldComponentUpdate(nextProps: P) {\n    this._updateStyles(nextProps);\n\n    if (this._CSSManager) {\n      this._CSSManager.update(this._cssStyle);\n    }\n\n    // TODO - maybe check if the render is necessary instead of always returning true\n    return true;\n  }\n\n  render(props?: ComponentProps<AnyComponent>) {\n    const { ChildComponent } = this;\n\n    const platformProps = Platform.select({\n      web: {},\n      default: { collapsable: false },\n    });\n\n    return (\n      <ChildComponent\n        {...(props ?? this.props)}\n        {...platformProps}\n        style={filterNonCSSStyleProps(props?.style ?? this.props.style)}\n        // Casting is used here, because ref can be null - in that case it cannot be assigned to HTMLElement.\n        // After spending some time trying to figure out what to do with this problem, we decided to leave it this way\n        ref={this._setComponentRef as (ref: Component) => void}\n      />\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}