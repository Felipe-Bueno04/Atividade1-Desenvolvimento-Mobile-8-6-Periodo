{"ast":null,"code":"'use strict';\n\nimport { setupCallGuard } from \"./callGuard\";\nimport { getMemorySafeCapturableConsole, setupConsole } from \"./initializers\";\nimport { SHOULD_BE_USE_WEB } from \"./PlatformChecker\";\nimport { setupRunLoop } from \"./runLoop/workletRuntime\";\nimport { RuntimeKind } from \"./runtimeKind\";\nimport { createSerializable, makeShareableCloneOnUIRecursive } from \"./serializable\";\nimport { isWorkletFunction } from \"./workletFunction\";\nimport { registerWorkletsError, WorkletsError } from \"./WorkletsError\";\nimport { WorkletsModule } from \"./WorkletsModule\";\nexport function createWorkletRuntime(nameOrConfig, initializer) {\n  var runtimeBoundCapturableConsole = getMemorySafeCapturableConsole();\n  var name;\n  var initializerFn;\n  var useDefaultQueue = true;\n  var customQueue;\n  var animationQueuePollingRate;\n  var enableEventLoop = true;\n  if (typeof nameOrConfig === 'string') {\n    name = nameOrConfig;\n    initializerFn = initializer;\n  } else {\n    var _nameOrConfig$name, _nameOrConfig$useDefa, _nameOrConfig$animati, _nameOrConfig$enableE;\n    name = (_nameOrConfig$name = nameOrConfig == null ? void 0 : nameOrConfig.name) != null ? _nameOrConfig$name : 'anonymous';\n    initializerFn = nameOrConfig == null ? void 0 : nameOrConfig.initializer;\n    useDefaultQueue = (_nameOrConfig$useDefa = nameOrConfig == null ? void 0 : nameOrConfig.useDefaultQueue) != null ? _nameOrConfig$useDefa : true;\n    customQueue = nameOrConfig == null ? void 0 : nameOrConfig.customQueue;\n    animationQueuePollingRate = Math.round((_nameOrConfig$animati = nameOrConfig == null ? void 0 : nameOrConfig.animationQueuePollingRate) != null ? _nameOrConfig$animati : 16);\n    enableEventLoop = (_nameOrConfig$enableE = nameOrConfig == null ? void 0 : nameOrConfig.enableEventLoop) != null ? _nameOrConfig$enableE : true;\n  }\n  if (initializerFn && !isWorkletFunction(initializerFn)) {\n    throw new WorkletsError('The initializer passed to `createWorkletRuntime` is not a worklet.');\n  }\n  return WorkletsModule.createWorkletRuntime(name, createSerializable(function () {\n    'worklet';\n\n    setupCallGuard();\n    registerWorkletsError();\n    setupConsole(runtimeBoundCapturableConsole);\n    if (enableEventLoop) {\n      setupRunLoop(animationQueuePollingRate);\n    }\n    initializerFn == null ? void 0 : initializerFn();\n  }), useDefaultQueue, customQueue, enableEventLoop);\n}\nexport function runOnRuntime(workletRuntime, worklet) {\n  'worklet';\n\n  if (__DEV__ && !SHOULD_BE_USE_WEB && !isWorkletFunction(worklet)) {\n    throw new WorkletsError('The function passed to `runOnRuntime` is not a worklet.');\n  }\n  if (globalThis.__RUNTIME_KIND !== RuntimeKind.ReactNative) {\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return globalThis._scheduleOnRuntime(workletRuntime, makeShareableCloneOnUIRecursive(function () {\n        'worklet';\n\n        worklet.apply(void 0, args);\n      }));\n    };\n  }\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return WorkletsModule.scheduleOnRuntime(workletRuntime, createSerializable(function () {\n      'worklet';\n\n      worklet.apply(void 0, args);\n      globalThis.__flushMicrotasks();\n    }));\n  };\n}\nexport function scheduleOnRuntime(workletRuntime, worklet) {\n  'worklet';\n\n  for (var _len3 = arguments.length, args = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n    args[_key3 - 2] = arguments[_key3];\n  }\n  runOnRuntime(workletRuntime, worklet).apply(void 0, args);\n}","map":{"version":3,"names":["setupCallGuard","getMemorySafeCapturableConsole","setupConsole","SHOULD_BE_USE_WEB","setupRunLoop","RuntimeKind","createSerializable","makeShareableCloneOnUIRecursive","isWorkletFunction","registerWorkletsError","WorkletsError","WorkletsModule","createWorkletRuntime","nameOrConfig","initializer","runtimeBoundCapturableConsole","name","initializerFn","useDefaultQueue","customQueue","animationQueuePollingRate","enableEventLoop","_nameOrConfig$name","_nameOrConfig$useDefa","_nameOrConfig$animati","_nameOrConfig$enableE","Math","round","runOnRuntime","workletRuntime","worklet","__DEV__","globalThis","__RUNTIME_KIND","ReactNative","_len","arguments","length","args","Array","_key","_scheduleOnRuntime","apply","_len2","_key2","scheduleOnRuntime","__flushMicrotasks","_len3","_key3"],"sources":["C:\\Users\\User\\Desktop\\Atividade1-Desenvolvimento-Mobile-8-6--Periodo\\backend\\node_modules\\react-native-worklets\\src\\runtimes.ts"],"sourcesContent":["'use strict';\n\nimport { setupCallGuard } from './callGuard';\nimport { getMemorySafeCapturableConsole, setupConsole } from './initializers';\nimport { SHOULD_BE_USE_WEB } from './PlatformChecker';\nimport { setupRunLoop } from './runLoop/workletRuntime';\nimport { RuntimeKind } from './runtimeKind';\nimport {\n  createSerializable,\n  makeShareableCloneOnUIRecursive,\n} from './serializable';\nimport { isWorkletFunction } from './workletFunction';\nimport { registerWorkletsError, WorkletsError } from './WorkletsError';\nimport { WorkletsModule } from './WorkletsModule';\nimport type { WorkletFunction, WorkletRuntime } from './workletTypes';\n\n/**\n * Lets you create a new JS runtime which can be used to run worklets possibly\n * on different threads than JS or UI thread.\n *\n * @param config - Runtime configuration object - {@link WorkletRuntimeConfig}.\n * @returns WorkletRuntime which is a\n *   `jsi::HostObject<worklets::WorkletRuntime>` - {@link WorkletRuntime}\n * @see https://docs.swmansion.com/react-native-worklets/docs/threading/createWorkletRuntime/\n */\n// @ts-expect-error Public API overload.\nexport function createWorkletRuntime(\n  config?: WorkletRuntimeConfig\n): WorkletRuntime;\n\n/**\n * @deprecated Please use the new config object signature instead:\n *   `createWorkletRuntime({ name, initializer })`\n *\n *   Lets you create a new JS runtime which can be used to run worklets possibly\n *   on different threads than JS or UI thread.\n * @param name - A name used to identify the runtime which will appear in\n *   devices list in Chrome DevTools.\n * @param initializer - An optional worklet that will be run synchronously on\n *   the same thread immediately after the runtime is created.\n * @returns WorkletRuntime which is a\n *   `jsi::HostObject<worklets::WorkletRuntime>` - {@link WorkletRuntime}\n * @see https://docs.swmansion.com/react-native-worklets/docs/threading/createWorkletRuntime/\n */\nexport function createWorkletRuntime(\n  name?: string,\n  initializer?: () => void\n): WorkletRuntime;\n\nexport function createWorkletRuntime(\n  nameOrConfig?: string | WorkletRuntimeConfigInternal,\n  initializer?: WorkletFunction<[], void>\n): WorkletRuntime {\n  const runtimeBoundCapturableConsole = getMemorySafeCapturableConsole();\n\n  let name: string;\n  let initializerFn: (() => void) | undefined;\n  let useDefaultQueue = true;\n  let customQueue: object | undefined;\n  let animationQueuePollingRate: number;\n  let enableEventLoop = true;\n  if (typeof nameOrConfig === 'string') {\n    name = nameOrConfig;\n    initializerFn = initializer;\n  } else {\n    // TODO: Make anonymous name globally unique.\n    name = nameOrConfig?.name ?? 'anonymous';\n    initializerFn = nameOrConfig?.initializer;\n    useDefaultQueue = nameOrConfig?.useDefaultQueue ?? true;\n    customQueue = nameOrConfig?.customQueue;\n    animationQueuePollingRate = Math.round(\n      nameOrConfig?.animationQueuePollingRate ?? 16\n    );\n    enableEventLoop = nameOrConfig?.enableEventLoop ?? true;\n  }\n\n  if (initializerFn && !isWorkletFunction(initializerFn)) {\n    throw new WorkletsError(\n      'The initializer passed to `createWorkletRuntime` is not a worklet.'\n    );\n  }\n\n  return WorkletsModule.createWorkletRuntime(\n    name,\n    createSerializable(() => {\n      'worklet';\n      setupCallGuard();\n      registerWorkletsError();\n      setupConsole(runtimeBoundCapturableConsole);\n      if (enableEventLoop) {\n        setupRunLoop(animationQueuePollingRate);\n      }\n      initializerFn?.();\n    }),\n    useDefaultQueue,\n    customQueue,\n    enableEventLoop\n  );\n}\n\n/** @deprecated Use `scheduleOnRuntime` instead. */\n// @ts-expect-error Check `runOnUI` overload.\nexport function runOnRuntime<Args extends unknown[], ReturnValue>(\n  workletRuntime: WorkletRuntime,\n  worklet: (...args: Args) => ReturnValue\n): WorkletFunction<Args, ReturnValue>;\n/** Schedule a worklet to execute on the background queue. */\nexport function runOnRuntime<Args extends unknown[], ReturnValue>(\n  workletRuntime: WorkletRuntime,\n  worklet: WorkletFunction<Args, ReturnValue>\n): (...args: Args) => void {\n  'worklet';\n  if (__DEV__ && !SHOULD_BE_USE_WEB && !isWorkletFunction(worklet)) {\n    throw new WorkletsError(\n      'The function passed to `runOnRuntime` is not a worklet.'\n    );\n  }\n  if (globalThis.__RUNTIME_KIND !== RuntimeKind.ReactNative) {\n    return (...args) =>\n      globalThis._scheduleOnRuntime(\n        workletRuntime,\n        makeShareableCloneOnUIRecursive(() => {\n          'worklet';\n          worklet(...args);\n        })\n      );\n  }\n  return (...args) =>\n    WorkletsModule.scheduleOnRuntime(\n      workletRuntime,\n      createSerializable(() => {\n        'worklet';\n        worklet(...args);\n        globalThis.__flushMicrotasks();\n      })\n    );\n}\n\n/**\n * Lets you asynchronously run a\n * [worklet](https://docs.swmansion.com/react-native-worklets/docs/fundamentals/glossary#worklet)\n * on the [Worker\n * Runtime](https://docs.swmansion.com/react-native-worklets/docs/fundamentals/glossary#worker-worklet-runtime---worker-runtime).\n *\n * Check\n * {@link https://docs.swmansion.com/react-native-worklets/docs/fundamentals/runtimeKinds}\n * for more information about the different runtime kinds.\n *\n * - The worklet is scheduled on the Worker Runtime's [Async\n *   Queue](https://github.com/software-mansion/react-native-reanimated/blob/main/packages/react-native-worklets/Common/cpp/worklets/Public/AsyncQueue.h)\n * - The function cannot be scheduled on the Worker Runtime from [UI\n *   Runtime](https://docs.swmansion.com/react-native-worklets/docs/fundamentals/glossary#ui-runtime)\n *   or another [Worker\n *   Runtime](https://docs.swmansion.com/react-native-worklets/docs/fundamentals/glossary#worker-worklet-runtime---worker-runtime),\n *   unless the [Bundle\n *   Mode](https://docs.swmansion.com/react-native-worklets/docs/experimental/bundleMode)\n *   is enabled.\n *\n * @param workletRuntime - The runtime to schedule the worklet on.\n * @param worklet - The worklet to schedule.\n * @param args - The arguments to pass to the worklet.\n * @returns The return value of the worklet.\n */\nexport function scheduleOnRuntime<Args extends unknown[], ReturnValue>(\n  workletRuntime: WorkletRuntime,\n  worklet: (...args: Args) => ReturnValue,\n  ...args: Args\n): void {\n  'worklet';\n  runOnRuntime(workletRuntime, worklet)(...args);\n}\n\n/** Configuration object for creating a worklet runtime. */\nexport type WorkletRuntimeConfig = {\n  /** The name of the worklet runtime. */\n  name?: string;\n  /**\n   * A worklet that will be run immediately after the runtime is created and\n   * before any other worklets.\n   */\n  initializer?: () => void;\n  /**\n   * Time interval in milliseconds between polling of frame callbacks scheduled\n   * by requestAnimationFrame. If not specified, it defaults to 16 ms.\n   */\n  animationQueuePollingRate?: number;\n  /**\n   * Determines whether to enable the default Event Loop or not. The Event Loop\n   * provides implementations for `setTimeout`, `setImmediate`, `setInterval`,\n   * `requestAnimationFrame`, `queueMicrotask`, `clearTimeout`, `clearInterval`,\n   * `clearImmediate`, and `cancelAnimationFrame` methods. If not specified, it\n   * defaults to `true`.\n   */\n  enableEventLoop?: true;\n} & (\n  | {\n      /**\n       * If true, the runtime will use the default queue implementation for\n       * scheduling worklets. Defaults to true.\n       */\n      useDefaultQueue?: true;\n      /**\n       * An optional custom queue to be used for scheduling worklets.\n       *\n       * The queue has to implement the C++ `AsyncQueue` interface from\n       * `<worklets/Public/AsyncQueue.h>`.\n       */\n      customQueue?: never;\n    }\n  | {\n      /**\n       * If true, the runtime will use the default queue implementation for\n       * scheduling worklets. Defaults to true.\n       */\n      useDefaultQueue: false;\n      /**\n       * An optional custom queue to be used for scheduling worklets.\n       *\n       * The queue has to implement the C++ `AsyncQueue` interface from\n       * `<worklets/Public/AsyncQueue.h>`.\n       */\n      customQueue?: object;\n    }\n);\n\ntype WorkletRuntimeConfigInternal = WorkletRuntimeConfig & {\n  initializer?: WorkletFunction<[], void>;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}