{"ast":null,"code":"'use strict';\n\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useRef, useState } from 'react';\nimport { createSerializable, serializableMappingCache } from 'react-native-worklets';\nimport { SHOULD_BE_USE_WEB } from \"../common/constants\";\nimport { getShadowNodeWrapperFromRef } from \"../fabricUtils\";\nimport { makeMutable } from \"../mutables\";\nimport { findNodeHandle } from \"../platformFunctions/findNodeHandle\";\nfunction getComponentOrScrollable(ref) {\n  var _ref, _ref$getNativeScrollR;\n  return (_ref = (_ref$getNativeScrollR = ref.getNativeScrollRef == null ? void 0 : ref.getNativeScrollRef()) != null ? _ref$getNativeScrollR : ref.getScrollableNode == null ? void 0 : ref.getScrollableNode()) != null ? _ref : ref;\n}\nfunction useAnimatedRefBase(getWrapper) {\n  var observers = useRef(new Map()).current;\n  var wrapperRef = useRef(null);\n  var resultRef = useRef(null);\n  if (!resultRef.current) {\n    var _fun = function fun(ref) {\n      if (ref) {\n        wrapperRef.current = getWrapper(ref);\n        _fun.getTag = function () {\n          return findNodeHandle(getComponentOrScrollable(ref));\n        };\n        _fun.current = ref;\n        if (observers.size) {\n          var _fun$getTag;\n          var currentTag = (_fun$getTag = _fun == null ? void 0 : _fun.getTag == null ? void 0 : _fun.getTag()) != null ? _fun$getTag : null;\n          observers.forEach(function (cleanup, observer) {\n            cleanup == null ? void 0 : cleanup();\n            observers.set(observer, observer(currentTag));\n          });\n        }\n      }\n      return wrapperRef.current;\n    };\n    _fun.observe = function (observer) {\n      var _fun$getTag2;\n      var cleanup = observer((_fun$getTag2 = _fun == null ? void 0 : _fun.getTag == null ? void 0 : _fun.getTag()) != null ? _fun$getTag2 : null);\n      observers.set(observer, cleanup);\n      return function () {\n        var _observers$get;\n        (_observers$get = observers.get(observer)) == null ? void 0 : _observers$get();\n        observers.delete(observer);\n      };\n    };\n    _fun.current = null;\n    resultRef.current = _fun;\n  }\n  return resultRef.current;\n}\nfunction useAnimatedRefNative() {\n  var _useState = useState(function () {\n      return makeMutable(null);\n    }),\n    _useState2 = _slicedToArray(_useState, 1),\n    sharedWrapper = _useState2[0];\n  var resultRef = useAnimatedRefBase(function (ref) {\n    var currentWrapper = getShadowNodeWrapperFromRef(getComponentOrScrollable(ref));\n    sharedWrapper.value = currentWrapper;\n    return currentWrapper;\n  });\n  if (!serializableMappingCache.get(resultRef)) {\n    var animatedRefSerializableHandle = createSerializable({\n      __init: function __init() {\n        'worklet';\n\n        return function () {\n          return sharedWrapper.value;\n        };\n      }\n    });\n    serializableMappingCache.set(resultRef, animatedRefSerializableHandle);\n  }\n  return resultRef;\n}\nfunction useAnimatedRefWeb() {\n  return useAnimatedRefBase(function (ref) {\n    return getComponentOrScrollable(ref);\n  });\n}\nexport var useAnimatedRef = SHOULD_BE_USE_WEB ? useAnimatedRefWeb : useAnimatedRefNative;","map":{"version":3,"names":["_slicedToArray","useRef","useState","createSerializable","serializableMappingCache","SHOULD_BE_USE_WEB","getShadowNodeWrapperFromRef","makeMutable","findNodeHandle","getComponentOrScrollable","ref","_ref","_ref$getNativeScrollR","getNativeScrollRef","getScrollableNode","useAnimatedRefBase","getWrapper","observers","Map","current","wrapperRef","resultRef","fun","getTag","size","_fun$getTag","currentTag","forEach","cleanup","observer","set","observe","_fun$getTag2","_observers$get","get","delete","useAnimatedRefNative","_useState","_useState2","sharedWrapper","currentWrapper","value","animatedRefSerializableHandle","__init","useAnimatedRefWeb","useAnimatedRef"],"sources":["C:\\Users\\User\\Desktop\\Atividade1-Desenvolvimento-Mobile-8-6--Periodo\\backend\\node_modules\\react-native-reanimated\\src\\hook\\useAnimatedRef.ts"],"sourcesContent":["'use strict';\nimport { useRef, useState } from 'react';\nimport {\n  createSerializable,\n  serializableMappingCache,\n} from 'react-native-worklets';\n\nimport { SHOULD_BE_USE_WEB } from '../common/constants';\nimport type { ShadowNodeWrapper, WrapperRef } from '../commonTypes';\nimport { getShadowNodeWrapperFromRef } from '../fabricUtils';\nimport { makeMutable } from '../mutables';\nimport { findNodeHandle } from '../platformFunctions/findNodeHandle';\nimport type {\n  AnimatedRef,\n  AnimatedRefObserver,\n  AnimatedRefOnUI,\n  MaybeObserverCleanup,\n} from './commonTypes';\n\nfunction getComponentOrScrollable(ref: WrapperRef) {\n  return ref.getNativeScrollRef?.() ?? ref.getScrollableNode?.() ?? ref;\n}\n\nfunction useAnimatedRefBase<TRef extends WrapperRef>(\n  getWrapper: (ref: TRef) => ShadowNodeWrapper\n): AnimatedRef<TRef> {\n  const observers = useRef<Map<AnimatedRefObserver, MaybeObserverCleanup>>(\n    new Map()\n  ).current;\n  const wrapperRef = useRef<ShadowNodeWrapper | null>(null);\n  const resultRef = useRef<AnimatedRef<TRef> | null>(null);\n\n  if (!resultRef.current) {\n    const fun = <AnimatedRef<TRef>>((ref) => {\n      if (ref) {\n        wrapperRef.current = getWrapper(ref);\n\n        // We have to unwrap the tag from the shadow node wrapper.\n        fun.getTag = () => findNodeHandle(getComponentOrScrollable(ref));\n        fun.current = ref;\n\n        if (observers.size) {\n          const currentTag = fun?.getTag?.() ?? null;\n          observers.forEach((cleanup, observer) => {\n            // Perform the cleanup before calling the observer again.\n            // This ensures that all events that were set up in the observer\n            // are cleaned up before the observer sets up new events during\n            // the next call.\n            cleanup?.();\n            observers.set(observer, observer(currentTag));\n          });\n        }\n      }\n\n      return wrapperRef.current;\n    });\n\n    fun.observe = (observer: AnimatedRefObserver) => {\n      // Call observer immediately to get the initial value\n      const cleanup = observer(fun?.getTag?.() ?? null);\n      observers.set(observer, cleanup);\n\n      return () => {\n        observers.get(observer)?.();\n        observers.delete(observer);\n      };\n    };\n\n    fun.current = null;\n    resultRef.current = fun;\n  }\n\n  return resultRef.current;\n}\n\nfunction useAnimatedRefNative<\n  TRef extends WrapperRef = React.Component,\n>(): AnimatedRef<TRef> {\n  const [sharedWrapper] = useState(() =>\n    makeMutable<ShadowNodeWrapper | null>(null)\n  );\n\n  const resultRef = useAnimatedRefBase<TRef>((ref) => {\n    const currentWrapper = getShadowNodeWrapperFromRef(\n      getComponentOrScrollable(ref)\n    );\n\n    sharedWrapper.value = currentWrapper;\n\n    return currentWrapper;\n  });\n\n  if (!serializableMappingCache.get(resultRef)) {\n    const animatedRefSerializableHandle = createSerializable({\n      __init: (): AnimatedRefOnUI => {\n        'worklet';\n        return () => sharedWrapper.value;\n      },\n    });\n    serializableMappingCache.set(resultRef, animatedRefSerializableHandle);\n  }\n\n  return resultRef;\n}\n\nfunction useAnimatedRefWeb<\n  TRef extends WrapperRef = React.Component,\n>(): AnimatedRef<TRef> {\n  return useAnimatedRefBase<TRef>((ref) => getComponentOrScrollable(ref));\n}\n\n/**\n * Lets you get a reference of a view that you can use inside a worklet.\n *\n * @returns An object with a `.current` property which contains an instance of\n *   the reference object.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/core/useAnimatedRef\n */\nexport const useAnimatedRef = SHOULD_BE_USE_WEB\n  ? useAnimatedRefWeb\n  : useAnimatedRefNative;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}