{"ast":null,"code":"'use strict';\n\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/classPrivateFieldLooseKey\";\nimport { WorkletsModule } from 'react-native-worklets';\nimport { IS_JEST, IS_WEB, IS_WINDOW_AVAILABLE, logger, ReanimatedError } from \"../../common\";\nimport { SensorType } from \"../../commonTypes\";\nimport { assertWorkletsVersion } from \"../../platform-specific/workletsVersion\";\nexport function createJSReanimatedModule() {\n  return new JSReanimated();\n}\nvar _workletsModule = _classPrivateFieldLooseKey(\"workletsModule\");\nvar JSReanimated = function () {\n  function JSReanimated() {\n    var _this = this;\n    _classCallCheck(this, JSReanimated);\n    Object.defineProperty(this, _workletsModule, {\n      writable: true,\n      value: WorkletsModule\n    });\n    this.nextSensorId = 0;\n    this.sensors = new Map();\n    this.platform = undefined;\n    this.getSensorCallback = function (sensor, sensorType, eventHandler) {\n      switch (sensorType) {\n        case SensorType.ACCELEROMETER:\n        case SensorType.GRAVITY:\n          return function () {\n            var x = sensor.x,\n              y = sensor.y,\n              z = sensor.z;\n            if (_this.platform === Platform.WEB_ANDROID) {\n              var _ref = [-x, -y, -z];\n              x = _ref[0];\n              y = _ref[1];\n              z = _ref[2];\n            }\n            eventHandler({\n              x: x,\n              y: y,\n              z: z,\n              interfaceOrientation: 0\n            });\n          };\n        case SensorType.GYROSCOPE:\n        case SensorType.MAGNETIC_FIELD:\n          return function () {\n            var x = sensor.x,\n              y = sensor.y,\n              z = sensor.z;\n            eventHandler({\n              x: x,\n              y: y,\n              z: z,\n              interfaceOrientation: 0\n            });\n          };\n        case SensorType.ROTATION:\n          return function () {\n            var _sensor$quaternion = _slicedToArray(sensor.quaternion, 2),\n              qw = _sensor$quaternion[0],\n              qx = _sensor$quaternion[1];\n            var _sensor$quaternion2 = _slicedToArray(sensor.quaternion, 4),\n              qy = _sensor$quaternion2[2],\n              qz = _sensor$quaternion2[3];\n            if (_this.platform === Platform.WEB_ANDROID) {\n              var _ref2 = [qz, -qy];\n              qy = _ref2[0];\n              qz = _ref2[1];\n            }\n            var yaw = -Math.atan2(2.0 * (qy * qz + qw * qx), qw * qw - qx * qx - qy * qy + qz * qz);\n            var pitch = Math.sin(-2.0 * (qx * qz - qw * qy));\n            var roll = -Math.atan2(2.0 * (qx * qy + qw * qz), qw * qw + qx * qx - qy * qy - qz * qz);\n            eventHandler({\n              qw: qw,\n              qx: qx,\n              qy: qy,\n              qz: qz,\n              yaw: yaw,\n              pitch: pitch,\n              roll: roll,\n              interfaceOrientation: 0\n            });\n          };\n      }\n    };\n    if (__DEV__) {\n      assertWorkletsVersion();\n    }\n  }\n  return _createClass(JSReanimated, [{\n    key: \"registerEventHandler\",\n    value: function registerEventHandler(_eventHandler, _eventName, _emitterReactTag) {\n      throw new ReanimatedError('registerEventHandler is not available in JSReanimated.');\n    }\n  }, {\n    key: \"unregisterEventHandler\",\n    value: function unregisterEventHandler(_) {\n      throw new ReanimatedError('unregisterEventHandler is not available in JSReanimated.');\n    }\n  }, {\n    key: \"configureLayoutAnimationBatch\",\n    value: function configureLayoutAnimationBatch() {}\n  }, {\n    key: \"setShouldAnimateExitingForTag\",\n    value: function setShouldAnimateExitingForTag() {}\n  }, {\n    key: \"registerSensor\",\n    value: function registerSensor(sensorType, interval, _iosReferenceFrame, eventHandler) {\n      if (!IS_WINDOW_AVAILABLE) {\n        return -1;\n      }\n      if (this.platform === undefined) {\n        this.detectPlatform();\n      }\n      if (!(this.getSensorName(sensorType) in window)) {\n        logger.warn('Sensor is not available.' + (IS_WEB && location.protocol !== 'https:' ? ' Make sure you use secure origin with `npx expo start --web --https`.' : '') + (this.platform === Platform.WEB_IOS ? ' For iOS web, you will also have to also grant permission in the browser: https://dev.to/li/how-to-requestpermission-for-devicemotion-and-deviceorientation-events-in-ios-13-46g2.' : ''));\n        return -1;\n      }\n      if (this.platform === undefined) {\n        this.detectPlatform();\n      }\n      var sensor = this.initializeSensor(sensorType, interval);\n      sensor.addEventListener('reading', this.getSensorCallback(sensor, sensorType, eventHandler));\n      sensor.start();\n      this.sensors.set(this.nextSensorId, sensor);\n      return this.nextSensorId++;\n    }\n  }, {\n    key: \"unregisterSensor\",\n    value: function unregisterSensor(id) {\n      var sensor = this.sensors.get(id);\n      if (sensor !== undefined) {\n        sensor.stop();\n        this.sensors.delete(id);\n      }\n    }\n  }, {\n    key: \"subscribeForKeyboardEvents\",\n    value: function subscribeForKeyboardEvents(_) {\n      if (IS_WEB) {\n        logger.warn('useAnimatedKeyboard is not available on web yet.');\n      } else if (IS_JEST) {\n        logger.warn('useAnimatedKeyboard is not available when using Jest.');\n      } else {\n        logger.warn('useAnimatedKeyboard is not available on this configuration.');\n      }\n      return -1;\n    }\n  }, {\n    key: \"unsubscribeFromKeyboardEvents\",\n    value: function unsubscribeFromKeyboardEvents(_) {}\n  }, {\n    key: \"initializeSensor\",\n    value: function initializeSensor(sensorType, interval) {\n      var config = interval <= 0 ? {\n        referenceFrame: 'device'\n      } : {\n        frequency: 1000 / interval\n      };\n      switch (sensorType) {\n        case SensorType.ACCELEROMETER:\n          return new window.Accelerometer(config);\n        case SensorType.GYROSCOPE:\n          return new window.Gyroscope(config);\n        case SensorType.GRAVITY:\n          return new window.GravitySensor(config);\n        case SensorType.MAGNETIC_FIELD:\n          return new window.Magnetometer(config);\n        case SensorType.ROTATION:\n          return new window.AbsoluteOrientationSensor(config);\n      }\n    }\n  }, {\n    key: \"getSensorName\",\n    value: function getSensorName(sensorType) {\n      switch (sensorType) {\n        case SensorType.ACCELEROMETER:\n          return 'Accelerometer';\n        case SensorType.GRAVITY:\n          return 'GravitySensor';\n        case SensorType.GYROSCOPE:\n          return 'Gyroscope';\n        case SensorType.MAGNETIC_FIELD:\n          return 'Magnetometer';\n        case SensorType.ROTATION:\n          return 'AbsoluteOrientationSensor';\n      }\n    }\n  }, {\n    key: \"detectPlatform\",\n    value: function detectPlatform() {\n      var userAgent = navigator.userAgent || navigator.vendor || window.opera;\n      if (userAgent === undefined) {\n        this.platform = Platform.UNKNOWN;\n      } else if (/iPad|iPhone|iPod/.test(userAgent)) {\n        this.platform = Platform.WEB_IOS;\n      } else if (/android/i.test(userAgent)) {\n        this.platform = Platform.WEB_ANDROID;\n      } else {\n        this.platform = Platform.WEB;\n      }\n    }\n  }, {\n    key: \"getViewProp\",\n    value: function getViewProp(_viewTag, _propName, _component, _callback) {\n      throw new ReanimatedError('getViewProp is not available in JSReanimated.');\n    }\n  }, {\n    key: \"getStaticFeatureFlag\",\n    value: function getStaticFeatureFlag() {\n      return false;\n    }\n  }, {\n    key: \"setDynamicFeatureFlag\",\n    value: function setDynamicFeatureFlag() {}\n  }, {\n    key: \"setViewStyle\",\n    value: function setViewStyle(_viewTag, _style) {\n      throw new ReanimatedError('setViewStyle is not available in JSReanimated.');\n    }\n  }, {\n    key: \"markNodeAsRemovable\",\n    value: function markNodeAsRemovable(_shadowNodeWrapper) {\n      throw new ReanimatedError('markNodeAsRemovable is not available in JSReanimated.');\n    }\n  }, {\n    key: \"unmarkNodeAsRemovable\",\n    value: function unmarkNodeAsRemovable(_viewTag) {\n      throw new ReanimatedError('unmarkNodeAsRemovable is not available in JSReanimated.');\n    }\n  }, {\n    key: \"registerCSSKeyframes\",\n    value: function registerCSSKeyframes(_animationName, _viewName, _keyframesConfig) {\n      throw new ReanimatedError('`registerCSSKeyframes` is not available in JSReanimated.');\n    }\n  }, {\n    key: \"unregisterCSSKeyframes\",\n    value: function unregisterCSSKeyframes(_animationName, _viewName) {\n      throw new ReanimatedError('`unregisterCSSKeyframes` is not available in JSReanimated.');\n    }\n  }, {\n    key: \"applyCSSAnimations\",\n    value: function applyCSSAnimations(_shadowNodeWrapper, _animationUpdates) {\n      throw new ReanimatedError('`applyCSSAnimations` is not available in JSReanimated.');\n    }\n  }, {\n    key: \"unregisterCSSAnimations\",\n    value: function unregisterCSSAnimations(_viewTag) {\n      throw new ReanimatedError('`unregisterCSSAnimations` is not available in JSReanimated.');\n    }\n  }, {\n    key: \"registerCSSTransition\",\n    value: function registerCSSTransition(_shadowNodeWrapper, _transitionConfig) {\n      throw new ReanimatedError('`registerCSSTransition` is not available in JSReanimated.');\n    }\n  }, {\n    key: \"updateCSSTransition\",\n    value: function updateCSSTransition(_viewTag, _settingsUpdates) {\n      throw new ReanimatedError('`updateCSSTransition` is not available in JSReanimated.');\n    }\n  }, {\n    key: \"unregisterCSSTransition\",\n    value: function unregisterCSSTransition(_viewTag) {\n      throw new ReanimatedError('`unregisterCSSTransition` is not available in JSReanimated.');\n    }\n  }]);\n}();\nexport var Platform = function (Platform) {\n  Platform[\"WEB_IOS\"] = \"web iOS\";\n  Platform[\"WEB_ANDROID\"] = \"web Android\";\n  Platform[\"WEB\"] = \"web\";\n  Platform[\"UNKNOWN\"] = \"unknown\";\n  return Platform;\n}({});","map":{"version":3,"names":["_slicedToArray","_classCallCheck","_createClass","_classPrivateFieldLooseKey","WorkletsModule","IS_JEST","IS_WEB","IS_WINDOW_AVAILABLE","logger","ReanimatedError","SensorType","assertWorkletsVersion","createJSReanimatedModule","JSReanimated","_workletsModule","_this","Object","defineProperty","writable","value","nextSensorId","sensors","Map","platform","undefined","getSensorCallback","sensor","sensorType","eventHandler","ACCELEROMETER","GRAVITY","x","y","z","Platform","WEB_ANDROID","_ref","interfaceOrientation","GYROSCOPE","MAGNETIC_FIELD","ROTATION","_sensor$quaternion","quaternion","qw","qx","_sensor$quaternion2","qy","qz","_ref2","yaw","Math","atan2","pitch","sin","roll","__DEV__","key","registerEventHandler","_eventHandler","_eventName","_emitterReactTag","unregisterEventHandler","_","configureLayoutAnimationBatch","setShouldAnimateExitingForTag","registerSensor","interval","_iosReferenceFrame","detectPlatform","getSensorName","window","warn","location","protocol","WEB_IOS","initializeSensor","addEventListener","start","set","unregisterSensor","id","get","stop","delete","subscribeForKeyboardEvents","unsubscribeFromKeyboardEvents","config","referenceFrame","frequency","Accelerometer","Gyroscope","GravitySensor","Magnetometer","AbsoluteOrientationSensor","userAgent","navigator","vendor","opera","UNKNOWN","test","WEB","getViewProp","_viewTag","_propName","_component","_callback","getStaticFeatureFlag","setDynamicFeatureFlag","setViewStyle","_style","markNodeAsRemovable","_shadowNodeWrapper","unmarkNodeAsRemovable","registerCSSKeyframes","_animationName","_viewName","_keyframesConfig","unregisterCSSKeyframes","applyCSSAnimations","_animationUpdates","unregisterCSSAnimations","registerCSSTransition","_transitionConfig","updateCSSTransition","_settingsUpdates","unregisterCSSTransition"],"sources":["C:\\Users\\User\\Desktop\\Atividade1-Desenvolvimento-Mobile-8-6--Periodo\\backend\\node_modules\\react-native-reanimated\\src\\ReanimatedModule\\js-reanimated\\JSReanimated.ts"],"sourcesContent":["'use strict';\nimport type {\n  IWorkletsModule,\n  SerializableRef,\n  WorkletFunction,\n} from 'react-native-worklets';\nimport { WorkletsModule } from 'react-native-worklets';\n\nimport {\n  IS_JEST,\n  IS_WEB,\n  IS_WINDOW_AVAILABLE,\n  logger,\n  ReanimatedError,\n} from '../../common';\nimport type {\n  ShadowNodeWrapper,\n  StyleProps,\n  Value3D,\n  ValueRotation,\n  WrapperRef,\n} from '../../commonTypes';\nimport { SensorType } from '../../commonTypes';\nimport type {\n  CSSAnimationUpdates,\n  NormalizedCSSAnimationKeyframesConfig,\n  NormalizedCSSTransitionConfig,\n} from '../../css/native';\nimport { assertWorkletsVersion } from '../../platform-specific/workletsVersion';\nimport type { IReanimatedModule } from '../reanimatedModuleProxy';\nimport type { WebSensor } from './WebSensor';\n\nexport function createJSReanimatedModule(): IReanimatedModule {\n  return new JSReanimated();\n}\n\nclass JSReanimated implements IReanimatedModule {\n  /**\n   * We keep the instance of `WorkletsModule` here to keep correct coupling of\n   * the modules and initialization order.\n   */\n  // eslint-disable-next-line no-unused-private-class-members\n  #workletsModule: IWorkletsModule = WorkletsModule;\n  nextSensorId = 0;\n  sensors = new Map<number, WebSensor>();\n  platform?: Platform = undefined;\n\n  constructor() {\n    if (__DEV__) {\n      assertWorkletsVersion();\n    }\n  }\n\n  registerEventHandler<T>(\n    _eventHandler: SerializableRef<T>,\n    _eventName: string,\n    _emitterReactTag: number\n  ): number {\n    throw new ReanimatedError(\n      'registerEventHandler is not available in JSReanimated.'\n    );\n  }\n\n  unregisterEventHandler(_: number): void {\n    throw new ReanimatedError(\n      'unregisterEventHandler is not available in JSReanimated.'\n    );\n  }\n\n  configureLayoutAnimationBatch() {\n    // no-op\n  }\n\n  setShouldAnimateExitingForTag() {\n    // no-op\n  }\n\n  registerSensor(\n    sensorType: SensorType,\n    interval: number,\n    _iosReferenceFrame: number,\n    eventHandler: SerializableRef<(data: Value3D | ValueRotation) => void>\n  ): number {\n    if (!IS_WINDOW_AVAILABLE) {\n      // the window object is unavailable when building the server portion of a site that uses SSG\n      // this check is here to ensure that the server build won't fail\n      return -1;\n    }\n\n    if (this.platform === undefined) {\n      this.detectPlatform();\n    }\n\n    if (!(this.getSensorName(sensorType) in window)) {\n      // https://w3c.github.io/sensors/#secure-context\n      logger.warn(\n        'Sensor is not available.' +\n          (IS_WEB && location.protocol !== 'https:'\n            ? ' Make sure you use secure origin with `npx expo start --web --https`.'\n            : '') +\n          (this.platform === Platform.WEB_IOS\n            ? ' For iOS web, you will also have to also grant permission in the browser: https://dev.to/li/how-to-requestpermission-for-devicemotion-and-deviceorientation-events-in-ios-13-46g2.'\n            : '')\n      );\n      return -1;\n    }\n\n    if (this.platform === undefined) {\n      this.detectPlatform();\n    }\n\n    const sensor: WebSensor = this.initializeSensor(sensorType, interval);\n    sensor.addEventListener(\n      'reading',\n      this.getSensorCallback(sensor, sensorType, eventHandler)\n    );\n    sensor.start();\n\n    this.sensors.set(this.nextSensorId, sensor);\n    return this.nextSensorId++;\n  }\n\n  getSensorCallback = (\n    sensor: WebSensor,\n    sensorType: SensorType,\n    eventHandler: SerializableRef<(data: Value3D | ValueRotation) => void>\n  ) => {\n    switch (sensorType) {\n      case SensorType.ACCELEROMETER:\n      case SensorType.GRAVITY:\n        return () => {\n          let { x, y, z } = sensor;\n\n          // Web Android sensors have a different coordinate system than iOS\n          if (this.platform === Platform.WEB_ANDROID) {\n            [x, y, z] = [-x, -y, -z];\n          }\n          // TODO TYPESCRIPT on web SerializableRef is the value itself so we call it directly\n          (eventHandler as any)({ x, y, z, interfaceOrientation: 0 });\n        };\n      case SensorType.GYROSCOPE:\n      case SensorType.MAGNETIC_FIELD:\n        return () => {\n          const { x, y, z } = sensor;\n          // TODO TYPESCRIPT on web SerializableRef is the value itself so we call it directly\n          (eventHandler as any)({ x, y, z, interfaceOrientation: 0 });\n        };\n      case SensorType.ROTATION:\n        return () => {\n          const [qw, qx] = sensor.quaternion;\n          let [, , qy, qz] = sensor.quaternion;\n\n          // Android sensors have a different coordinate system than iOS\n          if (this.platform === Platform.WEB_ANDROID) {\n            [qy, qz] = [qz, -qy];\n          }\n\n          // reference: https://stackoverflow.com/questions/5782658/extracting-yaw-from-a-quaternion\n          const yaw = -Math.atan2(\n            2.0 * (qy * qz + qw * qx),\n            qw * qw - qx * qx - qy * qy + qz * qz\n          );\n          const pitch = Math.sin(-2.0 * (qx * qz - qw * qy));\n          const roll = -Math.atan2(\n            2.0 * (qx * qy + qw * qz),\n            qw * qw + qx * qx - qy * qy - qz * qz\n          );\n          // TODO TYPESCRIPT on web SerializableRef is the value itself so we call it directly\n          (eventHandler as any)({\n            qw,\n            qx,\n            qy,\n            qz,\n            yaw,\n            pitch,\n            roll,\n            interfaceOrientation: 0,\n          });\n        };\n    }\n  };\n\n  unregisterSensor(id: number): void {\n    const sensor: WebSensor | undefined = this.sensors.get(id);\n    if (sensor !== undefined) {\n      sensor.stop();\n      this.sensors.delete(id);\n    }\n  }\n\n  subscribeForKeyboardEvents(_: SerializableRef<WorkletFunction>): number {\n    if (IS_WEB) {\n      logger.warn('useAnimatedKeyboard is not available on web yet.');\n    } else if (IS_JEST) {\n      logger.warn('useAnimatedKeyboard is not available when using Jest.');\n    } else {\n      logger.warn(\n        'useAnimatedKeyboard is not available on this configuration.'\n      );\n    }\n    return -1;\n  }\n\n  unsubscribeFromKeyboardEvents(_: number): void {\n    // noop\n  }\n\n  initializeSensor(sensorType: SensorType, interval: number): WebSensor {\n    const config =\n      interval <= 0\n        ? { referenceFrame: 'device' }\n        : { frequency: 1000 / interval };\n    switch (sensorType) {\n      case SensorType.ACCELEROMETER:\n        return new window.Accelerometer(config);\n      case SensorType.GYROSCOPE:\n        return new window.Gyroscope(config);\n      case SensorType.GRAVITY:\n        return new window.GravitySensor(config);\n      case SensorType.MAGNETIC_FIELD:\n        return new window.Magnetometer(config);\n      case SensorType.ROTATION:\n        return new window.AbsoluteOrientationSensor(config);\n    }\n  }\n\n  getSensorName(sensorType: SensorType): string {\n    switch (sensorType) {\n      case SensorType.ACCELEROMETER:\n        return 'Accelerometer';\n      case SensorType.GRAVITY:\n        return 'GravitySensor';\n      case SensorType.GYROSCOPE:\n        return 'Gyroscope';\n      case SensorType.MAGNETIC_FIELD:\n        return 'Magnetometer';\n      case SensorType.ROTATION:\n        return 'AbsoluteOrientationSensor';\n    }\n  }\n\n  detectPlatform() {\n    const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n    if (userAgent === undefined) {\n      this.platform = Platform.UNKNOWN;\n    } else if (/iPad|iPhone|iPod/.test(userAgent)) {\n      this.platform = Platform.WEB_IOS;\n    } else if (/android/i.test(userAgent)) {\n      this.platform = Platform.WEB_ANDROID;\n    } else {\n      this.platform = Platform.WEB;\n    }\n  }\n\n  getViewProp<T>(\n    _viewTag: number,\n    _propName: string,\n    _component?: WrapperRef | null,\n    _callback?: (result: T) => void\n  ): Promise<T> {\n    throw new ReanimatedError('getViewProp is not available in JSReanimated.');\n  }\n\n  getStaticFeatureFlag(): boolean {\n    // mock implementation\n    return false;\n  }\n\n  setDynamicFeatureFlag(): void {\n    // noop\n  }\n\n  setViewStyle(_viewTag: number, _style: StyleProps): void {\n    throw new ReanimatedError('setViewStyle is not available in JSReanimated.');\n  }\n\n  markNodeAsRemovable(_shadowNodeWrapper: ShadowNodeWrapper): void {\n    throw new ReanimatedError(\n      'markNodeAsRemovable is not available in JSReanimated.'\n    );\n  }\n\n  unmarkNodeAsRemovable(_viewTag: number): void {\n    throw new ReanimatedError(\n      'unmarkNodeAsRemovable is not available in JSReanimated.'\n    );\n  }\n\n  registerCSSKeyframes(\n    _animationName: string,\n    _viewName: string,\n    _keyframesConfig: NormalizedCSSAnimationKeyframesConfig\n  ): void {\n    throw new ReanimatedError(\n      '`registerCSSKeyframes` is not available in JSReanimated.'\n    );\n  }\n\n  unregisterCSSKeyframes(_animationName: string, _viewName: string): void {\n    throw new ReanimatedError(\n      '`unregisterCSSKeyframes` is not available in JSReanimated.'\n    );\n  }\n\n  applyCSSAnimations(\n    _shadowNodeWrapper: ShadowNodeWrapper,\n    _animationUpdates: CSSAnimationUpdates\n  ) {\n    throw new ReanimatedError(\n      '`applyCSSAnimations` is not available in JSReanimated.'\n    );\n  }\n\n  unregisterCSSAnimations(_viewTag: number): void {\n    throw new ReanimatedError(\n      '`unregisterCSSAnimations` is not available in JSReanimated.'\n    );\n  }\n\n  registerCSSTransition(\n    _shadowNodeWrapper: ShadowNodeWrapper,\n    _transitionConfig: NormalizedCSSTransitionConfig\n  ): void {\n    throw new ReanimatedError(\n      '`registerCSSTransition` is not available in JSReanimated.'\n    );\n  }\n\n  updateCSSTransition(\n    _viewTag: number,\n    _settingsUpdates: Partial<NormalizedCSSTransitionConfig>\n  ): void {\n    throw new ReanimatedError(\n      '`updateCSSTransition` is not available in JSReanimated.'\n    );\n  }\n\n  unregisterCSSTransition(_viewTag: number): void {\n    throw new ReanimatedError(\n      '`unregisterCSSTransition` is not available in JSReanimated.'\n    );\n  }\n}\n\n// Lack of this export breaks TypeScript generation since\n// an enum transpiles into JavaScript code.\n/** @knipIgnore */\nexport enum Platform {\n  WEB_IOS = 'web iOS',\n  WEB_ANDROID = 'web Android',\n  WEB = 'web',\n  UNKNOWN = 'unknown',\n}\n\ndeclare global {\n  interface Navigator {\n    userAgent: string;\n    vendor: string;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}