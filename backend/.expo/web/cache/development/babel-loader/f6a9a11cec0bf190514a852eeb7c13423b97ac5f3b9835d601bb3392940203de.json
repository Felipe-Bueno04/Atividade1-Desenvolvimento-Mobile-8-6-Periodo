{"ast":null,"code":"'use strict';\n'worklet';\n\nimport { ReanimatedError } from \"../errors\";\nvar HORIZONTAL_CONVERSIONS = {\n  left: 0,\n  center: '50%',\n  right: '100%'\n};\nvar VERTICAL_CONVERSIONS = {\n  top: 0,\n  center: '50%',\n  bottom: '100%'\n};\nfunction getAllowedValues(axis, isArray) {\n  var allowed = [];\n  if (isArray) {\n    allowed.push('numbers');\n  } else {\n    allowed.push('numbers with px unit');\n  }\n  allowed.push('percentages');\n  var keywords = [];\n  switch (axis) {\n    case 'x':\n      keywords = Object.keys(HORIZONTAL_CONVERSIONS);\n      break;\n    case 'y':\n      keywords = Object.keys(VERTICAL_CONVERSIONS);\n      break;\n  }\n  if (keywords.length) {\n    allowed.push(`keywords (${keywords.join(', ')})`);\n  }\n  allowed[allowed.length - 1] = `or ${allowed[allowed.length - 1]}`;\n  return allowed.join(', ');\n}\nexport var ERROR_MESSAGES = {\n  invalidTransformOrigin: function invalidTransformOrigin(value) {\n    return `Invalid transformOrigin: ${JSON.stringify(value)}. Expected 1-3 values.`;\n  },\n  invalidValue: function invalidValue(value, axis, origin, isArray) {\n    return `Invalid value \"${value}\" for the ${axis}-axis in transformOrigin ${JSON.stringify(origin)}. Allowed values: ${getAllowedValues(axis, isArray)}.`;\n  }\n};\nfunction maybeSwapComponents(components) {\n  if (components[0] in VERTICAL_CONVERSIONS && (components[1] === undefined || components[1] in HORIZONTAL_CONVERSIONS)) {\n    var _ref = [components[1], components[0]];\n    components[0] = _ref[0];\n    components[1] = _ref[1];\n  }\n}\nfunction parseValue(value, allowPercentages, customParse, getError, keywordConversions) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  if (keywordConversions && value in keywordConversions) {\n    return keywordConversions[value];\n  }\n  if (allowPercentages && value.endsWith('%')) {\n    var num = parseFloat(value);\n    if (num === 0) {\n      return 0;\n    }\n    if (!isNaN(num)) {\n      return `${num}%`;\n    }\n  }\n  var parsed = customParse(value);\n  if (parsed === null) {\n    throw new ReanimatedError(getError());\n  }\n  return parsed;\n}\nfunction parsePx(component) {\n  if (component.endsWith('px') || component === '0') {\n    var num = parseFloat(component);\n    if (!isNaN(num)) {\n      return num;\n    }\n  }\n  return null;\n}\nexport var processTransformOrigin = function processTransformOrigin(value) {\n  var _components$, _components$2, _components$3;\n  var isArray = Array.isArray(value);\n  var components = isArray ? value : value.split(/\\s+/);\n  var customParse = isArray ? function () {\n    return null;\n  } : parsePx;\n  if (components.length < 1 || components.length > 3) {\n    throw new ReanimatedError(ERROR_MESSAGES.invalidTransformOrigin(value));\n  }\n  maybeSwapComponents(components);\n  return [parseValue((_components$ = components[0]) != null ? _components$ : '50%', true, customParse, function () {\n    return ERROR_MESSAGES.invalidValue(components[0], 'x', value, isArray);\n  }, HORIZONTAL_CONVERSIONS), parseValue((_components$2 = components[1]) != null ? _components$2 : '50%', true, customParse, function () {\n    return ERROR_MESSAGES.invalidValue(components[1], 'y', value, isArray);\n  }, VERTICAL_CONVERSIONS), parseValue((_components$3 = components[2]) != null ? _components$3 : 0, false, customParse, function () {\n    return ERROR_MESSAGES.invalidValue(components[2], 'z', value, isArray);\n  })];\n};","map":{"version":3,"names":["ReanimatedError","HORIZONTAL_CONVERSIONS","left","center","right","VERTICAL_CONVERSIONS","top","bottom","getAllowedValues","axis","isArray","allowed","push","keywords","Object","keys","length","join","ERROR_MESSAGES","invalidTransformOrigin","value","JSON","stringify","invalidValue","origin","maybeSwapComponents","components","undefined","_ref","parseValue","allowPercentages","customParse","getError","keywordConversions","endsWith","num","parseFloat","isNaN","parsed","parsePx","component","processTransformOrigin","_components$","_components$2","_components$3","Array","split"],"sources":["C:\\Users\\User\\Desktop\\Atividade1-Desenvolvimento-Mobile-8-6--Periodo\\backend\\node_modules\\react-native-reanimated\\src\\common\\processors\\transformOrigin.ts"],"sourcesContent":["'use strict';\n'worklet';\nimport { ReanimatedError } from '../errors';\nimport type { TransformOrigin, ValueProcessor } from '../types';\n\ntype Axis = 'x' | 'y' | 'z';\ntype ConvertedValue = `${number}%` | number;\ntype KeywordConversions = Record<string, ConvertedValue>;\ntype CustomParse = (value: string) => ConvertedValue | null;\n\nconst HORIZONTAL_CONVERSIONS = {\n  left: 0,\n  center: '50%',\n  right: '100%',\n} satisfies KeywordConversions;\n\nconst VERTICAL_CONVERSIONS = {\n  top: 0,\n  center: '50%',\n  bottom: '100%',\n} satisfies KeywordConversions;\n\nfunction getAllowedValues(axis: Axis, isArray: boolean): string {\n  const allowed: string[] = [];\n\n  if (isArray) {\n    allowed.push('numbers');\n  } else {\n    allowed.push('numbers with px unit');\n  }\n\n  allowed.push('percentages');\n\n  let keywords: string[] = [];\n  switch (axis) {\n    case 'x':\n      keywords = Object.keys(HORIZONTAL_CONVERSIONS);\n      break;\n    case 'y':\n      keywords = Object.keys(VERTICAL_CONVERSIONS);\n      break;\n  }\n  if (keywords.length) {\n    allowed.push(`keywords (${keywords.join(', ')})`);\n  }\n\n  // Add \"or\" before the last item\n  allowed[allowed.length - 1] = `or ${allowed[allowed.length - 1]}`;\n\n  return allowed.join(', ');\n}\n\nexport const ERROR_MESSAGES = {\n  invalidTransformOrigin: (value: TransformOrigin) =>\n    `Invalid transformOrigin: ${JSON.stringify(value)}. Expected 1-3 values.`,\n  invalidValue: (\n    value: string | number,\n    axis: Axis,\n    origin: TransformOrigin,\n    isArray: boolean\n  ) =>\n    `Invalid value \"${value}\" for the ${axis}-axis in transformOrigin ${JSON.stringify(\n      origin\n    )}. Allowed values: ${getAllowedValues(axis, isArray)}.`,\n};\n\nfunction maybeSwapComponents(components: (string | number)[]) {\n  if (\n    components[0] in VERTICAL_CONVERSIONS &&\n    (components[1] === undefined || components[1] in HORIZONTAL_CONVERSIONS)\n  ) {\n    [components[0], components[1]] = [components[1], components[0]];\n  }\n}\n\nfunction parseValue(\n  value: string | number,\n  allowPercentages: boolean,\n  customParse: CustomParse,\n  getError: () => string,\n  keywordConversions?: KeywordConversions\n) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  if (keywordConversions && value in keywordConversions) {\n    return keywordConversions[value];\n  }\n  if (allowPercentages && value.endsWith('%')) {\n    const num = parseFloat(value);\n    if (num === 0) {\n      return 0;\n    }\n    if (!isNaN(num)) {\n      return `${num}%`;\n    }\n  }\n\n  const parsed = customParse(value);\n  if (parsed === null) {\n    throw new ReanimatedError(getError());\n  }\n\n  return parsed;\n}\n\nfunction parsePx(component: string) {\n  if (component.endsWith('px') || component === '0') {\n    const num = parseFloat(component);\n    if (!isNaN(num)) {\n      return num;\n    }\n  }\n  return null;\n}\n\nexport const processTransformOrigin: ValueProcessor<TransformOrigin> = (\n  value\n) => {\n  const isArray = Array.isArray(value);\n  const components = isArray ? value : value.split(/\\s+/);\n  const customParse = isArray ? () => null : parsePx;\n\n  if (components.length < 1 || components.length > 3) {\n    throw new ReanimatedError(ERROR_MESSAGES.invalidTransformOrigin(value));\n  }\n\n  maybeSwapComponents(components);\n\n  return [\n    parseValue(\n      components[0] ?? '50%',\n      true,\n      customParse,\n      () => ERROR_MESSAGES.invalidValue(components[0], 'x', value, isArray),\n      HORIZONTAL_CONVERSIONS\n    ),\n    parseValue(\n      components[1] ?? '50%',\n      true,\n      customParse,\n      () => ERROR_MESSAGES.invalidValue(components[1], 'y', value, isArray),\n      VERTICAL_CONVERSIONS\n    ),\n    parseValue(components[2] ?? 0, false, customParse, () =>\n      ERROR_MESSAGES.invalidValue(components[2], 'z', value, isArray)\n    ),\n  ];\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}