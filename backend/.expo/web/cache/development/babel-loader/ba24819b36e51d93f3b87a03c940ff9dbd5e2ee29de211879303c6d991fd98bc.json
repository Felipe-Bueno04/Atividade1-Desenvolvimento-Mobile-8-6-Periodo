{"ast":null,"code":"'use strict';\n\nimport { parseDimensionValue } from \"../../utils\";\nexport var processMarginHorizontal = function processMarginHorizontal(value) {\n  var result = parseDimensionValue(value);\n  if (!result) {\n    return;\n  }\n  return {\n    marginLeft: result,\n    marginRight: result\n  };\n};\nexport var processMarginVertical = function processMarginVertical(value) {\n  var result = parseDimensionValue(value);\n  if (!result) {\n    return;\n  }\n  return {\n    marginTop: result,\n    marginBottom: result\n  };\n};","map":{"version":3,"names":["parseDimensionValue","processMarginHorizontal","value","result","marginLeft","marginRight","processMarginVertical","marginTop","marginBottom"],"sources":["C:\\Users\\User\\Desktop\\Atividade1-Desenvolvimento-Mobile-8-6--Periodo\\backend\\node_modules\\react-native-reanimated\\src\\css\\web\\style\\processors\\margins.ts"],"sourcesContent":["'use strict';\nimport type { DimensionValue } from 'react-native';\n\nimport { parseDimensionValue } from '../../utils';\nimport type { ValueProcessor } from '../types';\n\nexport const processMarginHorizontal: ValueProcessor<DimensionValue> = (\n  value\n) => {\n  const result = parseDimensionValue(value);\n\n  if (!result) {\n    return;\n  }\n\n  return {\n    marginLeft: result,\n    marginRight: result,\n  };\n};\n\nexport const processMarginVertical: ValueProcessor<DimensionValue> = (\n  value\n) => {\n  const result = parseDimensionValue(value);\n\n  if (!result) {\n    return;\n  }\n\n  return {\n    marginTop: result,\n    marginBottom: result,\n  };\n};\n"],"mappings":"AAAA,YAAY;;AAGZ,SAASA,mBAAmB;AAG5B,OAAO,IAAMC,uBAAuD,GAClE,SADWA,uBAAuDA,CAClEC,KAAK,EACF;EACH,IAAMC,MAAM,GAAGH,mBAAmB,CAACE,KAAK,CAAC;EAEzC,IAAI,CAACC,MAAM,EAAE;IACX;EACF;EAEA,OAAO;IACLC,UAAU,EAAED,MAAM;IAClBE,WAAW,EAAEF;EACf,CAAC;AACH,CAAC;AAED,OAAO,IAAMG,qBAAqD,GAChE,SADWA,qBAAqDA,CAChEJ,KAAK,EACF;EACH,IAAMC,MAAM,GAAGH,mBAAmB,CAACE,KAAK,CAAC;EAEzC,IAAI,CAACC,MAAM,EAAE;IACX;EACF;EAEA,OAAO;IACLI,SAAS,EAAEJ,MAAM;IACjBK,YAAY,EAAEL;EAChB,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}