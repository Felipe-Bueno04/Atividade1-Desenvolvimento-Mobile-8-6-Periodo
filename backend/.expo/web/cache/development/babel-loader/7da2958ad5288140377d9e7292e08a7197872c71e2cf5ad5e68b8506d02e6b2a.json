{"ast":null,"code":"'use strict';\n\nimport { useEffect } from 'react';\nimport { logger } from \"../common\";\nimport { ReduceMotion } from \"../commonTypes\";\nimport { isReducedMotionEnabledInSystem, ReducedMotionManager } from \"../ReducedMotion\";\nexport function ReducedMotionConfig(_ref) {\n  var mode = _ref.mode;\n  useEffect(function () {\n    if (!__DEV__) {\n      return;\n    }\n    logger.warn(`Reduced motion setting is overwritten with mode '${mode}'.`);\n  }, []);\n  useEffect(function () {\n    var wasEnabled = ReducedMotionManager.jsValue;\n    switch (mode) {\n      case ReduceMotion.System:\n        ReducedMotionManager.setEnabled(isReducedMotionEnabledInSystem());\n        break;\n      case ReduceMotion.Always:\n        ReducedMotionManager.setEnabled(true);\n        break;\n      case ReduceMotion.Never:\n        ReducedMotionManager.setEnabled(false);\n        break;\n    }\n    return function () {\n      ReducedMotionManager.setEnabled(wasEnabled);\n    };\n  }, [mode]);\n  return null;\n}","map":{"version":3,"names":["useEffect","logger","ReduceMotion","isReducedMotionEnabledInSystem","ReducedMotionManager","ReducedMotionConfig","_ref","mode","__DEV__","warn","wasEnabled","jsValue","System","setEnabled","Always","Never"],"sources":["C:\\Users\\User\\Desktop\\Atividade1-Desenvolvimento-Mobile-8-6--Periodo\\backend\\node_modules\\react-native-reanimated\\src\\component\\ReducedMotionConfig.tsx"],"sourcesContent":["'use strict';\nimport { useEffect } from 'react';\n\nimport { logger } from '../common';\nimport { ReduceMotion } from '../commonTypes';\nimport {\n  isReducedMotionEnabledInSystem,\n  ReducedMotionManager,\n} from '../ReducedMotion';\n\n/**\n * A component that lets you overwrite default reduce motion behavior globally\n * in your application.\n *\n * @param mode - Determines default reduce motion behavior globally in your\n *   application. Configured with {@link ReduceMotion} enum.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/device/ReducedMotionConfig\n */\nexport function ReducedMotionConfig({ mode }: { mode: ReduceMotion }) {\n  useEffect(() => {\n    if (!__DEV__) {\n      return;\n    }\n    logger.warn(`Reduced motion setting is overwritten with mode '${mode}'.`);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const wasEnabled = ReducedMotionManager.jsValue;\n    switch (mode) {\n      case ReduceMotion.System:\n        ReducedMotionManager.setEnabled(isReducedMotionEnabledInSystem());\n        break;\n      case ReduceMotion.Always:\n        ReducedMotionManager.setEnabled(true);\n        break;\n      case ReduceMotion.Never:\n        ReducedMotionManager.setEnabled(false);\n        break;\n    }\n    return () => {\n      ReducedMotionManager.setEnabled(wasEnabled);\n    };\n  }, [mode]);\n\n  return null;\n}\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,SAAS,QAAQ,OAAO;AAEjC,SAASC,MAAM;AACf,SAASC,YAAY;AACrB,SACEC,8BAA8B,EAC9BC,oBAAoB;AAWtB,OAAO,SAASC,mBAAmBA,CAAAC,IAAA,EAAmC;EAAA,IAAhCC,IAAA,GAAAD,IAAA,CAAAC,IAAA;EACpCP,SAAS,CAAC,YAAM;IACd,IAAI,CAACQ,OAAO,EAAE;MACZ;IACF;IACAP,MAAM,CAACQ,IAAI,CAAC,oDAAoDF,IAAI,IAAI,CAAC;EAE3E,CAAC,EAAE,EAAE,CAAC;EAENP,SAAS,CAAC,YAAM;IACd,IAAMU,UAAU,GAAGN,oBAAoB,CAACO,OAAO;IAC/C,QAAQJ,IAAI;MACV,KAAKL,YAAY,CAACU,MAAM;QACtBR,oBAAoB,CAACS,UAAU,CAACV,8BAA8B,CAAC,CAAC,CAAC;QACjE;MACF,KAAKD,YAAY,CAACY,MAAM;QACtBV,oBAAoB,CAACS,UAAU,CAAC,IAAI,CAAC;QACrC;MACF,KAAKX,YAAY,CAACa,KAAK;QACrBX,oBAAoB,CAACS,UAAU,CAAC,KAAK,CAAC;QACtC;IACJ;IACA,OAAO,YAAM;MACXT,oBAAoB,CAACS,UAAU,CAACH,UAAU,CAAC;IAC7C,CAAC;EACH,CAAC,EAAE,CAACH,IAAI,CAAC,CAAC;EAEV,OAAO,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}