{"ast":null,"code":"'use strict';\n\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { convertPropertyToArray, parseSingleTransitionShorthand, splitByComma } from \"../../utils\";\nvar createEmptyTransitionConfig = function createEmptyTransitionConfig() {\n  return {\n    transitionProperty: [],\n    transitionDuration: [],\n    transitionTimingFunction: [],\n    transitionDelay: [],\n    transitionBehavior: []\n  };\n};\nfunction parseTransitionShorthand(value) {\n  return splitByComma(value).reduce(function (acc, part) {\n    var _result$transitionPro, _result$transitionTim, _result$transitionBeh;\n    var result = parseSingleTransitionShorthand(part);\n    acc.transitionProperty.push((_result$transitionPro = result.transitionProperty) != null ? _result$transitionPro : 'all');\n    acc.transitionDuration.push(result.transitionDuration ? String(result.transitionDuration) : '0s');\n    acc.transitionTimingFunction.push((_result$transitionTim = result.transitionTimingFunction) != null ? _result$transitionTim : 'ease');\n    acc.transitionDelay.push(result.transitionDelay ? String(result.transitionDelay) : '0s');\n    acc.transitionBehavior.push((_result$transitionBeh = result.transitionBehavior) != null ? _result$transitionBeh : 'normal');\n    return acc;\n  }, createEmptyTransitionConfig());\n}\nexport function normalizeCSSTransitionProperties(config) {\n  var result = config.transition ? parseTransitionShorthand(config.transition) : createEmptyTransitionConfig();\n  for (var _ref of Object.entries(config)) {\n    var _ref2 = _slicedToArray(_ref, 2);\n    var key = _ref2[0];\n    var value = _ref2[1];\n    result[key] = convertPropertyToArray(value);\n  }\n  return result;\n}","map":{"version":3,"names":["_slicedToArray","convertPropertyToArray","parseSingleTransitionShorthand","splitByComma","createEmptyTransitionConfig","transitionProperty","transitionDuration","transitionTimingFunction","transitionDelay","transitionBehavior","parseTransitionShorthand","value","reduce","acc","part","_result$transitionPro","_result$transitionTim","_result$transitionBeh","result","push","String","normalizeCSSTransitionProperties","config","transition","_ref","Object","entries","_ref2","key"],"sources":["C:\\Users\\User\\Desktop\\Atividade1-Desenvolvimento-Mobile-8-6--Periodo\\backend\\node_modules\\react-native-reanimated\\src\\css\\web\\normalization\\transition.ts"],"sourcesContent":["'use strict';\nimport type {\n  AnyRecord,\n  CSSTransitionProp,\n  CSSTransitionProperties,\n} from '../../types';\nimport {\n  convertPropertyToArray,\n  parseSingleTransitionShorthand,\n  splitByComma,\n} from '../../utils';\n\ntype ExpandedCSSTransitionConfigProperties = Record<\n  Exclude<CSSTransitionProp, 'transition'>,\n  string[]\n>;\n\nconst createEmptyTransitionConfig =\n  (): ExpandedCSSTransitionConfigProperties => ({\n    transitionProperty: [],\n    transitionDuration: [],\n    transitionTimingFunction: [],\n    transitionDelay: [],\n    transitionBehavior: [],\n  });\n\nfunction parseTransitionShorthand(value: string) {\n  return splitByComma(value).reduce<ExpandedCSSTransitionConfigProperties>(\n    (acc, part) => {\n      const result = parseSingleTransitionShorthand(part);\n      acc.transitionProperty.push(result.transitionProperty ?? 'all');\n      acc.transitionDuration.push(\n        result.transitionDuration ? String(result.transitionDuration) : '0s'\n      );\n      acc.transitionTimingFunction.push(\n        result.transitionTimingFunction ?? 'ease'\n      );\n      acc.transitionDelay.push(\n        result.transitionDelay ? String(result.transitionDelay) : '0s'\n      );\n      acc.transitionBehavior.push(result.transitionBehavior ?? 'normal');\n      return acc;\n    },\n    createEmptyTransitionConfig()\n  );\n}\n\nexport function normalizeCSSTransitionProperties(\n  config: CSSTransitionProperties\n): ExpandedCSSTransitionConfigProperties {\n  const result: AnyRecord = config.transition\n    ? parseTransitionShorthand(config.transition)\n    : createEmptyTransitionConfig();\n\n  for (const [key, value] of Object.entries(config)) {\n    result[key] = convertPropertyToArray(value);\n  }\n\n  return result as ExpandedCSSTransitionConfigProperties;\n}\n"],"mappings":"AAAA,YAAY;;AAAA,OAAAA,cAAA;AAMZ,SACEC,sBAAsB,EACtBC,8BAA8B,EAC9BC,YAAY;AAQd,IAAMC,2BAA2B,GAC/B,SADIA,2BAA2BA,CAAA;EAAA,OACe;IAC5CC,kBAAkB,EAAE,EAAE;IACtBC,kBAAkB,EAAE,EAAE;IACtBC,wBAAwB,EAAE,EAAE;IAC5BC,eAAe,EAAE,EAAE;IACnBC,kBAAkB,EAAE;EACtB,CAAC;AAAA,CAAC;AAEJ,SAASC,wBAAwBA,CAACC,KAAa,EAAE;EAC/C,OAAOR,YAAY,CAACQ,KAAK,CAAC,CAACC,MAAM,CAC/B,UAACC,GAAG,EAAEC,IAAI,EAAK;IAAA,IAAAC,qBAAA,EAAAC,qBAAA,EAAAC,qBAAA;IACb,IAAMC,MAAM,GAAGhB,8BAA8B,CAACY,IAAI,CAAC;IACnDD,GAAG,CAACR,kBAAkB,CAACc,IAAI,EAAAJ,qBAAA,GAACG,MAAM,CAACb,kBAAkB,YAAAU,qBAAA,GAAI,KAAK,CAAC;IAC/DF,GAAG,CAACP,kBAAkB,CAACa,IAAI,CACzBD,MAAM,CAACZ,kBAAkB,GAAGc,MAAM,CAACF,MAAM,CAACZ,kBAAkB,CAAC,GAAG,IAClE,CAAC;IACDO,GAAG,CAACN,wBAAwB,CAACY,IAAI,EAAAH,qBAAA,GAC/BE,MAAM,CAACX,wBAAwB,YAAAS,qBAAA,GAAI,MACrC,CAAC;IACDH,GAAG,CAACL,eAAe,CAACW,IAAI,CACtBD,MAAM,CAACV,eAAe,GAAGY,MAAM,CAACF,MAAM,CAACV,eAAe,CAAC,GAAG,IAC5D,CAAC;IACDK,GAAG,CAACJ,kBAAkB,CAACU,IAAI,EAAAF,qBAAA,GAACC,MAAM,CAACT,kBAAkB,YAAAQ,qBAAA,GAAI,QAAQ,CAAC;IAClE,OAAOJ,GAAG;EACZ,CAAC,EACDT,2BAA2B,CAAC,CAC9B,CAAC;AACH;AAEA,OAAO,SAASiB,gCAAgCA,CAC9CC,MAA+B,EACQ;EACvC,IAAMJ,MAAiB,GAAGI,MAAM,CAACC,UAAU,GACvCb,wBAAwB,CAACY,MAAM,CAACC,UAAU,CAAC,GAC3CnB,2BAA2B,CAAC,CAAC;EAEjC,SAAAoB,IAAA,IAA2BC,MAAM,CAACC,OAAO,CAACJ,MAAM,CAAC,EAAE;IAAA,IAAAK,KAAA,GAAA3B,cAAA,CAAAwB,IAAA;IAAA,IAAvCI,GAAG,GAAAD,KAAA;IAAA,IAAEhB,KAAK,GAAAgB,KAAA;IACpBT,MAAM,CAACU,GAAG,CAAC,GAAG3B,sBAAsB,CAACU,KAAK,CAAC;EAC7C;EAEA,OAAOO,MAAM;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}