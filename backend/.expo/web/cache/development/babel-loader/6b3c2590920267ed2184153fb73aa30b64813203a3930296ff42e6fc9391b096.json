{"ast":null,"code":"'use strict';\n\nimport { createSerializable } from \"./serializable\";\nexport function __installUnpacker() {\n  var serializer = !globalThis._WORKLET || globalThis._WORKLETS_BUNDLE_MODE ? function (value, _) {\n    return createSerializable(value);\n  } : globalThis._createSerializable;\n  function synchronizableUnpacker(synchronizableRef) {\n    var synchronizable = synchronizableRef;\n    var proxy = globalThis.__workletsModuleProxy;\n    synchronizable.__synchronizableRef = true;\n    synchronizable.getDirty = function () {\n      return proxy.synchronizableGetDirty(synchronizable);\n    };\n    synchronizable.getBlocking = function () {\n      return proxy.synchronizableGetBlocking(synchronizable);\n    };\n    synchronizable.setBlocking = function (valueOrFunction) {\n      var newValue;\n      if (typeof valueOrFunction === 'function') {\n        var func = valueOrFunction;\n        synchronizable.lock();\n        var prev = synchronizable.getBlocking();\n        newValue = func(prev);\n        proxy.synchronizableSetBlocking(synchronizable, serializer(newValue, undefined));\n        synchronizable.unlock();\n      } else {\n        var value = valueOrFunction;\n        newValue = value;\n        proxy.synchronizableSetBlocking(synchronizable, serializer(newValue, undefined));\n      }\n    };\n    synchronizable.lock = function () {\n      proxy.synchronizableLock(synchronizable);\n    };\n    synchronizable.unlock = function () {\n      proxy.synchronizableUnlock(synchronizable);\n    };\n    return synchronizable;\n  }\n  globalThis.__synchronizableUnpacker = synchronizableUnpacker;\n}","map":{"version":3,"names":["createSerializable","__installUnpacker","serializer","globalThis","_WORKLET","_WORKLETS_BUNDLE_MODE","value","_","_createSerializable","synchronizableUnpacker","synchronizableRef","synchronizable","proxy","__workletsModuleProxy","__synchronizableRef","getDirty","synchronizableGetDirty","getBlocking","synchronizableGetBlocking","setBlocking","valueOrFunction","newValue","func","lock","prev","synchronizableSetBlocking","undefined","unlock","synchronizableLock","synchronizableUnlock","__synchronizableUnpacker"],"sources":["C:\\Users\\User\\Desktop\\Atividade1-Desenvolvimento-Mobile-8-6--Periodo\\backend\\node_modules\\react-native-worklets\\src\\synchronizableUnpacker.ts"],"sourcesContent":["'use strict';\n\nimport { createSerializable } from './serializable';\nimport type { Synchronizable, SynchronizableRef } from './synchronizable';\n\nexport function __installUnpacker() {\n  // TODO: Add cache for synchronizables.\n  const serializer =\n    !globalThis._WORKLET || globalThis._WORKLETS_BUNDLE_MODE\n      ? (value: unknown, _: unknown) => createSerializable(value)\n      : globalThis._createSerializable;\n\n  function synchronizableUnpacker<TValue>(\n    synchronizableRef: SynchronizableRef<TValue>\n  ): Synchronizable<TValue> {\n    const synchronizable =\n      synchronizableRef as unknown as Synchronizable<TValue>;\n    const proxy = globalThis.__workletsModuleProxy!;\n\n    synchronizable.__synchronizableRef = true;\n    synchronizable.getDirty = () => {\n      return proxy.synchronizableGetDirty(synchronizable);\n    };\n    synchronizable.getBlocking = () => {\n      return proxy.synchronizableGetBlocking(synchronizable);\n    };\n    synchronizable.setBlocking = (\n      valueOrFunction: TValue | ((prev: TValue) => TValue)\n    ) => {\n      let newValue: TValue;\n      if (typeof valueOrFunction === 'function') {\n        const func = valueOrFunction as (prev: TValue) => TValue;\n        synchronizable.lock();\n        const prev = synchronizable.getBlocking();\n        newValue = func(prev);\n\n        proxy.synchronizableSetBlocking(\n          synchronizable,\n          serializer(newValue, undefined)\n        );\n\n        synchronizable.unlock();\n      } else {\n        const value = valueOrFunction;\n        newValue = value;\n        proxy.synchronizableSetBlocking(\n          synchronizable,\n          serializer(newValue, undefined)\n        );\n      }\n    };\n    synchronizable.lock = () => {\n      proxy.synchronizableLock(synchronizable);\n    };\n    synchronizable.unlock = () => {\n      proxy.synchronizableUnlock(synchronizable);\n    };\n\n    return synchronizable;\n  }\n\n  globalThis.__synchronizableUnpacker = synchronizableUnpacker;\n}\n\nexport type SynchronizableUnpacker = <TValue>(\n  synchronizableRef: SynchronizableRef<TValue>\n) => Synchronizable<TValue>;\n"],"mappings":"AAAA,YAAY;;AAEZ,SAASA,kBAAkB;AAG3B,OAAO,SAASC,iBAAiBA,CAAA,EAAG;EAElC,IAAMC,UAAU,GACd,CAACC,UAAU,CAACC,QAAQ,IAAID,UAAU,CAACE,qBAAqB,GACpD,UAACC,KAAc,EAAEC,CAAU;IAAA,OAAKP,kBAAkB,CAACM,KAAK,CAAC;EAAA,IACzDH,UAAU,CAACK,mBAAmB;EAEpC,SAASC,sBAAsBA,CAC7BC,iBAA4C,EACpB;IACxB,IAAMC,cAAc,GAClBD,iBAAsD;IACxD,IAAME,KAAK,GAAGT,UAAU,CAACU,qBAAsB;IAE/CF,cAAc,CAACG,mBAAmB,GAAG,IAAI;IACzCH,cAAc,CAACI,QAAQ,GAAG,YAAM;MAC9B,OAAOH,KAAK,CAACI,sBAAsB,CAACL,cAAc,CAAC;IACrD,CAAC;IACDA,cAAc,CAACM,WAAW,GAAG,YAAM;MACjC,OAAOL,KAAK,CAACM,yBAAyB,CAACP,cAAc,CAAC;IACxD,CAAC;IACDA,cAAc,CAACQ,WAAW,GACxB,UAAAC,eAAoD,EACjD;MACH,IAAIC,QAAgB;MACpB,IAAI,OAAOD,eAAe,KAAK,UAAU,EAAE;QACzC,IAAME,IAAI,GAAGF,eAA2C;QACxDT,cAAc,CAACY,IAAI,CAAC,CAAC;QACrB,IAAMC,IAAI,GAAGb,cAAc,CAACM,WAAW,CAAC,CAAC;QACzCI,QAAQ,GAAGC,IAAI,CAACE,IAAI,CAAC;QAErBZ,KAAK,CAACa,yBAAyB,CAC7Bd,cAAc,EACdT,UAAU,CAACmB,QAAQ,EAAEK,SAAS,CAChC,CAAC;QAEDf,cAAc,CAACgB,MAAM,CAAC,CAAC;MACzB,CAAC,MAAM;QACL,IAAMrB,KAAK,GAAGc,eAAe;QAC7BC,QAAQ,GAAGf,KAAK;QAChBM,KAAK,CAACa,yBAAyB,CAC7Bd,cAAc,EACdT,UAAU,CAACmB,QAAQ,EAAEK,SAAS,CAChC,CAAC;MACH;IACF,CAAC;IACDf,cAAc,CAACY,IAAI,GAAG,YAAM;MAC1BX,KAAK,CAACgB,kBAAkB,CAACjB,cAAc,CAAC;IAC1C,CAAC;IACDA,cAAc,CAACgB,MAAM,GAAG,YAAM;MAC5Bf,KAAK,CAACiB,oBAAoB,CAAClB,cAAc,CAAC;IAC5C,CAAC;IAED,OAAOA,cAAc;EACvB;EAEAR,UAAU,CAAC2B,wBAAwB,GAAGrB,sBAAsB;AAC9D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}