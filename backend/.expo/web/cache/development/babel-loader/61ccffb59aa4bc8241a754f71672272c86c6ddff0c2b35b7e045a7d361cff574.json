{"ast":null,"code":"'use strict';\n\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { bundleValueUnpacker } from \"./bundleUnpacker\";\nimport { setupCallGuard } from \"./callGuard\";\nimport { registerReportFatalRemoteError } from \"./errors\";\nimport { IS_JEST, SHOULD_BE_USE_WEB } from \"./PlatformChecker\";\nimport { setupSetImmediate } from \"./runLoop/common/setImmediatePolyfill\";\nimport { setupSetInterval } from \"./runLoop/common/setIntervalPolyfill\";\nimport { mockedRequestAnimationFrame } from \"./runLoop/uiRuntime/mockedRequestAnimationFrame\";\nimport { setupRequestAnimationFrame } from \"./runLoop/uiRuntime/requestAnimationFrame\";\nimport { setupSetTimeout } from \"./runLoop/uiRuntime/setTimeoutPolyfill\";\nimport { RuntimeKind } from \"./runtimeKind\";\nimport { __installUnpacker as installSynchronizableUnpacker } from \"./synchronizableUnpacker\";\nimport { executeOnUIRuntimeSync, runOnJS, setupMicrotasks } from \"./threads\";\nimport { isWorkletFunction } from \"./workletFunction\";\nimport { registerWorkletsError, WorkletsError } from \"./WorkletsError\";\nimport { WorkletsModule } from \"./WorkletsModule\";\nvar capturableConsole;\nexport function getMemorySafeCapturableConsole() {\n  if (capturableConsole) {\n    return capturableConsole;\n  }\n  var consoleCopy = Object.fromEntries(Object.entries(console).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      methodName = _ref2[0],\n      method = _ref2[1];\n    var methodWrapper = function methodWrapper() {\n      return method.apply(void 0, arguments);\n    };\n    if (method.name) {\n      Object.defineProperty(methodWrapper, 'name', {\n        value: method.name,\n        writable: false\n      });\n    }\n    return [methodName, methodWrapper];\n  }));\n  capturableConsole = consoleCopy;\n  return consoleCopy;\n}\nexport function setupConsole(boundCapturableConsole) {\n  'worklet';\n  globalThis.console = {\n    assert: runOnJS(boundCapturableConsole.assert),\n    debug: runOnJS(boundCapturableConsole.debug),\n    log: runOnJS(boundCapturableConsole.log),\n    warn: runOnJS(boundCapturableConsole.warn),\n    error: runOnJS(boundCapturableConsole.error),\n    info: runOnJS(boundCapturableConsole.info)\n  };\n}\nvar initialized = false;\nexport function init() {\n  if (initialized) {\n    return;\n  }\n  initialized = true;\n  if (globalThis.__RUNTIME_KIND === undefined) {\n    globalThis.__RUNTIME_KIND = RuntimeKind.ReactNative;\n  }\n  initializeRuntime();\n  if (SHOULD_BE_USE_WEB) {\n    initializeRuntimeOnWeb();\n  }\n  if (globalThis.__RUNTIME_KIND !== RuntimeKind.ReactNative) {\n    initializeWorkletRuntime();\n  } else {\n    initializeRNRuntime();\n    if (!SHOULD_BE_USE_WEB) {\n      installRNBindingsOnUIRuntime();\n    }\n  }\n}\nfunction initializeRuntime() {\n  if (globalThis._WORKLETS_BUNDLE_MODE) {\n    globalThis.__valueUnpacker = bundleValueUnpacker;\n  }\n  installSynchronizableUnpacker();\n}\nfunction initializeRNRuntime() {\n  if (__DEV__ && !SHOULD_BE_USE_WEB) {\n    var testWorklet = function testWorklet() {\n      'worklet';\n    };\n    if (!isWorkletFunction(testWorklet)) {\n      throw new WorkletsError(`Failed to create a worklet. See https://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#failed-to-create-a-worklet for more details.`);\n    }\n  }\n  registerReportFatalRemoteError();\n}\nfunction initializeWorkletRuntime() {\n  if (globalThis._WORKLETS_BUNDLE_MODE) {\n    setupCallGuard();\n    if (__DEV__) {\n      var Refresh = new Proxy({}, {\n        get: function get() {\n          return function () {};\n        }\n      });\n      globalThis.__r.Refresh = Refresh;\n      var modules = require.getModules();\n      var ReactNativeModuleId = require.resolveWeak('react-native');\n      var factory = function factory(_global, _require, _importDefault, _importAll, module, _exports, _dependencyMap) {\n        module.exports = new Proxy({}, {\n          get: function get(_target, prop) {\n            globalThis.console.warn(`You tried to import '${String(prop)}' from 'react-native' module on a Worklet Runtime. Using 'react-native' module on a Worklet Runtime is not allowed.`);\n            return {\n              get: function get() {\n                return undefined;\n              }\n            };\n          }\n        });\n      };\n      var mod = {\n        dependencyMap: [],\n        factory: factory,\n        hasError: false,\n        importedAll: {},\n        importedDefault: {},\n        isInitialized: false,\n        publicModule: {\n          exports: {}\n        }\n      };\n      modules.set(ReactNativeModuleId, mod);\n    }\n  }\n}\nfunction initializeRuntimeOnWeb() {\n  globalThis._WORKLET = false;\n  globalThis._log = console.log;\n  globalThis._getAnimationTimestamp = function () {\n    return performance.now();\n  };\n  if (IS_JEST) {\n    globalThis.requestAnimationFrame = mockedRequestAnimationFrame;\n  }\n}\nfunction installRNBindingsOnUIRuntime() {\n  if (!WorkletsModule) {\n    throw new WorkletsError('Worklets are trying to initialize the UI runtime without a valid WorkletsModule');\n  }\n  var runtimeBoundCapturableConsole = getMemorySafeCapturableConsole();\n  if (!globalThis._WORKLETS_BUNDLE_MODE) {\n    executeOnUIRuntimeSync(setupCallGuard)();\n    executeOnUIRuntimeSync(registerWorkletsError)();\n  }\n  executeOnUIRuntimeSync(function () {\n    'worklet';\n\n    setupConsole(runtimeBoundCapturableConsole);\n    setupMicrotasks();\n    setupRequestAnimationFrame();\n    setupSetTimeout();\n    setupSetImmediate();\n    setupSetInterval();\n  })();\n}","map":{"version":3,"names":["_slicedToArray","bundleValueUnpacker","setupCallGuard","registerReportFatalRemoteError","IS_JEST","SHOULD_BE_USE_WEB","setupSetImmediate","setupSetInterval","mockedRequestAnimationFrame","setupRequestAnimationFrame","setupSetTimeout","RuntimeKind","__installUnpacker","installSynchronizableUnpacker","executeOnUIRuntimeSync","runOnJS","setupMicrotasks","isWorkletFunction","registerWorkletsError","WorkletsError","WorkletsModule","capturableConsole","getMemorySafeCapturableConsole","consoleCopy","Object","fromEntries","entries","console","map","_ref","_ref2","methodName","method","methodWrapper","apply","arguments","name","defineProperty","value","writable","setupConsole","boundCapturableConsole","globalThis","assert","debug","log","warn","error","info","initialized","init","__RUNTIME_KIND","undefined","ReactNative","initializeRuntime","initializeRuntimeOnWeb","initializeWorkletRuntime","initializeRNRuntime","installRNBindingsOnUIRuntime","_WORKLETS_BUNDLE_MODE","__valueUnpacker","__DEV__","testWorklet","Refresh","Proxy","get","__r","modules","require","getModules","ReactNativeModuleId","resolveWeak","factory","_global","_require","_importDefault","_importAll","module","_exports","_dependencyMap","exports","_target","prop","String","mod","dependencyMap","hasError","importedAll","importedDefault","isInitialized","publicModule","set","_WORKLET","_log","_getAnimationTimestamp","performance","now","requestAnimationFrame","runtimeBoundCapturableConsole"],"sources":["C:\\Users\\User\\Desktop\\Atividade1-Desenvolvimento-Mobile-8-6--Periodo\\backend\\node_modules\\react-native-worklets\\src\\initializers.ts"],"sourcesContent":["'use strict';\n\nimport { bundleValueUnpacker } from './bundleUnpacker';\nimport { setupCallGuard } from './callGuard';\nimport { registerReportFatalRemoteError } from './errors';\nimport { IS_JEST, SHOULD_BE_USE_WEB } from './PlatformChecker';\nimport { setupSetImmediate } from './runLoop/common/setImmediatePolyfill';\nimport { setupSetInterval } from './runLoop/common/setIntervalPolyfill';\nimport { mockedRequestAnimationFrame } from './runLoop/uiRuntime/mockedRequestAnimationFrame';\nimport { setupRequestAnimationFrame } from './runLoop/uiRuntime/requestAnimationFrame';\nimport { setupSetTimeout } from './runLoop/uiRuntime/setTimeoutPolyfill';\nimport { RuntimeKind } from './runtimeKind';\nimport { __installUnpacker as installSynchronizableUnpacker } from './synchronizableUnpacker';\nimport { executeOnUIRuntimeSync, runOnJS, setupMicrotasks } from './threads';\nimport { isWorkletFunction } from './workletFunction';\nimport { registerWorkletsError, WorkletsError } from './WorkletsError';\nimport { WorkletsModule } from './WorkletsModule';\nimport type { ValueUnpacker } from './workletTypes';\n\nlet capturableConsole: typeof console;\n\n/**\n * Currently there seems to be a bug in the JSI layer which causes a crash when\n * we try to copy some of the console methods, i.e. `clear` or `dirxml`.\n *\n * The crash happens only in React Native 0.75. It's not reproducible in neither\n * 0.76 nor 0.74. It also happens only in the configuration of a debug app and\n * production bundle.\n *\n * I haven't yet discovered what exactly causes the crash. It's tied to the\n * console methods sometimes being `HostFunction`s. Therefore, as a workaround\n * we don't copy the methods as they are in the original console object, we copy\n * JavaScript wrappers instead.\n */\nexport function getMemorySafeCapturableConsole(): typeof console {\n  if (capturableConsole) {\n    return capturableConsole;\n  }\n\n  const consoleCopy = Object.fromEntries(\n    Object.entries(console).map(([methodName, method]) => {\n      const methodWrapper = function methodWrapper(...args: unknown[]) {\n        return method(...args);\n      };\n      if (method.name) {\n        /**\n         * Set the original method name as the wrapper name if available.\n         *\n         * It might be unnecessary but if we want to fully mimic the console\n         * object we should take into the account the fact some code might rely\n         * on the method name.\n         */\n        Object.defineProperty(methodWrapper, 'name', {\n          value: method.name,\n          writable: false,\n        });\n      }\n      return [methodName, methodWrapper];\n    })\n  );\n\n  capturableConsole = consoleCopy as unknown as typeof console;\n\n  return consoleCopy as unknown as typeof console;\n}\n\nexport function setupConsole(boundCapturableConsole: typeof console) {\n  'worklet';\n  // @ts-ignore TypeScript doesn't like that there are missing methods in console object, but we don't provide all the methods for the UI runtime console version\n  globalThis.console = {\n    assert: runOnJS(boundCapturableConsole.assert),\n    debug: runOnJS(boundCapturableConsole.debug),\n    log: runOnJS(boundCapturableConsole.log),\n    warn: runOnJS(boundCapturableConsole.warn),\n    error: runOnJS(boundCapturableConsole.error),\n    info: runOnJS(boundCapturableConsole.info),\n  };\n}\n\nlet initialized = false;\n\nexport function init() {\n  if (initialized) {\n    return;\n  }\n  initialized = true;\n\n  if (globalThis.__RUNTIME_KIND === undefined) {\n    // The only runtime that doesn't have `__RUNTIME_KIND` preconfigured\n    // is the RN Runtime. We must set it as soon as possible.\n    globalThis.__RUNTIME_KIND = RuntimeKind.ReactNative;\n  }\n\n  initializeRuntime();\n\n  if (SHOULD_BE_USE_WEB) {\n    initializeRuntimeOnWeb();\n  }\n\n  if (globalThis.__RUNTIME_KIND !== RuntimeKind.ReactNative) {\n    initializeWorkletRuntime();\n  } else {\n    initializeRNRuntime();\n    if (!SHOULD_BE_USE_WEB) {\n      installRNBindingsOnUIRuntime();\n    }\n  }\n}\n\n/** A function that should be run on any kind of runtime. */\nfunction initializeRuntime() {\n  if (globalThis._WORKLETS_BUNDLE_MODE) {\n    globalThis.__valueUnpacker = bundleValueUnpacker as ValueUnpacker;\n  }\n  installSynchronizableUnpacker();\n}\n\n/** A function that should be run only on React Native runtime. */\nfunction initializeRNRuntime() {\n  if (__DEV__ && !SHOULD_BE_USE_WEB) {\n    const testWorklet = () => {\n      'worklet';\n    };\n    if (!isWorkletFunction(testWorklet)) {\n      throw new WorkletsError(\n        `Failed to create a worklet. See https://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#failed-to-create-a-worklet for more details.`\n      );\n    }\n  }\n\n  registerReportFatalRemoteError();\n}\n\n/** A function that should be run only on Worklet runtimes. */\nfunction initializeWorkletRuntime() {\n  if (globalThis._WORKLETS_BUNDLE_MODE) {\n    setupCallGuard();\n\n    if (__DEV__) {\n      /*\n       * Temporary workaround for Metro bundler. We must implement a dummy\n       * Refresh module to prevent Metro from throwing irrelevant errors.\n       */\n      const Refresh = new Proxy(\n        {},\n        {\n          get() {\n            return () => {};\n          },\n        }\n      );\n\n      globalThis.__r.Refresh = Refresh;\n\n      /* Gracefully handle unwanted imports from React Native. */\n      // @ts-expect-error type not exposed by Metro\n      const modules = require.getModules();\n      // @ts-expect-error type not exposed by Metro\n      const ReactNativeModuleId = require.resolveWeak('react-native');\n\n      const factory = function (\n        _global: unknown,\n        _require: unknown,\n        _importDefault: unknown,\n        _importAll: unknown,\n        module: Record<string, unknown>,\n        _exports: unknown,\n        _dependencyMap: unknown\n      ) {\n        module.exports = new Proxy(\n          {},\n          {\n            get: function get(_target, prop) {\n              globalThis.console.warn(\n                `You tried to import '${String(prop)}' from 'react-native' module on a Worklet Runtime. Using 'react-native' module on a Worklet Runtime is not allowed.`\n              );\n              return {\n                get() {\n                  return undefined;\n                },\n              };\n            },\n          }\n        );\n      };\n\n      const mod = {\n        dependencyMap: [],\n        factory,\n        hasError: false,\n        importedAll: {},\n        importedDefault: {},\n        isInitialized: false,\n        publicModule: {\n          exports: {},\n        },\n      };\n\n      modules.set(ReactNativeModuleId, mod);\n    }\n  }\n}\n\n/** A function that should be run only on RN Runtime in web implementation. */\nfunction initializeRuntimeOnWeb() {\n  globalThis._WORKLET = false;\n  globalThis._log = console.log;\n  globalThis._getAnimationTimestamp = () => performance.now();\n  if (IS_JEST) {\n    // requestAnimationFrame react-native jest's setup is incorrect as it polyfills\n    // the method directly using setTimeout, therefore the callback doesn't get the\n    // expected timestamp as the only argument: https://github.com/facebook/react-native/blob/main/packages/react-native/jest/setup.js#L28\n    // We override this setup here to make sure that callbacks get the proper timestamps\n    // when executed. For non-jest environments we define requestAnimationFrame in setupRequestAnimationFrame\n    // @ts-ignore TypeScript uses Node definition for rAF, setTimeout, etc which returns a Timeout object rather than a number\n    globalThis.requestAnimationFrame = mockedRequestAnimationFrame;\n  }\n}\n\n/**\n * A function that should be run on the RN Runtime to configure the UI Runtime\n * with callback bindings.\n */\nfunction installRNBindingsOnUIRuntime() {\n  if (!WorkletsModule) {\n    throw new WorkletsError(\n      'Worklets are trying to initialize the UI runtime without a valid WorkletsModule'\n    );\n  }\n\n  const runtimeBoundCapturableConsole = getMemorySafeCapturableConsole();\n\n  if (!globalThis._WORKLETS_BUNDLE_MODE) {\n    /** In bundle mode Runtimes setup their callGuard themselves. */\n    executeOnUIRuntimeSync(setupCallGuard)();\n\n    /**\n     * Register WorkletsError in the UI runtime global scope. (we are using\n     * `executeOnUIRuntimeSync` here to make sure that the changes are applied\n     * before any async operations are executed on the UI runtime).\n     *\n     * There's no need to register the error in bundle mode.\n     */\n    executeOnUIRuntimeSync(registerWorkletsError)();\n  }\n\n  executeOnUIRuntimeSync(() => {\n    'worklet';\n\n    setupConsole(runtimeBoundCapturableConsole);\n    /**\n     * TODO: Move `setupMicrotasks` and `setupRequestAnimationFrame` to a\n     * separate function once we have a better way to distinguish between\n     * Worklet Runtimes.\n     */\n    setupMicrotasks();\n    setupRequestAnimationFrame();\n    setupSetTimeout();\n    setupSetImmediate();\n    setupSetInterval();\n  })();\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}