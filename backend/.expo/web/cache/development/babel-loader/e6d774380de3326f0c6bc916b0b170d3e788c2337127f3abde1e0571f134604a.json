{"ast":null,"code":"'use strict';\n\nimport { parseDimensionValue } from \"../../utils\";\nexport var processPaddingHorizontal = function processPaddingHorizontal(value) {\n  var result = parseDimensionValue(value);\n  if (!result) {\n    return;\n  }\n  return {\n    paddingLeft: result,\n    paddingRight: result\n  };\n};\nexport var processPaddingVertical = function processPaddingVertical(value) {\n  var result = parseDimensionValue(value);\n  if (!result) {\n    return;\n  }\n  return {\n    paddingTop: result,\n    paddingBottom: result\n  };\n};","map":{"version":3,"names":["parseDimensionValue","processPaddingHorizontal","value","result","paddingLeft","paddingRight","processPaddingVertical","paddingTop","paddingBottom"],"sources":["C:\\Users\\User\\Desktop\\Atividade1-Desenvolvimento-Mobile-8-6--Periodo\\backend\\node_modules\\react-native-reanimated\\src\\css\\web\\style\\processors\\paddings.ts"],"sourcesContent":["'use strict';\nimport type { DimensionValue } from 'react-native';\n\nimport { parseDimensionValue } from '../../utils';\nimport type { ValueProcessor } from '../types';\n\nexport const processPaddingHorizontal: ValueProcessor<DimensionValue> = (\n  value\n) => {\n  const result = parseDimensionValue(value);\n\n  if (!result) {\n    return;\n  }\n\n  return {\n    paddingLeft: result,\n    paddingRight: result,\n  };\n};\n\nexport const processPaddingVertical: ValueProcessor<DimensionValue> = (\n  value\n) => {\n  const result = parseDimensionValue(value);\n\n  if (!result) {\n    return;\n  }\n\n  return {\n    paddingTop: result,\n    paddingBottom: result,\n  };\n};\n"],"mappings":"AAAA,YAAY;;AAGZ,SAASA,mBAAmB;AAG5B,OAAO,IAAMC,wBAAwD,GACnE,SADWA,wBAAwDA,CACnEC,KAAK,EACF;EACH,IAAMC,MAAM,GAAGH,mBAAmB,CAACE,KAAK,CAAC;EAEzC,IAAI,CAACC,MAAM,EAAE;IACX;EACF;EAEA,OAAO;IACLC,WAAW,EAAED,MAAM;IACnBE,YAAY,EAAEF;EAChB,CAAC;AACH,CAAC;AAED,OAAO,IAAMG,sBAAsD,GACjE,SADWA,sBAAsDA,CACjEJ,KAAK,EACF;EACH,IAAMC,MAAM,GAAGH,mBAAmB,CAACE,KAAK,CAAC;EAEzC,IAAI,CAACC,MAAM,EAAE;IACX;EACF;EAEA,OAAO;IACLI,UAAU,EAAEJ,MAAM;IAClBK,aAAa,EAAEL;EACjB,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}