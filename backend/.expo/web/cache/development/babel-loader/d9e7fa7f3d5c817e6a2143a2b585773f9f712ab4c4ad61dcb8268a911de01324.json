{"ast":null,"code":"'use strict';\n\nimport { RuntimeKind } from 'react-native-worklets';\nfunction ReanimatedErrorConstructor(message) {\n  'worklet';\n\n  var prefix = '[Reanimated]';\n  var errorInstance = new Error(message ? `${prefix} ${message}` : prefix);\n  errorInstance.name = 'ReanimatedError';\n  return errorInstance;\n}\nexport function registerReanimatedError() {\n  'worklet';\n\n  if (globalThis.__RUNTIME_KIND !== RuntimeKind.ReactNative) {\n    globalThis.ReanimatedError = ReanimatedErrorConstructor;\n  }\n}\nexport var ReanimatedError = ReanimatedErrorConstructor;","map":{"version":3,"names":["RuntimeKind","ReanimatedErrorConstructor","message","prefix","errorInstance","Error","name","registerReanimatedError","globalThis","__RUNTIME_KIND","ReactNative","ReanimatedError"],"sources":["C:\\Users\\User\\Desktop\\Atividade1-Desenvolvimento-Mobile-8-6--Periodo\\backend\\node_modules\\react-native-reanimated\\src\\common\\errors.ts"],"sourcesContent":["/* eslint-disable reanimated/use-reanimated-error */\n'use strict';\n\nimport { RuntimeKind } from 'react-native-worklets';\n\nfunction ReanimatedErrorConstructor(message: string): ReanimatedError {\n  'worklet';\n  const prefix = '[Reanimated]';\n  const errorInstance = new Error(message ? `${prefix} ${message}` : prefix);\n  errorInstance.name = 'ReanimatedError';\n  return errorInstance as ReanimatedError;\n}\n\n/**\n * Registers ReanimatedError in the global scope. Register only for Worklet\n * runtimes.\n */\nexport function registerReanimatedError() {\n  'worklet';\n  if (globalThis.__RUNTIME_KIND !== RuntimeKind.ReactNative) {\n    globalThis.ReanimatedError =\n      ReanimatedErrorConstructor as IReanimatedErrorConstructor;\n  }\n}\n\nexport const ReanimatedError =\n  ReanimatedErrorConstructor as IReanimatedErrorConstructor;\n\nexport interface IReanimatedErrorConstructor extends Error {\n  new (message?: string): ReanimatedError;\n  (message?: string): ReanimatedError;\n  readonly prototype: ReanimatedError;\n}\n\nexport type ReanimatedError = Error & { name: 'Reanimated' }; // signed type\n"],"mappings":"AACA,YAAY;;AAEZ,SAASA,WAAW,QAAQ,uBAAuB;AAEnD,SAASC,0BAA0BA,CAACC,OAAe,EAAmB;EACpE,SAAS;;EACT,IAAMC,MAAM,GAAG,cAAc;EAC7B,IAAMC,aAAa,GAAG,IAAIC,KAAK,CAACH,OAAO,GAAG,GAAGC,MAAM,IAAID,OAAO,EAAE,GAAGC,MAAM,CAAC;EAC1EC,aAAa,CAACE,IAAI,GAAG,iBAAiB;EACtC,OAAOF,aAAa;AACtB;AAMA,OAAO,SAASG,uBAAuBA,CAAA,EAAG;EACxC,SAAS;;EACT,IAAIC,UAAU,CAACC,cAAc,KAAKT,WAAW,CAACU,WAAW,EAAE;IACzDF,UAAU,CAACG,eAAe,GACxBV,0BAAyD;EAC7D;AACF;AAEA,OAAO,IAAMU,eAAe,GAC1BV,0BAAyD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}