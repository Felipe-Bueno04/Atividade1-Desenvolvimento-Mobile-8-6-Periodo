{"ast":null,"code":"'use strict';\n\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { useEffect, useRef } from 'react';\nimport { isWorkletFunction, makeShareable } from 'react-native-worklets';\nimport { initialUpdaterRun } from \"../animation\";\nimport { IS_JEST, ReanimatedError, SHOULD_BE_USE_WEB } from \"../common\";\nimport { startMapper, stopMapper } from \"../core\";\nimport { updateProps, updatePropsJestWrapper } from \"../updateProps\";\nimport { makeViewDescriptorsSet } from \"../ViewDescriptorsSet\";\nimport { useSharedValue } from \"./useSharedValue\";\nimport { buildWorkletsHash, isAnimated, shallowEqual, validateAnimatedStyles } from \"./utils\";\nfunction prepareAnimation(frameTimestamp, animatedProp, lastAnimation, lastValue) {\n  'worklet';\n\n  if (Array.isArray(animatedProp)) {\n    animatedProp.forEach(function (prop, index) {\n      prepareAnimation(frameTimestamp, prop, lastAnimation && lastAnimation[index], lastValue && lastValue[index]);\n    });\n  }\n  if (typeof animatedProp === 'object' && animatedProp.onFrame) {\n    var animation = animatedProp;\n    var value = animation.current;\n    if (lastValue !== undefined && lastValue !== null) {\n      if (typeof lastValue === 'object') {\n        if (lastValue.value !== undefined) {\n          value = lastValue.value;\n        } else if (lastValue.onFrame !== undefined) {\n          if ((lastAnimation == null ? void 0 : lastAnimation.current) !== undefined) {\n            value = lastAnimation.current;\n          } else if ((lastValue == null ? void 0 : lastValue.current) !== undefined) {\n            value = lastValue.current;\n          }\n        }\n      } else {\n        value = lastValue;\n      }\n    }\n    animation.callStart = function (timestamp) {\n      animation.onStart(animation, value, timestamp, lastAnimation);\n    };\n    animation.callStart(frameTimestamp);\n    animation.callStart = null;\n  } else if (typeof animatedProp === 'object') {\n    Object.keys(animatedProp).forEach(function (key) {\n      return prepareAnimation(frameTimestamp, animatedProp[key], lastAnimation && lastAnimation[key], lastValue && lastValue[key]);\n    });\n  }\n}\nfunction runAnimations(animation, timestamp, key, result, animationsActive, forceCopyAnimation) {\n  'worklet';\n\n  if (!animationsActive.value) {\n    return true;\n  }\n  if (Array.isArray(animation)) {\n    result[key] = [];\n    var allFinished = true;\n    forceCopyAnimation = key === 'boxShadow';\n    animation.forEach(function (entry, index) {\n      if (!runAnimations(entry, timestamp, index, result[key], animationsActive, forceCopyAnimation)) {\n        allFinished = false;\n      }\n    });\n    return allFinished;\n  } else if (typeof animation === 'object' && animation.onFrame) {\n    var finished = true;\n    if (!animation.finished) {\n      if (animation.callStart) {\n        animation.callStart(timestamp);\n        animation.callStart = null;\n      }\n      finished = animation.onFrame(animation, timestamp);\n      animation.timestamp = timestamp;\n      if (finished) {\n        animation.finished = true;\n        animation.callback == null ? void 0 : animation.callback(true);\n      }\n    }\n    if (forceCopyAnimation) {\n      result[key] = _objectSpread({}, animation.current);\n    } else {\n      result[key] = animation.current;\n    }\n    return finished;\n  } else if (typeof animation === 'object') {\n    result[key] = {};\n    var _allFinished = true;\n    Object.keys(animation).forEach(function (k) {\n      if (!runAnimations(animation[k], timestamp, k, result[key], animationsActive, forceCopyAnimation)) {\n        _allFinished = false;\n      }\n    });\n    return _allFinished;\n  } else {\n    result[key] = animation;\n    return true;\n  }\n}\nfunction styleUpdater(viewDescriptors, updater, state, animationsActive) {\n  'worklet';\n\n  var _state$animations, _updater;\n  var isAnimatedProps = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  var forceUpdate = arguments.length > 5 ? arguments[5] : undefined;\n  var animations = (_state$animations = state.animations) != null ? _state$animations : {};\n  var newValues = (_updater = updater()) != null ? _updater : {};\n  var oldValues = state.last;\n  var nonAnimatedNewValues = {};\n  var hasAnimations = false;\n  var frameTimestamp;\n  var hasNonAnimatedValues = false;\n  for (var key in newValues) {\n    var value = newValues[key];\n    if (isAnimated(value)) {\n      frameTimestamp = global.__frameTimestamp || global._getAnimationTimestamp();\n      prepareAnimation(frameTimestamp, value, animations[key], oldValues[key]);\n      animations[key] = value;\n      hasAnimations = true;\n    } else {\n      hasNonAnimatedValues = true;\n      nonAnimatedNewValues[key] = value;\n      delete animations[key];\n    }\n  }\n  if (hasAnimations) {\n    var _frame = function frame(timestamp) {\n      var animations = state.animations,\n        last = state.last,\n        isAnimationCancelled = state.isAnimationCancelled;\n      if (isAnimationCancelled) {\n        state.isAnimationRunning = false;\n        return;\n      }\n      var updates = {};\n      var allFinished = true;\n      var _loop = function _loop(propName) {\n        var finished = runAnimations(animations[propName], timestamp, propName, updates, animationsActive);\n        if (finished) {\n          if (Array.isArray(updates[propName])) {\n            updates[propName].forEach(function (obj) {\n              for (var prop in obj) {\n                if (!last[propName] || typeof last[propName] !== 'object') {\n                  last[propName] = {};\n                }\n                last[propName][prop] = obj[prop];\n              }\n            });\n          } else {\n            last[propName] = updates[propName];\n          }\n          delete animations[propName];\n        } else {\n          allFinished = false;\n        }\n      };\n      for (var propName in animations) {\n        _loop(propName);\n      }\n      if (updates) {\n        updateProps(viewDescriptors, updates);\n      }\n      if (!allFinished) {\n        requestAnimationFrame(_frame);\n      } else {\n        state.isAnimationRunning = false;\n      }\n    };\n    state.animations = animations;\n    if (!state.isAnimationRunning) {\n      state.isAnimationCancelled = false;\n      state.isAnimationRunning = true;\n      _frame(frameTimestamp);\n    }\n    if (hasNonAnimatedValues) {\n      updateProps(viewDescriptors, nonAnimatedNewValues);\n    }\n  } else {\n    state.isAnimationCancelled = true;\n    state.animations = [];\n    if (!shallowEqual(oldValues, newValues) || forceUpdate) {\n      updateProps(viewDescriptors, newValues, isAnimatedProps);\n    }\n  }\n  state.last = newValues;\n}\nfunction jestStyleUpdater(viewDescriptors, updater, state, animationsActive, animatedValues, adapters, forceUpdate) {\n  'worklet';\n\n  var _state$animations2, _updater2;\n  var animations = (_state$animations2 = state.animations) != null ? _state$animations2 : {};\n  var newValues = (_updater2 = updater()) != null ? _updater2 : {};\n  var oldValues = state.last;\n  var hasAnimations = false;\n  var frameTimestamp;\n  Object.keys(animations).forEach(function (key) {\n    var value = newValues[key];\n    if (!isAnimated(value)) {\n      delete animations[key];\n    }\n  });\n  Object.keys(newValues).forEach(function (key) {\n    var value = newValues[key];\n    if (isAnimated(value)) {\n      frameTimestamp = global.__frameTimestamp || global._getAnimationTimestamp();\n      prepareAnimation(frameTimestamp, value, animations[key], oldValues[key]);\n      animations[key] = value;\n      hasAnimations = true;\n    }\n  });\n  function frame(timestamp) {\n    var animations = state.animations,\n      last = state.last,\n      isAnimationCancelled = state.isAnimationCancelled;\n    if (isAnimationCancelled) {\n      state.isAnimationRunning = false;\n      return;\n    }\n    var updates = {};\n    var allFinished = true;\n    Object.keys(animations).forEach(function (propName) {\n      var finished = runAnimations(animations[propName], timestamp, propName, updates, animationsActive);\n      if (finished) {\n        last[propName] = updates[propName];\n        delete animations[propName];\n      } else {\n        allFinished = false;\n      }\n    });\n    if (Object.keys(updates).length) {\n      updatePropsJestWrapper(viewDescriptors, updates, animatedValues, adapters);\n    }\n    if (!allFinished) {\n      requestAnimationFrame(frame);\n    } else {\n      state.isAnimationRunning = false;\n    }\n  }\n  if (hasAnimations) {\n    state.animations = animations;\n    if (!state.isAnimationRunning) {\n      state.isAnimationCancelled = false;\n      state.isAnimationRunning = true;\n      frame(frameTimestamp);\n    }\n  } else {\n    state.isAnimationCancelled = true;\n    state.animations = [];\n  }\n  state.last = newValues;\n  if (!shallowEqual(oldValues, newValues) || forceUpdate) {\n    updatePropsJestWrapper(viewDescriptors, newValues, animatedValues, adapters);\n  }\n}\nfunction checkSharedValueUsage(prop, currentKey) {\n  if (Array.isArray(prop)) {\n    for (var element of prop) {\n      checkSharedValueUsage(element, currentKey);\n    }\n  } else if (typeof prop === 'object' && prop !== null && prop.value === undefined) {\n    for (var key of Object.keys(prop)) {\n      checkSharedValueUsage(prop[key], key);\n    }\n  } else if (currentKey !== undefined && typeof prop === 'object' && prop !== null && prop.value !== undefined) {\n    throw new ReanimatedError(`Invalid value passed to \\`${currentKey}\\`, maybe you forgot to use \\`.value\\`?`);\n  }\n}\nexport function useAnimatedStyle(updater, dependencies, adapters) {\n  var _updater$__closure;\n  var isAnimatedProps = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var animatedUpdaterData = useRef(null);\n  var inputs = Object.values((_updater$__closure = updater.__closure) != null ? _updater$__closure : {});\n  if (SHOULD_BE_USE_WEB) {\n    var _dependencies;\n    if (!inputs.length && (_dependencies = dependencies) != null && _dependencies.length) {\n      inputs = dependencies;\n    }\n    if (__DEV__ && !inputs.length && !dependencies && !isWorkletFunction(updater)) {\n      throw new ReanimatedError(`\\`useAnimatedStyle\\` was used without a dependency array or Babel plugin. Please explicitly pass a dependency array, or enable the Babel plugin.\nFor more, see the docs: \\`https://docs.swmansion.com/react-native-reanimated/docs/guides/web-support#web-without-the-babel-plugin\\`.`);\n    }\n  }\n  var adaptersArray = adapters ? Array.isArray(adapters) ? adapters : [adapters] : [];\n  var adaptersHash = adapters ? buildWorkletsHash(adaptersArray) : null;\n  var areAnimationsActive = useSharedValue(true);\n  var jestAnimatedValues = useRef({});\n  if (!dependencies) {\n    dependencies = [].concat(_toConsumableArray(inputs), [updater.__workletHash]);\n  } else {\n    dependencies.push(updater.__workletHash);\n  }\n  if (adaptersHash) {\n    dependencies.push(adaptersHash);\n  }\n  if (!animatedUpdaterData.current) {\n    var initialStyle = initialUpdaterRun(updater);\n    if (__DEV__) {\n      validateAnimatedStyles(initialStyle);\n    }\n    animatedUpdaterData.current = {\n      initial: {\n        value: initialStyle,\n        updater: updater\n      },\n      remoteState: makeShareable({\n        last: initialStyle,\n        animations: {},\n        isAnimationCancelled: false,\n        isAnimationRunning: false\n      }),\n      viewDescriptors: makeViewDescriptorsSet(),\n      styleUpdaterContainer: {\n        current: undefined\n      }\n    };\n  }\n  var _animatedUpdaterData$ = animatedUpdaterData.current,\n    initial = _animatedUpdaterData$.initial,\n    remoteState = _animatedUpdaterData$.remoteState,\n    viewDescriptors = _animatedUpdaterData$.viewDescriptors;\n  var shareableViewDescriptors = viewDescriptors.shareableViewDescriptors;\n  dependencies.push(shareableViewDescriptors);\n  useEffect(function () {\n    var fun;\n    var updaterFn = updater;\n    if (adapters) {\n      updaterFn = function updaterFn() {\n        'worklet';\n\n        var newValues = updater();\n        adaptersArray.forEach(function (adapter) {\n          adapter(newValues);\n        });\n        return newValues;\n      };\n    }\n    if (IS_JEST) {\n      fun = function fun(forceUpdate) {\n        'worklet';\n\n        jestStyleUpdater(shareableViewDescriptors, updater, remoteState, areAnimationsActive, jestAnimatedValues, adaptersArray, forceUpdate);\n      };\n    } else {\n      fun = function fun(forceUpdate) {\n        'worklet';\n\n        styleUpdater(shareableViewDescriptors, updaterFn, remoteState, areAnimationsActive, isAnimatedProps, forceUpdate);\n      };\n    }\n    if (animatedUpdaterData.current) {\n      animatedUpdaterData.current.styleUpdaterContainer.current = fun;\n    }\n    var mapperId = startMapper(fun, inputs);\n    return function () {\n      stopMapper(mapperId);\n    };\n  }, dependencies);\n  useEffect(function () {\n    areAnimationsActive.value = true;\n    return function () {\n      areAnimationsActive.value = false;\n    };\n  }, [areAnimationsActive]);\n  if (__DEV__) {\n    checkSharedValueUsage(initial.value);\n  }\n  var animatedStyleHandle = useRef(null);\n  if (!animatedStyleHandle.current) {\n    var styleUpdaterContainer = animatedUpdaterData.current.styleUpdaterContainer;\n    animatedStyleHandle.current = IS_JEST ? {\n      viewDescriptors: viewDescriptors,\n      initial: initial,\n      jestAnimatedValues: jestAnimatedValues,\n      toJSON: animatedStyleHandleToJSON,\n      styleUpdaterContainer: styleUpdaterContainer\n    } : {\n      viewDescriptors: viewDescriptors,\n      initial: initial,\n      styleUpdaterContainer: styleUpdaterContainer\n    };\n  }\n  return animatedStyleHandle.current;\n}\nfunction animatedStyleHandleToJSON() {\n  return '{}';\n}","map":{"version":3,"names":["_toConsumableArray","_defineProperty","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","useEffect","useRef","isWorkletFunction","makeShareable","initialUpdaterRun","IS_JEST","ReanimatedError","SHOULD_BE_USE_WEB","startMapper","stopMapper","updateProps","updatePropsJestWrapper","makeViewDescriptorsSet","useSharedValue","buildWorkletsHash","isAnimated","shallowEqual","validateAnimatedStyles","prepareAnimation","frameTimestamp","animatedProp","lastAnimation","lastValue","Array","isArray","prop","index","onFrame","animation","value","current","undefined","callStart","timestamp","onStart","key","runAnimations","result","animationsActive","forceCopyAnimation","allFinished","entry","finished","callback","k","styleUpdater","viewDescriptors","updater","state","_state$animations","_updater","isAnimatedProps","forceUpdate","animations","newValues","oldValues","last","nonAnimatedNewValues","hasAnimations","hasNonAnimatedValues","global","__frameTimestamp","_getAnimationTimestamp","frame","isAnimationCancelled","isAnimationRunning","updates","_loop","propName","obj","requestAnimationFrame","jestStyleUpdater","animatedValues","adapters","_state$animations2","_updater2","checkSharedValueUsage","currentKey","element","useAnimatedStyle","dependencies","_updater$__closure","animatedUpdaterData","inputs","values","__closure","_dependencies","__DEV__","adaptersArray","adaptersHash","areAnimationsActive","jestAnimatedValues","concat","__workletHash","initialStyle","initial","remoteState","styleUpdaterContainer","_animatedUpdaterData$","shareableViewDescriptors","fun","updaterFn","adapter","mapperId","animatedStyleHandle","toJSON","animatedStyleHandleToJSON"],"sources":["C:\\Users\\User\\Desktop\\Atividade1-Desenvolvimento-Mobile-8-6--Periodo\\backend\\node_modules\\react-native-reanimated\\src\\hook\\useAnimatedStyle.ts"],"sourcesContent":["'use strict';\nimport type { RefObject } from 'react';\nimport { useEffect, useRef } from 'react';\nimport type { WorkletFunction } from 'react-native-worklets';\nimport { isWorkletFunction, makeShareable } from 'react-native-worklets';\n\nimport { initialUpdaterRun } from '../animation';\nimport { IS_JEST, ReanimatedError, SHOULD_BE_USE_WEB } from '../common';\nimport type {\n  AnimatedPropsAdapterFunction,\n  AnimatedPropsAdapterWorklet,\n  AnimatedStyle,\n  AnimationObject,\n  NestedObjectValues,\n  SharedValue,\n  StyleProps,\n  StyleUpdaterContainer,\n  Timestamp,\n} from '../commonTypes';\nimport { startMapper, stopMapper } from '../core';\nimport type { AnimatedProps } from '../createAnimatedComponent/commonTypes';\nimport { updateProps, updatePropsJestWrapper } from '../updateProps';\nimport type { ViewDescriptorsSet } from '../ViewDescriptorsSet';\nimport { makeViewDescriptorsSet } from '../ViewDescriptorsSet';\nimport type {\n  AnimatedStyleHandle,\n  DefaultStyle,\n  DependencyList,\n  Descriptor,\n  JestAnimatedStyleHandle,\n} from './commonTypes';\nimport { useSharedValue } from './useSharedValue';\nimport {\n  buildWorkletsHash,\n  isAnimated,\n  shallowEqual,\n  validateAnimatedStyles,\n} from './utils';\n\ninterface AnimatedState {\n  last: AnimatedStyle<any>;\n  animations: AnimatedStyle<any>;\n  isAnimationRunning: boolean;\n  isAnimationCancelled: boolean;\n}\n\ninterface AnimatedUpdaterData {\n  initial: {\n    value: AnimatedStyle<any>;\n    updater: () => AnimatedStyle<any>;\n  };\n  remoteState: AnimatedState;\n  viewDescriptors: ViewDescriptorsSet;\n  styleUpdaterContainer: StyleUpdaterContainer;\n}\n\nfunction prepareAnimation(\n  frameTimestamp: number,\n  animatedProp: AnimatedStyle<any>,\n  lastAnimation: AnimatedStyle<any>,\n  lastValue: AnimatedStyle<any>\n): void {\n  'worklet';\n  if (Array.isArray(animatedProp)) {\n    animatedProp.forEach((prop, index) => {\n      prepareAnimation(\n        frameTimestamp,\n        prop,\n        lastAnimation && lastAnimation[index],\n        lastValue && lastValue[index]\n      );\n    });\n    // return animatedProp;\n  }\n  if (typeof animatedProp === 'object' && animatedProp.onFrame) {\n    const animation = animatedProp;\n\n    let value = animation.current;\n    if (lastValue !== undefined && lastValue !== null) {\n      if (typeof lastValue === 'object') {\n        if (lastValue.value !== undefined) {\n          // previously it was a shared value\n          value = lastValue.value;\n        } else if (lastValue.onFrame !== undefined) {\n          if (lastAnimation?.current !== undefined) {\n            // it was an animation before, copy its state\n            value = lastAnimation.current;\n          } else if (lastValue?.current !== undefined) {\n            // it was initialized\n            value = lastValue.current;\n          }\n        }\n      } else {\n        // previously it was a plain value, just set it as starting point\n        value = lastValue;\n      }\n    }\n\n    animation.callStart = (timestamp: Timestamp) => {\n      animation.onStart(animation, value, timestamp, lastAnimation);\n    };\n    animation.callStart(frameTimestamp);\n    animation.callStart = null;\n  } else if (typeof animatedProp === 'object') {\n    // it is an object\n    Object.keys(animatedProp).forEach((key) =>\n      prepareAnimation(\n        frameTimestamp,\n        animatedProp[key],\n        lastAnimation && lastAnimation[key],\n        lastValue && lastValue[key]\n      )\n    );\n  }\n}\n\nfunction runAnimations(\n  animation: AnimatedStyle<any>,\n  timestamp: Timestamp,\n  key: number | string,\n  result: AnimatedStyle<any>,\n  animationsActive: SharedValue<boolean>,\n  forceCopyAnimation?: boolean\n): boolean {\n  'worklet';\n  if (!animationsActive.value) {\n    return true;\n  }\n  if (Array.isArray(animation)) {\n    result[key] = [];\n    let allFinished = true;\n    forceCopyAnimation = key === 'boxShadow';\n    animation.forEach((entry, index) => {\n      if (\n        !runAnimations(\n          entry,\n          timestamp,\n          index,\n          result[key],\n          animationsActive,\n          forceCopyAnimation\n        )\n      ) {\n        allFinished = false;\n      }\n    });\n    return allFinished;\n  } else if (typeof animation === 'object' && animation.onFrame) {\n    let finished = true;\n    if (!animation.finished) {\n      if (animation.callStart) {\n        animation.callStart(timestamp);\n        animation.callStart = null;\n      }\n      finished = animation.onFrame(animation, timestamp);\n      animation.timestamp = timestamp;\n      if (finished) {\n        animation.finished = true;\n        animation.callback?.(true /* finished */);\n      }\n    }\n    /*\n     * If `animation.current` is a boxShadow object, spread its properties into a new object\n     * to avoid modifying the original reference. This ensures when `newValues` has a nested color prop, it stays unparsed\n     * in rgba format, allowing the animation to run correctly.\n     */\n    if (forceCopyAnimation) {\n      result[key] = { ...animation.current };\n    } else {\n      result[key] = animation.current;\n    }\n    return finished;\n  } else if (typeof animation === 'object') {\n    result[key] = {};\n    let allFinished = true;\n    Object.keys(animation).forEach((k) => {\n      if (\n        !runAnimations(\n          animation[k],\n          timestamp,\n          k,\n          result[key],\n          animationsActive,\n          forceCopyAnimation\n        )\n      ) {\n        allFinished = false;\n      }\n    });\n    return allFinished;\n  } else {\n    result[key] = animation;\n    return true;\n  }\n}\n\nfunction styleUpdater(\n  viewDescriptors: SharedValue<Descriptor[]>,\n  updater: WorkletFunction<[], AnimatedStyle<any>> | (() => AnimatedStyle<any>),\n  state: AnimatedState,\n  animationsActive: SharedValue<boolean>,\n  isAnimatedProps = false,\n  forceUpdate?: boolean\n): void {\n  'worklet';\n  const animations = state.animations ?? {};\n  const newValues = updater() ?? {};\n  const oldValues = state.last;\n  const nonAnimatedNewValues: StyleProps = {};\n\n  let hasAnimations = false;\n  let frameTimestamp: number | undefined;\n  let hasNonAnimatedValues = false;\n  for (const key in newValues) {\n    const value = newValues[key];\n    if (isAnimated(value)) {\n      frameTimestamp =\n        global.__frameTimestamp || global._getAnimationTimestamp();\n      prepareAnimation(frameTimestamp, value, animations[key], oldValues[key]);\n      animations[key] = value;\n      hasAnimations = true;\n    } else {\n      hasNonAnimatedValues = true;\n      nonAnimatedNewValues[key] = value;\n      delete animations[key];\n    }\n  }\n\n  if (hasAnimations) {\n    const frame = (timestamp: Timestamp) => {\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      const { animations, last, isAnimationCancelled } = state;\n      if (isAnimationCancelled) {\n        state.isAnimationRunning = false;\n        return;\n      }\n\n      const updates: AnimatedStyle<any> = {};\n      let allFinished = true;\n      for (const propName in animations) {\n        const finished = runAnimations(\n          animations[propName],\n          timestamp,\n          propName,\n          updates,\n          animationsActive\n        );\n        if (finished) {\n          /**\n           * If the animated prop is an array, we need to directly set each\n           * property (manually spread it). This prevents issues where the color\n           * prop might be incorrectly linked with its `toValue` and `current`\n           * states, causing abrupt transitions or 'jumps' in animation states.\n           */\n          if (Array.isArray(updates[propName])) {\n            updates[propName].forEach((obj: StyleProps) => {\n              for (const prop in obj) {\n                if (!last[propName] || typeof last[propName] !== 'object') {\n                  last[propName] = {};\n                }\n                last[propName][prop] = obj[prop];\n              }\n            });\n          } else {\n            last[propName] = updates[propName];\n          }\n          delete animations[propName];\n        } else {\n          allFinished = false;\n        }\n      }\n\n      if (updates) {\n        updateProps(viewDescriptors, updates);\n      }\n\n      if (!allFinished) {\n        requestAnimationFrame(frame);\n      } else {\n        state.isAnimationRunning = false;\n      }\n    };\n\n    state.animations = animations;\n    if (!state.isAnimationRunning) {\n      state.isAnimationCancelled = false;\n      state.isAnimationRunning = true;\n      frame(frameTimestamp!);\n    }\n\n    if (hasNonAnimatedValues) {\n      updateProps(viewDescriptors, nonAnimatedNewValues);\n    }\n  } else {\n    state.isAnimationCancelled = true;\n    state.animations = [];\n\n    if (!shallowEqual(oldValues, newValues) || forceUpdate) {\n      updateProps(viewDescriptors, newValues, isAnimatedProps);\n    }\n  }\n  state.last = newValues;\n}\n\nfunction jestStyleUpdater(\n  viewDescriptors: SharedValue<Descriptor[]>,\n  updater: WorkletFunction<[], AnimatedStyle<any>> | (() => AnimatedStyle<any>),\n  state: AnimatedState,\n  animationsActive: SharedValue<boolean>,\n  animatedValues: RefObject<AnimatedStyle<any>>,\n  adapters: AnimatedPropsAdapterFunction[],\n  forceUpdate?: boolean\n): void {\n  'worklet';\n  const animations: AnimatedStyle<any> = state.animations ?? {};\n  const newValues = updater() ?? {};\n  const oldValues = state.last;\n\n  // extract animated props\n  let hasAnimations = false;\n  let frameTimestamp: number | undefined;\n  Object.keys(animations).forEach((key) => {\n    const value = newValues[key];\n    if (!isAnimated(value)) {\n      delete animations[key];\n    }\n  });\n  Object.keys(newValues).forEach((key) => {\n    const value = newValues[key];\n    if (isAnimated(value)) {\n      frameTimestamp =\n        global.__frameTimestamp || global._getAnimationTimestamp();\n      prepareAnimation(frameTimestamp, value, animations[key], oldValues[key]);\n      animations[key] = value;\n      hasAnimations = true;\n    }\n  });\n\n  function frame(timestamp: Timestamp) {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const { animations, last, isAnimationCancelled } = state;\n    if (isAnimationCancelled) {\n      state.isAnimationRunning = false;\n      return;\n    }\n\n    const updates: AnimatedStyle<any> = {};\n    let allFinished = true;\n    Object.keys(animations).forEach((propName) => {\n      const finished = runAnimations(\n        animations[propName],\n        timestamp,\n        propName,\n        updates,\n        animationsActive\n      );\n      if (finished) {\n        last[propName] = updates[propName];\n        delete animations[propName];\n      } else {\n        allFinished = false;\n      }\n    });\n\n    if (Object.keys(updates).length) {\n      updatePropsJestWrapper(\n        viewDescriptors,\n        updates,\n        animatedValues,\n        adapters\n      );\n    }\n\n    if (!allFinished) {\n      requestAnimationFrame(frame);\n    } else {\n      state.isAnimationRunning = false;\n    }\n  }\n\n  if (hasAnimations) {\n    state.animations = animations;\n    if (!state.isAnimationRunning) {\n      state.isAnimationCancelled = false;\n      state.isAnimationRunning = true;\n      frame(frameTimestamp!);\n    }\n  } else {\n    state.isAnimationCancelled = true;\n    state.animations = [];\n  }\n\n  // calculate diff\n  state.last = newValues;\n\n  if (!shallowEqual(oldValues, newValues) || forceUpdate) {\n    updatePropsJestWrapper(\n      viewDescriptors,\n      newValues,\n      animatedValues,\n      adapters\n    );\n  }\n}\n\n// check for invalid usage of shared values in returned object\nfunction checkSharedValueUsage(\n  prop: NestedObjectValues<AnimationObject>,\n  currentKey?: string\n): void {\n  if (Array.isArray(prop)) {\n    // if it's an array (i.ex. transform) validate all its elements\n    for (const element of prop) {\n      checkSharedValueUsage(element, currentKey);\n    }\n  } else if (\n    typeof prop === 'object' &&\n    prop !== null &&\n    prop.value === undefined\n  ) {\n    // if it's a nested object, run validation for all its props\n    for (const key of Object.keys(prop)) {\n      checkSharedValueUsage(prop[key], key);\n    }\n  } else if (\n    currentKey !== undefined &&\n    typeof prop === 'object' &&\n    prop !== null &&\n    prop.value !== undefined\n  ) {\n    // if shared value is passed instead of its value, throw an error\n    throw new ReanimatedError(\n      `Invalid value passed to \\`${currentKey}\\`, maybe you forgot to use \\`.value\\`?`\n    );\n  }\n}\n\n/**\n * Lets you create a styles object, similar to StyleSheet styles, which can be\n * animated using shared values.\n *\n * @param updater - A function returning an object with style properties you\n *   want to animate.\n * @param dependencies - An optional array of dependencies. Only relevant when\n *   using Reanimated without the Babel plugin on the Web.\n * @returns An animated style object which has to be passed to the `style`\n *   property of an Animated component you want to animate.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/core/useAnimatedStyle\n */\n// You cannot pass Shared Values to `useAnimatedStyle` directly.\n// @ts-expect-error This overload is required by our API.\nexport function useAnimatedStyle<Style extends DefaultStyle>(\n  updater: () => Style,\n  dependencies?: DependencyList | null\n): Style;\n\nexport function useAnimatedStyle<Style extends DefaultStyle | AnimatedProps>(\n  updater:\n    | WorkletFunction<[], Style>\n    | ((() => Style) & Record<string, unknown>),\n  dependencies?: DependencyList | null,\n  adapters?: AnimatedPropsAdapterWorklet | AnimatedPropsAdapterWorklet[] | null,\n  isAnimatedProps = false\n):\n  | AnimatedStyleHandle<Style | AnimatedProps>\n  | JestAnimatedStyleHandle<Style | AnimatedProps> {\n  const animatedUpdaterData = useRef<AnimatedUpdaterData | null>(null);\n  let inputs = Object.values(updater.__closure ?? {});\n  if (SHOULD_BE_USE_WEB) {\n    if (!inputs.length && dependencies?.length) {\n      // let web work without a Babel plugin\n      inputs = dependencies;\n    }\n    if (\n      __DEV__ &&\n      !inputs.length &&\n      !dependencies &&\n      !isWorkletFunction(updater)\n    ) {\n      throw new ReanimatedError(\n        `\\`useAnimatedStyle\\` was used without a dependency array or Babel plugin. Please explicitly pass a dependency array, or enable the Babel plugin.\nFor more, see the docs: \\`https://docs.swmansion.com/react-native-reanimated/docs/guides/web-support#web-without-the-babel-plugin\\`.`\n      );\n    }\n  }\n  const adaptersArray = adapters\n    ? Array.isArray(adapters)\n      ? adapters\n      : [adapters]\n    : [];\n  const adaptersHash = adapters ? buildWorkletsHash(adaptersArray) : null;\n  const areAnimationsActive = useSharedValue<boolean>(true);\n  const jestAnimatedValues = useRef<Style | AnimatedProps>(\n    {} as Style | AnimatedProps\n  );\n\n  // build dependencies\n  if (!dependencies) {\n    dependencies = [...inputs, updater.__workletHash];\n  } else {\n    dependencies.push(updater.__workletHash);\n  }\n  if (adaptersHash) {\n    dependencies.push(adaptersHash);\n  }\n\n  if (!animatedUpdaterData.current) {\n    const initialStyle = initialUpdaterRun(updater);\n    if (__DEV__) {\n      validateAnimatedStyles(initialStyle);\n    }\n    animatedUpdaterData.current = {\n      initial: {\n        value: initialStyle,\n        updater,\n      },\n      remoteState: makeShareable({\n        last: initialStyle,\n        animations: {},\n        isAnimationCancelled: false,\n        isAnimationRunning: false,\n      }),\n      viewDescriptors: makeViewDescriptorsSet(),\n      styleUpdaterContainer: { current: undefined },\n    };\n  }\n\n  const { initial, remoteState, viewDescriptors } = animatedUpdaterData.current;\n  const shareableViewDescriptors = viewDescriptors.shareableViewDescriptors;\n\n  dependencies.push(shareableViewDescriptors);\n\n  useEffect(() => {\n    let fun;\n    let updaterFn = updater;\n    if (adapters) {\n      updaterFn = (() => {\n        'worklet';\n        const newValues = updater();\n        adaptersArray.forEach((adapter) => {\n          adapter(newValues as Record<string, unknown>);\n        });\n        return newValues;\n      }) as WorkletFunction<[], Style>;\n    }\n\n    if (IS_JEST) {\n      fun = (forceUpdate?: boolean) => {\n        'worklet';\n        jestStyleUpdater(\n          shareableViewDescriptors,\n          updater,\n          remoteState,\n          areAnimationsActive,\n          jestAnimatedValues,\n          adaptersArray,\n          forceUpdate\n        );\n      };\n    } else {\n      fun = (forceUpdate?: boolean) => {\n        'worklet';\n        styleUpdater(\n          shareableViewDescriptors,\n          updaterFn,\n          remoteState,\n          areAnimationsActive,\n          isAnimatedProps,\n          forceUpdate\n        );\n      };\n    }\n    if (animatedUpdaterData.current) {\n      animatedUpdaterData.current.styleUpdaterContainer.current = fun;\n    }\n    const mapperId = startMapper(fun, inputs);\n    return () => {\n      stopMapper(mapperId);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    areAnimationsActive.value = true;\n    return () => {\n      areAnimationsActive.value = false;\n    };\n  }, [areAnimationsActive]);\n\n  if (__DEV__) {\n    checkSharedValueUsage(initial.value);\n  }\n\n  const animatedStyleHandle = useRef<\n    | AnimatedStyleHandle<Style | AnimatedProps>\n    | JestAnimatedStyleHandle<Style | AnimatedProps>\n    | null\n  >(null);\n\n  if (!animatedStyleHandle.current) {\n    const styleUpdaterContainer =\n      animatedUpdaterData.current.styleUpdaterContainer;\n    animatedStyleHandle.current = IS_JEST\n      ? {\n          viewDescriptors,\n          initial,\n          jestAnimatedValues,\n          toJSON: animatedStyleHandleToJSON,\n          styleUpdaterContainer,\n        }\n      : { viewDescriptors, initial, styleUpdaterContainer };\n  }\n\n  return animatedStyleHandle.current;\n}\n\nfunction animatedStyleHandleToJSON(): string {\n  return '{}';\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}