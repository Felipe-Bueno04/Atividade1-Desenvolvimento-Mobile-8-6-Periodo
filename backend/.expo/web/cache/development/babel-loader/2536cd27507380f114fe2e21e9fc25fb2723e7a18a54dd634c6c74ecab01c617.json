{"ast":null,"code":"'use strict';\n\nimport { createSerializable, createSynchronizable, executeOnUIRuntimeSync, runOnUI, serializableMappingCache } from 'react-native-worklets';\nimport { IS_JEST, logger, ReanimatedError, SHOULD_BE_USE_WEB } from \"./common\";\nimport { getStaticFeatureFlag } from \"./featureFlags\";\nimport { isFirstReactRender, isReactRendering } from \"./reactUtils\";\nimport { valueSetter } from \"./valueSetter\";\nfunction shouldWarnAboutAccessDuringRender() {\n  return __DEV__ && isReactRendering() && !isFirstReactRender();\n}\nfunction checkInvalidReadDuringRender() {\n  if (shouldWarnAboutAccessDuringRender()) {\n    logger.warn(\"Reading from `value` during component render. Please ensure that you don't access the `value` property nor use `get` method of a shared value while React is rendering a component.\", {\n      strict: true\n    });\n  }\n}\nfunction checkInvalidWriteDuringRender() {\n  if (shouldWarnAboutAccessDuringRender()) {\n    logger.warn(\"Writing to `value` during component render. Please ensure that you don't access the `value` property nor use `set` method of a shared value while React is rendering a component.\", {\n      strict: true\n    });\n  }\n}\nfunction addCompilerSafeGetAndSet(mutable) {\n  'worklet';\n\n  Object.defineProperties(mutable, {\n    get: {\n      value: function value() {\n        return mutable.value;\n      },\n      configurable: false,\n      enumerable: false\n    },\n    set: {\n      value: function value(newValue) {\n        if (typeof newValue === 'function' && !newValue.__isAnimationDefinition) {\n          mutable.value = newValue(mutable.value);\n        } else {\n          mutable.value = newValue;\n        }\n      },\n      configurable: false,\n      enumerable: false\n    }\n  });\n}\nfunction hideInternalValueProp(mutable) {\n  'worklet';\n\n  Object.defineProperty(mutable, '_value', {\n    configurable: false,\n    enumerable: false\n  });\n}\nfunction experimental_makeMutableUI(initial, dirtyFlag) {\n  'worklet';\n\n  var listeners = new Map();\n  var value = initial;\n  var isDirty = false;\n  var mutable = {\n    get value() {\n      return value;\n    },\n    set value(newValue) {\n      valueSetter(mutable, newValue);\n    },\n    get _value() {\n      return value;\n    },\n    set _value(newValue) {\n      if (!isDirty) {\n        this.setDirty(true);\n      }\n      value = newValue;\n      listeners.forEach(function (listener) {\n        listener(newValue);\n      });\n    },\n    modify: function modify(modifier) {\n      var forceUpdate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      valueSetter(mutable, modifier !== undefined ? modifier(value) : value, forceUpdate);\n    },\n    addListener: function addListener(id, listener) {\n      listeners.set(id, listener);\n    },\n    removeListener: function removeListener(id) {\n      listeners.delete(id);\n    },\n    setDirty: function setDirty(dirty) {\n      dirtyFlag.setBlocking(dirty);\n      isDirty = dirty;\n    },\n    _animation: null,\n    _isReanimatedSharedValue: true\n  };\n  hideInternalValueProp(mutable);\n  addCompilerSafeGetAndSet(mutable);\n  return mutable;\n}\nexport function legacy_makeMutableUI(initial) {\n  'worklet';\n\n  var listeners = new Map();\n  var value = initial;\n  var mutable = {\n    get value() {\n      return value;\n    },\n    set value(newValue) {\n      valueSetter(mutable, newValue);\n    },\n    get _value() {\n      return value;\n    },\n    set _value(newValue) {\n      value = newValue;\n      listeners.forEach(function (listener) {\n        listener(newValue);\n      });\n    },\n    modify: function modify(modifier) {\n      var forceUpdate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      valueSetter(mutable, modifier !== undefined ? modifier(value) : value, forceUpdate);\n    },\n    addListener: function addListener(id, listener) {\n      listeners.set(id, listener);\n    },\n    removeListener: function removeListener(id) {\n      listeners.delete(id);\n    },\n    _animation: null,\n    _isReanimatedSharedValue: true\n  };\n  hideInternalValueProp(mutable);\n  addCompilerSafeGetAndSet(mutable);\n  return mutable;\n}\nvar USE_SYNCHRONIZABLE_FOR_MUTABLES = getStaticFeatureFlag('USE_SYNCHRONIZABLE_FOR_MUTABLES');\nfunction experimental_makeMutableNative(initial) {\n  var latest = initial;\n  var dirtyFlag = createSynchronizable(false);\n  var handle = createSerializable({\n    __init: function __init() {\n      'worklet';\n\n      return experimental_makeMutableUI(initial, dirtyFlag);\n    }\n  });\n  var mutable = {\n    get value() {\n      checkInvalidReadDuringRender();\n      if (dirtyFlag.getBlocking()) {\n        var uiValueGetter = executeOnUIRuntimeSync(function (sv) {\n          sv.setDirty(false);\n          return sv.value;\n        });\n        latest = uiValueGetter(mutable);\n      }\n      return latest;\n    },\n    set value(newValue) {\n      checkInvalidWriteDuringRender();\n      runOnUI(function () {\n        mutable.value = newValue;\n      })();\n    },\n    get _value() {\n      throw new ReanimatedError('Reading from `_value` directly is only possible on the UI runtime. Perhaps you passed an Animated Style to a non-animated component?');\n    },\n    set _value(_newValue) {\n      throw new ReanimatedError('Setting `_value` directly is only possible on the UI runtime. Perhaps you want to assign to `value` instead?');\n    },\n    modify: function modify(modifier) {\n      var forceUpdate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      runOnUI(function () {\n        mutable.modify(modifier, forceUpdate);\n      })();\n    },\n    addListener: function addListener() {\n      throw new ReanimatedError('Adding listeners is only possible on the UI runtime.');\n    },\n    removeListener: function removeListener() {\n      throw new ReanimatedError('Removing listeners is only possible on the UI runtime.');\n    },\n    _isReanimatedSharedValue: true\n  };\n  hideInternalValueProp(mutable);\n  addCompilerSafeGetAndSet(mutable);\n  serializableMappingCache.set(mutable, handle);\n  return mutable;\n}\nfunction makeMutableNative(initial) {\n  var handle = createSerializable({\n    __init: function __init() {\n      'worklet';\n\n      return legacy_makeMutableUI(initial);\n    }\n  });\n  var mutable = {\n    get value() {\n      checkInvalidReadDuringRender();\n      var uiValueGetter = executeOnUIRuntimeSync(function (sv) {\n        return sv.value;\n      });\n      return uiValueGetter(mutable);\n    },\n    set value(newValue) {\n      checkInvalidWriteDuringRender();\n      runOnUI(function () {\n        mutable.value = newValue;\n      })();\n    },\n    get _value() {\n      throw new ReanimatedError('Reading from `_value` directly is only possible on the UI runtime. Perhaps you passed an Animated Style to a non-animated component?');\n    },\n    set _value(_newValue) {\n      throw new ReanimatedError('Setting `_value` directly is only possible on the UI runtime. Perhaps you want to assign to `value` instead?');\n    },\n    modify: function modify(modifier) {\n      var forceUpdate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      runOnUI(function () {\n        mutable.modify(modifier, forceUpdate);\n      })();\n    },\n    addListener: function addListener() {\n      throw new ReanimatedError('Adding listeners is only possible on the UI runtime.');\n    },\n    removeListener: function removeListener() {\n      throw new ReanimatedError('Removing listeners is only possible on the UI runtime.');\n    },\n    _isReanimatedSharedValue: true\n  };\n  hideInternalValueProp(mutable);\n  addCompilerSafeGetAndSet(mutable);\n  serializableMappingCache.set(mutable, handle);\n  return mutable;\n}\nfunction makeMutableWeb(initial) {\n  var value = initial;\n  var listeners = new Map();\n  var mutable = {\n    get value() {\n      checkInvalidReadDuringRender();\n      return value;\n    },\n    set value(newValue) {\n      checkInvalidWriteDuringRender();\n      valueSetter(mutable, newValue);\n    },\n    get _value() {\n      return value;\n    },\n    set _value(newValue) {\n      value = newValue;\n      listeners.forEach(function (listener) {\n        listener(newValue);\n      });\n    },\n    modify: function modify(modifier) {\n      var forceUpdate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      valueSetter(mutable, modifier !== undefined ? modifier(mutable.value) : mutable.value, forceUpdate);\n    },\n    addListener: function addListener(id, listener) {\n      listeners.set(id, listener);\n    },\n    removeListener: function removeListener(id) {\n      listeners.delete(id);\n    },\n    _isReanimatedSharedValue: true\n  };\n  hideInternalValueProp(mutable);\n  addCompilerSafeGetAndSet(mutable);\n  if (IS_JEST) {\n    mutable.toJSON = function () {\n      return mutableToJSON(value);\n    };\n  }\n  return mutable;\n}\nexport var makeMutable = SHOULD_BE_USE_WEB ? makeMutableWeb : USE_SYNCHRONIZABLE_FOR_MUTABLES ? experimental_makeMutableNative : makeMutableNative;\nfunction mutableToJSON(value) {\n  return JSON.stringify(value);\n}","map":{"version":3,"names":["createSerializable","createSynchronizable","executeOnUIRuntimeSync","runOnUI","serializableMappingCache","IS_JEST","logger","ReanimatedError","SHOULD_BE_USE_WEB","getStaticFeatureFlag","isFirstReactRender","isReactRendering","valueSetter","shouldWarnAboutAccessDuringRender","__DEV__","checkInvalidReadDuringRender","warn","strict","checkInvalidWriteDuringRender","addCompilerSafeGetAndSet","mutable","Object","defineProperties","get","value","configurable","enumerable","set","newValue","__isAnimationDefinition","hideInternalValueProp","defineProperty","experimental_makeMutableUI","initial","dirtyFlag","listeners","Map","isDirty","_value","setDirty","forEach","listener","modify","modifier","forceUpdate","arguments","length","undefined","addListener","id","removeListener","delete","dirty","setBlocking","_animation","_isReanimatedSharedValue","legacy_makeMutableUI","USE_SYNCHRONIZABLE_FOR_MUTABLES","experimental_makeMutableNative","latest","handle","__init","getBlocking","uiValueGetter","sv","_newValue","makeMutableNative","makeMutableWeb","toJSON","mutableToJSON","makeMutable","JSON","stringify"],"sources":["C:\\Users\\User\\Desktop\\Atividade1-Desenvolvimento-Mobile-8-6--Periodo\\backend\\node_modules\\react-native-reanimated\\src\\mutables.ts"],"sourcesContent":["'use strict';\nimport type { Synchronizable } from 'react-native-worklets';\nimport {\n  createSerializable,\n  createSynchronizable,\n  executeOnUIRuntimeSync,\n  runOnUI,\n  serializableMappingCache,\n} from 'react-native-worklets';\n\nimport { IS_JEST, logger, ReanimatedError, SHOULD_BE_USE_WEB } from './common';\nimport type { Mutable } from './commonTypes';\nimport { getStaticFeatureFlag } from './featureFlags';\nimport { isFirstReactRender, isReactRendering } from './reactUtils';\nimport { valueSetter } from './valueSetter';\n\nfunction shouldWarnAboutAccessDuringRender() {\n  return __DEV__ && isReactRendering() && !isFirstReactRender();\n}\n\nfunction checkInvalidReadDuringRender() {\n  if (shouldWarnAboutAccessDuringRender()) {\n    logger.warn(\n      \"Reading from `value` during component render. Please ensure that you don't access the `value` property nor use `get` method of a shared value while React is rendering a component.\",\n      { strict: true }\n    );\n  }\n}\n\nfunction checkInvalidWriteDuringRender() {\n  if (shouldWarnAboutAccessDuringRender()) {\n    logger.warn(\n      \"Writing to `value` during component render. Please ensure that you don't access the `value` property nor use `set` method of a shared value while React is rendering a component.\",\n      { strict: true }\n    );\n  }\n}\n\ntype Listener<Value> = (newValue: Value) => void;\n\ntype PartialMutable<Value> = Omit<Mutable<Value>, 'get' | 'set'>;\n\n/**\n * Adds `get` and `set` methods to the mutable object to handle access to\n * `value` property.\n *\n * React Compiler disallows modifying return values of hooks. Even though\n * assignment to `value` is a setter invocation, Compiler's static analysis\n * doesn't detect it. That's why we provide a second API for users using the\n * Compiler.\n */\nfunction addCompilerSafeGetAndSet<Value>(mutable: PartialMutable<Value>): void {\n  'worklet';\n  Object.defineProperties(mutable, {\n    get: {\n      value() {\n        return mutable.value;\n      },\n      configurable: false,\n      enumerable: false,\n    },\n    set: {\n      value(newValue: Value | ((value: Value) => Value)) {\n        if (\n          typeof newValue === 'function' &&\n          // If we have an animation definition, we don't want to call it here.\n          !(newValue as Record<string, unknown>).__isAnimationDefinition\n        ) {\n          mutable.value = (newValue as (value: Value) => Value)(mutable.value);\n        } else {\n          mutable.value = newValue as Value;\n        }\n      },\n      configurable: false,\n      enumerable: false,\n    },\n  });\n}\n/**\n * Hides the internal `_value` property of a mutable. It won't be visible to:\n *\n * - `Object.keys`,\n * - `const prop in obj`,\n * - Etc.\n *\n * This way when the user accidentally sends the SharedValue to React, he won't\n * get an obscure error message.\n *\n * We hide for both _React runtime_ and _Worklet runtime_ mutables for\n * uniformity of behavior.\n */\nfunction hideInternalValueProp<Value>(mutable: PartialMutable<Value>) {\n  'worklet';\n  Object.defineProperty(mutable, '_value', {\n    configurable: false,\n    enumerable: false,\n  });\n}\n\n// eslint-disable-next-line camelcase\nfunction experimental_makeMutableUI<Value>(\n  initial: Value,\n  dirtyFlag: Synchronizable<boolean>\n): Mutable<Value> {\n  'worklet';\n  const listeners = new Map<number, Listener<Value>>();\n  let value = initial;\n  let isDirty = false;\n\n  const mutable: PartialMutable<Value> = {\n    get value() {\n      return value;\n    },\n    set value(newValue) {\n      valueSetter(mutable as Mutable<Value>, newValue);\n    },\n    get _value(): Value {\n      return value;\n    },\n    set _value(newValue: Value) {\n      if (!isDirty) {\n        this.setDirty!(true);\n      }\n      value = newValue;\n      listeners.forEach((listener) => {\n        listener(newValue);\n      });\n    },\n    modify: (modifier, forceUpdate = true) => {\n      valueSetter(\n        mutable as Mutable<Value>,\n        modifier !== undefined ? modifier(value) : value,\n        forceUpdate\n      );\n    },\n    addListener: (id: number, listener: Listener<Value>) => {\n      listeners.set(id, listener);\n    },\n    removeListener: (id: number) => {\n      listeners.delete(id);\n    },\n    setDirty: (dirty: boolean) => {\n      dirtyFlag.setBlocking(dirty);\n      isDirty = dirty;\n    },\n\n    _animation: null,\n    _isReanimatedSharedValue: true,\n  };\n\n  hideInternalValueProp(mutable);\n  addCompilerSafeGetAndSet(mutable);\n\n  return mutable as Mutable<Value>;\n}\n\n// eslint-disable-next-line camelcase\nexport function legacy_makeMutableUI<Value>(initial: Value): Mutable<Value> {\n  'worklet';\n  const listeners = new Map<number, Listener<Value>>();\n  let value = initial;\n\n  const mutable: PartialMutable<Value> = {\n    get value() {\n      return value;\n    },\n    set value(newValue) {\n      valueSetter(mutable as Mutable<Value>, newValue);\n    },\n    get _value(): Value {\n      return value;\n    },\n    set _value(newValue: Value) {\n      value = newValue;\n      listeners.forEach((listener) => {\n        listener(newValue);\n      });\n    },\n    modify: (modifier, forceUpdate = true) => {\n      valueSetter(\n        mutable as Mutable<Value>,\n        modifier !== undefined ? modifier(value) : value,\n        forceUpdate\n      );\n    },\n    addListener: (id: number, listener: Listener<Value>) => {\n      listeners.set(id, listener);\n    },\n    removeListener: (id: number) => {\n      listeners.delete(id);\n    },\n\n    _animation: null,\n    _isReanimatedSharedValue: true,\n  };\n\n  hideInternalValueProp(mutable);\n  addCompilerSafeGetAndSet(mutable);\n\n  return mutable as Mutable<Value>;\n}\n\nconst USE_SYNCHRONIZABLE_FOR_MUTABLES = getStaticFeatureFlag(\n  'USE_SYNCHRONIZABLE_FOR_MUTABLES'\n);\n\n// eslint-disable-next-line camelcase\nfunction experimental_makeMutableNative<Value>(initial: Value): Mutable<Value> {\n  let latest = initial;\n  const dirtyFlag = createSynchronizable(false);\n  const handle = createSerializable({\n    __init: () => {\n      'worklet';\n      return experimental_makeMutableUI(initial, dirtyFlag);\n    },\n  });\n\n  const mutable: PartialMutable<Value> = {\n    get value(): Value {\n      checkInvalidReadDuringRender();\n      if (dirtyFlag.getBlocking()) {\n        const uiValueGetter = executeOnUIRuntimeSync((sv: Mutable<Value>) => {\n          sv.setDirty!(false);\n          return sv.value;\n        });\n        latest = uiValueGetter(mutable as Mutable<Value>);\n      }\n      return latest;\n    },\n    set value(newValue) {\n      checkInvalidWriteDuringRender();\n      runOnUI(() => {\n        mutable.value = newValue;\n      })();\n    },\n\n    get _value(): Value {\n      throw new ReanimatedError(\n        'Reading from `_value` directly is only possible on the UI runtime. Perhaps you passed an Animated Style to a non-animated component?'\n      );\n    },\n    set _value(_newValue: Value) {\n      throw new ReanimatedError(\n        'Setting `_value` directly is only possible on the UI runtime. Perhaps you want to assign to `value` instead?'\n      );\n    },\n\n    modify: (modifier, forceUpdate = true) => {\n      runOnUI(() => {\n        mutable.modify(modifier, forceUpdate);\n      })();\n    },\n    addListener: () => {\n      throw new ReanimatedError(\n        'Adding listeners is only possible on the UI runtime.'\n      );\n    },\n    removeListener: () => {\n      throw new ReanimatedError(\n        'Removing listeners is only possible on the UI runtime.'\n      );\n    },\n\n    _isReanimatedSharedValue: true,\n  };\n\n  hideInternalValueProp(mutable);\n  addCompilerSafeGetAndSet(mutable);\n\n  serializableMappingCache.set(mutable, handle);\n  return mutable as Mutable<Value>;\n}\n\nfunction makeMutableNative<Value>(initial: Value): Mutable<Value> {\n  const handle = createSerializable({\n    __init: () => {\n      'worklet';\n      return legacy_makeMutableUI(initial);\n    },\n  });\n\n  const mutable: PartialMutable<Value> = {\n    get value(): Value {\n      checkInvalidReadDuringRender();\n      const uiValueGetter = executeOnUIRuntimeSync((sv: Mutable<Value>) => {\n        return sv.value;\n      });\n      return uiValueGetter(mutable as Mutable<Value>);\n    },\n    set value(newValue) {\n      checkInvalidWriteDuringRender();\n      runOnUI(() => {\n        mutable.value = newValue;\n      })();\n    },\n\n    get _value(): Value {\n      throw new ReanimatedError(\n        'Reading from `_value` directly is only possible on the UI runtime. Perhaps you passed an Animated Style to a non-animated component?'\n      );\n    },\n    set _value(_newValue: Value) {\n      throw new ReanimatedError(\n        'Setting `_value` directly is only possible on the UI runtime. Perhaps you want to assign to `value` instead?'\n      );\n    },\n\n    modify: (modifier, forceUpdate = true) => {\n      runOnUI(() => {\n        mutable.modify(modifier, forceUpdate);\n      })();\n    },\n    addListener: () => {\n      throw new ReanimatedError(\n        'Adding listeners is only possible on the UI runtime.'\n      );\n    },\n    removeListener: () => {\n      throw new ReanimatedError(\n        'Removing listeners is only possible on the UI runtime.'\n      );\n    },\n\n    _isReanimatedSharedValue: true,\n  };\n\n  hideInternalValueProp(mutable);\n  addCompilerSafeGetAndSet(mutable);\n\n  serializableMappingCache.set(mutable, handle);\n  return mutable as Mutable<Value>;\n}\n\ninterface JestMutable<TValue> extends Mutable<TValue> {\n  toJSON: () => string;\n}\n\nfunction makeMutableWeb<Value>(initial: Value): Mutable<Value> {\n  let value: Value = initial;\n  const listeners = new Map<number, Listener<Value>>();\n\n  const mutable: PartialMutable<Value> = {\n    get value(): Value {\n      checkInvalidReadDuringRender();\n      return value;\n    },\n    set value(newValue) {\n      checkInvalidWriteDuringRender();\n      valueSetter(mutable as Mutable<Value>, newValue);\n    },\n\n    get _value(): Value {\n      return value;\n    },\n    set _value(newValue: Value) {\n      value = newValue;\n      listeners.forEach((listener) => {\n        listener(newValue);\n      });\n    },\n\n    modify: (modifier, forceUpdate = true) => {\n      valueSetter(\n        mutable as Mutable<Value>,\n        modifier !== undefined ? modifier(mutable.value) : mutable.value,\n        forceUpdate\n      );\n    },\n    addListener: (id: number, listener: Listener<Value>) => {\n      listeners.set(id, listener);\n    },\n    removeListener: (id: number) => {\n      listeners.delete(id);\n    },\n\n    _isReanimatedSharedValue: true,\n  };\n\n  hideInternalValueProp(mutable);\n  addCompilerSafeGetAndSet(mutable);\n\n  if (IS_JEST) {\n    (mutable as JestMutable<Value>).toJSON = () => mutableToJSON(value);\n  }\n\n  return mutable as Mutable<Value>;\n}\n\nexport const makeMutable = SHOULD_BE_USE_WEB\n  ? makeMutableWeb\n  : USE_SYNCHRONIZABLE_FOR_MUTABLES\n    ? // eslint-disable-next-line camelcase\n      experimental_makeMutableNative\n    : makeMutableNative;\n\ninterface JestMutable<TValue> extends Mutable<TValue> {\n  toJSON: () => string;\n}\n\nfunction mutableToJSON<TValue>(value: TValue): string {\n  return JSON.stringify(value);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}