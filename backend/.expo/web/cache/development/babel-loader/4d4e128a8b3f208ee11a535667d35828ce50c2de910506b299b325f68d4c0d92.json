{"ast":null,"code":"'use strict';\n\nimport { ReanimatedError } from \"../../../../common\";\nimport { MILLISECONDS_REGEX, SECONDS_REGEX, VALID_PREDEFINED_TIMING_FUNCTIONS } from \"../../../constants\";\nimport { isPredefinedTimingFunction } from \"../../../utils\";\nexport var ERROR_MESSAGES = {\n  invalidDelay: function invalidDelay(timeUnit) {\n    return `Invalid delay \"${timeUnit}\". Expected a number, \"ms\", or \"s\".`;\n  },\n  invalidDuration: function invalidDuration(duration) {\n    return `Invalid duration \"${duration}\". Expected a number, \"ms\", or \"s\".`;\n  },\n  negativeDuration: function negativeDuration(duration) {\n    return `Duration cannot be negative, received \"${duration}\".`;\n  },\n  invalidPredefinedTimingFunction: function invalidPredefinedTimingFunction(timingFunction) {\n    return `Invalid predefined timing function \"${timingFunction}\". Supported values are: ${VALID_PREDEFINED_TIMING_FUNCTIONS.join(', ')}.`;\n  },\n  invalidParametrizedTimingFunction: function invalidParametrizedTimingFunction(timingFunction) {\n    return `Invalid parametrized timing function \"${timingFunction == null ? void 0 : timingFunction.toString()}\".`;\n  }\n};\nfunction normalizeTimeUnit(timeUnit) {\n  if (typeof timeUnit === 'number') {\n    return timeUnit;\n  } else if (MILLISECONDS_REGEX.test(timeUnit)) {\n    return parseInt(timeUnit, 10);\n  } else if (SECONDS_REGEX.test(timeUnit)) {\n    return parseFloat(timeUnit) * 1000;\n  }\n  return null;\n}\nexport function normalizeDelay() {\n  var delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var delayMs = normalizeTimeUnit(delay);\n  if (delayMs === null) {\n    throw new ReanimatedError(ERROR_MESSAGES.invalidDelay(delay));\n  }\n  return delayMs;\n}\nexport function normalizeDuration() {\n  var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var durationMs = normalizeTimeUnit(duration);\n  if (durationMs === null) {\n    throw new ReanimatedError(ERROR_MESSAGES.invalidDuration(duration));\n  } else if (durationMs < 0) {\n    throw new ReanimatedError(ERROR_MESSAGES.negativeDuration(duration));\n  }\n  return durationMs;\n}\nexport function normalizeTimingFunction() {\n  var timingFunction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'ease';\n  if (typeof timingFunction === 'string') {\n    if (!isPredefinedTimingFunction(timingFunction)) {\n      throw new ReanimatedError(ERROR_MESSAGES.invalidPredefinedTimingFunction(timingFunction));\n    }\n    return timingFunction;\n  }\n  if (!timingFunction.normalize || typeof timingFunction.normalize !== 'function') {\n    throw new ReanimatedError(ERROR_MESSAGES.invalidParametrizedTimingFunction(timingFunction));\n  }\n  return timingFunction.normalize();\n}","map":{"version":3,"names":["ReanimatedError","MILLISECONDS_REGEX","SECONDS_REGEX","VALID_PREDEFINED_TIMING_FUNCTIONS","isPredefinedTimingFunction","ERROR_MESSAGES","invalidDelay","timeUnit","invalidDuration","duration","negativeDuration","invalidPredefinedTimingFunction","timingFunction","join","invalidParametrizedTimingFunction","toString","normalizeTimeUnit","test","parseInt","parseFloat","normalizeDelay","delay","arguments","length","undefined","delayMs","normalizeDuration","durationMs","normalizeTimingFunction","normalize"],"sources":["C:\\Users\\User\\Desktop\\Atividade1-Desenvolvimento-Mobile-8-6--Periodo\\backend\\node_modules\\react-native-reanimated\\src\\css\\native\\normalization\\common\\settings.ts"],"sourcesContent":["'use strict';\nimport { ReanimatedError } from '../../../../common';\nimport {\n  MILLISECONDS_REGEX,\n  SECONDS_REGEX,\n  VALID_PREDEFINED_TIMING_FUNCTIONS,\n} from '../../../constants';\nimport type {\n  CSSTimingFunction,\n  NormalizedCSSTimingFunction,\n  PredefinedTimingFunction,\n} from '../../../easing';\nimport type { TimeUnit } from '../../../types';\nimport { isPredefinedTimingFunction } from '../../../utils';\n\nexport const ERROR_MESSAGES = {\n  invalidDelay: (timeUnit: TimeUnit) =>\n    `Invalid delay \"${timeUnit}\". Expected a number, \"ms\", or \"s\".`,\n  invalidDuration: (duration: TimeUnit) =>\n    `Invalid duration \"${duration}\". Expected a number, \"ms\", or \"s\".`,\n  negativeDuration: (duration: TimeUnit) =>\n    `Duration cannot be negative, received \"${duration}\".`,\n  invalidPredefinedTimingFunction: (timingFunction: PredefinedTimingFunction) =>\n    `Invalid predefined timing function \"${timingFunction}\". Supported values are: ${VALID_PREDEFINED_TIMING_FUNCTIONS.join(', ')}.`,\n  invalidParametrizedTimingFunction: (timingFunction: CSSTimingFunction) =>\n    `Invalid parametrized timing function \"${timingFunction?.toString()}\".`,\n};\n\nfunction normalizeTimeUnit(timeUnit: TimeUnit): number | null {\n  if (typeof timeUnit === 'number') {\n    return timeUnit;\n  } else if (MILLISECONDS_REGEX.test(timeUnit)) {\n    return parseInt(timeUnit, 10);\n  } else if (SECONDS_REGEX.test(timeUnit)) {\n    return parseFloat(timeUnit) * 1000;\n  }\n  return null;\n}\n\nexport function normalizeDelay(delay: TimeUnit = 0): number {\n  const delayMs = normalizeTimeUnit(delay);\n  if (delayMs === null) {\n    throw new ReanimatedError(ERROR_MESSAGES.invalidDelay(delay));\n  }\n  return delayMs;\n}\n\nexport function normalizeDuration(duration: TimeUnit = 0): number {\n  const durationMs = normalizeTimeUnit(duration);\n  if (durationMs === null) {\n    throw new ReanimatedError(ERROR_MESSAGES.invalidDuration(duration));\n  } else if (durationMs < 0) {\n    throw new ReanimatedError(ERROR_MESSAGES.negativeDuration(duration));\n  }\n  return durationMs;\n}\n\nexport function normalizeTimingFunction(\n  timingFunction: CSSTimingFunction = 'ease'\n): NormalizedCSSTimingFunction {\n  if (typeof timingFunction === 'string') {\n    if (!isPredefinedTimingFunction(timingFunction)) {\n      throw new ReanimatedError(\n        ERROR_MESSAGES.invalidPredefinedTimingFunction(timingFunction)\n      );\n    }\n    return timingFunction;\n  }\n  if (\n    !timingFunction.normalize ||\n    typeof timingFunction.normalize !== 'function'\n  ) {\n    throw new ReanimatedError(\n      ERROR_MESSAGES.invalidParametrizedTimingFunction(timingFunction)\n    );\n  }\n  return timingFunction.normalize();\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}