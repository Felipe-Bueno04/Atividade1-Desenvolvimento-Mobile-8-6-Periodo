{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { getNormalizedCSSTransitionConfigUpdates, normalizeCSSTransitionProperties } from \"../normalization\";\nimport { registerCSSTransition, unregisterCSSTransition, updateCSSTransition } from \"../proxy\";\nvar CSSTransitionsManager = function () {\n  function CSSTransitionsManager(shadowNodeWrapper, viewTag) {\n    _classCallCheck(this, CSSTransitionsManager);\n    this.transitionConfig = null;\n    this.viewTag = viewTag;\n    this.shadowNodeWrapper = shadowNodeWrapper;\n  }\n  return _createClass(CSSTransitionsManager, [{\n    key: \"update\",\n    value: function update(transitionProperties) {\n      if (!transitionProperties) {\n        this.detach();\n        return;\n      }\n      var transitionConfig = normalizeCSSTransitionProperties(transitionProperties);\n      if (!transitionConfig) {\n        this.detach();\n        return;\n      }\n      if (this.transitionConfig) {\n        var configUpdates = getNormalizedCSSTransitionConfigUpdates(this.transitionConfig, transitionConfig);\n        if (Object.keys(configUpdates).length > 0) {\n          this.transitionConfig = transitionConfig;\n          updateCSSTransition(this.viewTag, configUpdates);\n        }\n      } else {\n        this.attachTransition(transitionConfig);\n      }\n    }\n  }, {\n    key: \"unmountCleanup\",\n    value: function unmountCleanup() {}\n  }, {\n    key: \"detach\",\n    value: function detach() {\n      if (this.transitionConfig) {\n        unregisterCSSTransition(this.viewTag);\n        this.transitionConfig = null;\n      }\n    }\n  }, {\n    key: \"attachTransition\",\n    value: function attachTransition(transitionConfig) {\n      if (!this.transitionConfig) {\n        registerCSSTransition(this.shadowNodeWrapper, transitionConfig);\n        this.transitionConfig = transitionConfig;\n      }\n    }\n  }]);\n}();\nexport { CSSTransitionsManager as default };","map":{"version":3,"names":["_classCallCheck","_createClass","getNormalizedCSSTransitionConfigUpdates","normalizeCSSTransitionProperties","registerCSSTransition","unregisterCSSTransition","updateCSSTransition","CSSTransitionsManager","shadowNodeWrapper","viewTag","transitionConfig","key","value","update","transitionProperties","detach","configUpdates","Object","keys","length","attachTransition","unmountCleanup","default"],"sources":["C:\\Users\\User\\Desktop\\Atividade1-Desenvolvimento-Mobile-8-6--Periodo\\backend\\node_modules\\react-native-reanimated\\src\\css\\native\\managers\\CSSTransitionsManager.ts"],"sourcesContent":["'use strict';\nimport type { ShadowNodeWrapper } from '../../../commonTypes';\nimport type {\n  CSSTransitionProperties,\n  ICSSTransitionsManager,\n} from '../../types';\nimport {\n  getNormalizedCSSTransitionConfigUpdates,\n  normalizeCSSTransitionProperties,\n} from '../normalization';\nimport {\n  registerCSSTransition,\n  unregisterCSSTransition,\n  updateCSSTransition,\n} from '../proxy';\nimport type { NormalizedCSSTransitionConfig } from '../types';\n\nexport default class CSSTransitionsManager implements ICSSTransitionsManager {\n  private readonly viewTag: number;\n  private readonly shadowNodeWrapper: ShadowNodeWrapper;\n\n  private transitionConfig: NormalizedCSSTransitionConfig | null = null;\n\n  constructor(shadowNodeWrapper: ShadowNodeWrapper, viewTag: number) {\n    this.viewTag = viewTag;\n    this.shadowNodeWrapper = shadowNodeWrapper;\n  }\n\n  update(transitionProperties: CSSTransitionProperties | null): void {\n    if (!transitionProperties) {\n      this.detach();\n      return;\n    }\n\n    const transitionConfig =\n      normalizeCSSTransitionProperties(transitionProperties);\n    if (!transitionConfig) {\n      this.detach();\n      return;\n    }\n\n    if (this.transitionConfig) {\n      const configUpdates = getNormalizedCSSTransitionConfigUpdates(\n        this.transitionConfig,\n        transitionConfig\n      );\n\n      if (Object.keys(configUpdates).length > 0) {\n        this.transitionConfig = transitionConfig;\n        updateCSSTransition(this.viewTag, configUpdates);\n      }\n    } else {\n      this.attachTransition(transitionConfig);\n    }\n  }\n\n  unmountCleanup(): void {\n    // noop\n  }\n\n  private detach() {\n    if (this.transitionConfig) {\n      unregisterCSSTransition(this.viewTag);\n      this.transitionConfig = null;\n    }\n  }\n\n  private attachTransition(transitionConfig: NormalizedCSSTransitionConfig) {\n    if (!this.transitionConfig) {\n      registerCSSTransition(this.shadowNodeWrapper, transitionConfig);\n      this.transitionConfig = transitionConfig;\n    }\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAAA,OAAAA,eAAA;AAAA,OAAAC,YAAA;AAMZ,SACEC,uCAAuC,EACvCC,gCAAgC;AAElC,SACEC,qBAAqB,EACrBC,uBAAuB,EACvBC,mBAAmB;AACJ,IAGIC,qBAAqB;EAMxC,SAAAA,sBAAYC,iBAAoC,EAAEC,OAAe,EAAE;IAAAT,eAAA,OAAAO,qBAAA;IAAA,KAF3DG,gBAAgB,GAAyC,IAAI;IAGnE,IAAI,CAACD,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACD,iBAAiB,GAAGA,iBAAiB;EAC5C;EAAA,OAAAP,YAAA,CAAAM,qBAAA;IAAAI,GAAA;IAAAC,KAAA,EAEA,SAAAC,MAAMA,CAACC,oBAAoD,EAAQ;MACjE,IAAI,CAACA,oBAAoB,EAAE;QACzB,IAAI,CAACC,MAAM,CAAC,CAAC;QACb;MACF;MAEA,IAAML,gBAAgB,GACpBP,gCAAgC,CAACW,oBAAoB,CAAC;MACxD,IAAI,CAACJ,gBAAgB,EAAE;QACrB,IAAI,CAACK,MAAM,CAAC,CAAC;QACb;MACF;MAEA,IAAI,IAAI,CAACL,gBAAgB,EAAE;QACzB,IAAMM,aAAa,GAAGd,uCAAuC,CAC3D,IAAI,CAACQ,gBAAgB,EACrBA,gBACF,CAAC;QAED,IAAIO,MAAM,CAACC,IAAI,CAACF,aAAa,CAAC,CAACG,MAAM,GAAG,CAAC,EAAE;UACzC,IAAI,CAACT,gBAAgB,GAAGA,gBAAgB;UACxCJ,mBAAmB,CAAC,IAAI,CAACG,OAAO,EAAEO,aAAa,CAAC;QAClD;MACF,CAAC,MAAM;QACL,IAAI,CAACI,gBAAgB,CAACV,gBAAgB,CAAC;MACzC;IACF;EAAA;IAAAC,GAAA;IAAAC,KAAA,EAEA,SAAAS,cAAcA,CAAA,EAAS,CACrB;EAAA;IAAAV,GAAA;IAAAC,KAAA,EAGM,SAAAG,MAAMA,CAAA,EAAG;MACf,IAAI,IAAI,CAACL,gBAAgB,EAAE;QACzBL,uBAAuB,CAAC,IAAI,CAACI,OAAO,CAAC;QACrC,IAAI,CAACC,gBAAgB,GAAG,IAAI;MAC9B;IACF;EAAA;IAAAC,GAAA;IAAAC,KAAA,EAEQ,SAAAQ,gBAAgBA,CAACV,gBAA+C,EAAE;MACxE,IAAI,CAAC,IAAI,CAACA,gBAAgB,EAAE;QAC1BN,qBAAqB,CAAC,IAAI,CAACI,iBAAiB,EAAEE,gBAAgB,CAAC;QAC/D,IAAI,CAACA,gBAAgB,GAAGA,gBAAgB;MAC1C;IACF;EAAA;AAAA;AAAA,SAvDmBH,qBAAqB,IAAAe,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}