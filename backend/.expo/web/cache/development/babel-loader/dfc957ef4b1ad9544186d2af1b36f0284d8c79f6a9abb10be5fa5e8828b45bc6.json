{"ast":null,"code":"'use strict';\n\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { ReanimatedError } from \"../../../common\";\nimport { filterCSSAndStyleProperties } from \"../../utils\";\nimport { setViewStyle } from \"../proxy\";\nimport { getStyleBuilder, hasStyleBuilder } from \"../registry\";\nimport CSSAnimationsManager from \"./CSSAnimationsManager\";\nimport CSSTransitionsManager from \"./CSSTransitionsManager\";\nvar CSSManager = function () {\n  function CSSManager(_ref) {\n    var shadowNodeWrapper = _ref.shadowNodeWrapper,\n      viewTag = _ref.viewTag,\n      _ref$viewName = _ref.viewName,\n      viewName = _ref$viewName === void 0 ? 'RCTView' : _ref$viewName;\n    _classCallCheck(this, CSSManager);\n    this.styleBuilder = null;\n    this.isFirstUpdate = true;\n    var tag = this.viewTag = viewTag;\n    var wrapper = shadowNodeWrapper;\n    this.viewName = viewName;\n    this.styleBuilder = hasStyleBuilder(viewName) ? getStyleBuilder(viewName) : null;\n    this.cssAnimationsManager = new CSSAnimationsManager(wrapper, viewName, tag);\n    this.cssTransitionsManager = new CSSTransitionsManager(wrapper, tag);\n  }\n  return _createClass(CSSManager, [{\n    key: \"update\",\n    value: function update(style) {\n      var _this$styleBuilder;\n      var _filterCSSAndStylePro = filterCSSAndStyleProperties(style),\n        _filterCSSAndStylePro2 = _slicedToArray(_filterCSSAndStylePro, 3),\n        animationProperties = _filterCSSAndStylePro2[0],\n        transitionProperties = _filterCSSAndStylePro2[1],\n        filteredStyle = _filterCSSAndStylePro2[2];\n      if (!this.styleBuilder && (animationProperties || transitionProperties)) {\n        throw new ReanimatedError(`Tried to apply CSS animations to ${this.viewName} which is not supported`);\n      }\n      var normalizedStyle = (_this$styleBuilder = this.styleBuilder) == null ? void 0 : _this$styleBuilder.buildFrom(filteredStyle);\n      if (this.isFirstUpdate && normalizedStyle) {\n        setViewStyle(this.viewTag, normalizedStyle);\n      }\n      this.cssTransitionsManager.update(transitionProperties);\n      this.cssAnimationsManager.update(animationProperties);\n      if (!this.isFirstUpdate && normalizedStyle) {\n        setViewStyle(this.viewTag, normalizedStyle);\n      }\n      this.isFirstUpdate = false;\n    }\n  }, {\n    key: \"unmountCleanup\",\n    value: function unmountCleanup() {\n      this.cssAnimationsManager.unmountCleanup();\n      this.cssTransitionsManager.unmountCleanup();\n    }\n  }]);\n}();\nexport { CSSManager as default };","map":{"version":3,"names":["_slicedToArray","_classCallCheck","_createClass","ReanimatedError","filterCSSAndStyleProperties","setViewStyle","getStyleBuilder","hasStyleBuilder","CSSAnimationsManager","CSSTransitionsManager","CSSManager","_ref","shadowNodeWrapper","viewTag","_ref$viewName","viewName","styleBuilder","isFirstUpdate","tag","wrapper","cssAnimationsManager","cssTransitionsManager","key","value","update","style","_this$styleBuilder","_filterCSSAndStylePro","_filterCSSAndStylePro2","animationProperties","transitionProperties","filteredStyle","normalizedStyle","buildFrom","unmountCleanup","default"],"sources":["C:\\Users\\User\\Desktop\\Atividade1-Desenvolvimento-Mobile-8-6--Periodo\\backend\\node_modules\\react-native-reanimated\\src\\css\\native\\managers\\CSSManager.ts"],"sourcesContent":["'use strict';\nimport { ReanimatedError } from '../../../common';\nimport type { ShadowNodeWrapper } from '../../../commonTypes';\nimport type { ViewInfo } from '../../../createAnimatedComponent/commonTypes';\nimport type { AnyRecord, CSSStyle } from '../../types';\nimport type { ICSSManager } from '../../types/interfaces';\nimport { filterCSSAndStyleProperties } from '../../utils';\nimport { setViewStyle } from '../proxy';\nimport { getStyleBuilder, hasStyleBuilder } from '../registry';\nimport type { StyleBuilder } from '../style';\nimport CSSAnimationsManager from './CSSAnimationsManager';\nimport CSSTransitionsManager from './CSSTransitionsManager';\n\nexport default class CSSManager implements ICSSManager {\n  private readonly cssAnimationsManager: CSSAnimationsManager;\n  private readonly cssTransitionsManager: CSSTransitionsManager;\n  private readonly viewTag: number;\n  private readonly viewName: string;\n  private readonly styleBuilder: StyleBuilder<AnyRecord> | null = null;\n  private isFirstUpdate: boolean = true;\n\n  constructor({ shadowNodeWrapper, viewTag, viewName = 'RCTView' }: ViewInfo) {\n    const tag = (this.viewTag = viewTag as number);\n    const wrapper = shadowNodeWrapper as ShadowNodeWrapper;\n\n    this.viewName = viewName;\n    this.styleBuilder = hasStyleBuilder(viewName)\n      ? getStyleBuilder(viewName)\n      : null;\n    this.cssAnimationsManager = new CSSAnimationsManager(\n      wrapper,\n      viewName,\n      tag\n    );\n    this.cssTransitionsManager = new CSSTransitionsManager(wrapper, tag);\n  }\n\n  update(style: CSSStyle): void {\n    const [animationProperties, transitionProperties, filteredStyle] =\n      filterCSSAndStyleProperties(style);\n\n    if (!this.styleBuilder && (animationProperties || transitionProperties)) {\n      throw new ReanimatedError(\n        `Tried to apply CSS animations to ${this.viewName} which is not supported`\n      );\n    }\n\n    const normalizedStyle = this.styleBuilder?.buildFrom(filteredStyle);\n\n    // If the update is called during the first css style update, we won't\n    // trigger CSS transitions and set styles before attaching CSS transitions\n    if (this.isFirstUpdate && normalizedStyle) {\n      setViewStyle(this.viewTag, normalizedStyle);\n    }\n\n    this.cssTransitionsManager.update(transitionProperties);\n    this.cssAnimationsManager.update(animationProperties);\n\n    // If the current update is not the fist one, we want to update CSS\n    // animations and transitions first and update the style then to make\n    // sure that the new transition is fired with new settings (like duration)\n    if (!this.isFirstUpdate && normalizedStyle) {\n      setViewStyle(this.viewTag, normalizedStyle);\n    }\n\n    this.isFirstUpdate = false;\n  }\n\n  unmountCleanup(): void {\n    this.cssAnimationsManager.unmountCleanup();\n    this.cssTransitionsManager.unmountCleanup();\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAAA,OAAAA,cAAA;AAAA,OAAAC,eAAA;AAAA,OAAAC,YAAA;AACZ,SAASC,eAAe;AAKxB,SAASC,2BAA2B;AACpC,SAASC,YAAY;AACrB,SAASC,eAAe,EAAEC,eAAe;AAEzC,OAAOC,oBAAoB;AAC3B,OAAOC,qBAAqB;AAA+B,IAEtCC,UAAU;EAQ7B,SAAAA,WAAAC,IAAA,EAA4E;IAAA,IAA9DC,iBAAiB,GAAAD,IAAA,CAAjBC,iBAAiB;MAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;MAAAC,aAAA,GAAAH,IAAA,CAAEI,QAAQ;MAARA,QAAQ,GAAAD,aAAA,cAAG,YAAAA,aAAA;IAAAb,eAAA,OAAAS,UAAA;IAAA,KAHpCM,YAAY,GAAmC,IAAI;IAAA,KAC5DC,aAAa,GAAY,IAAI;IAGnC,IAAMC,GAAG,GAAI,IAAI,CAACL,OAAO,GAAGA,OAAkB;IAC9C,IAAMM,OAAO,GAAGP,iBAAsC;IAEtD,IAAI,CAACG,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,YAAY,GAAGT,eAAe,CAACQ,QAAQ,CAAC,GACzCT,eAAe,CAACS,QAAQ,CAAC,GACzB,IAAI;IACR,IAAI,CAACK,oBAAoB,GAAG,IAAIZ,oBAAoB,CAClDW,OAAO,EACPJ,QAAQ,EACRG,GACF,CAAC;IACD,IAAI,CAACG,qBAAqB,GAAG,IAAIZ,qBAAqB,CAACU,OAAO,EAAED,GAAG,CAAC;EACtE;EAAA,OAAAhB,YAAA,CAAAQ,UAAA;IAAAY,GAAA;IAAAC,KAAA,EAEA,SAAAC,MAAMA,CAACC,KAAe,EAAQ;MAAA,IAAAC,kBAAA;MAC5B,IAAAC,qBAAA,GACEvB,2BAA2B,CAACqB,KAAK,CAAC;QAAAG,sBAAA,GAAA5B,cAAA,CAAA2B,qBAAA;QAD7BE,mBAAmB,GAAAD,sBAAA;QAAEE,oBAAoB,GAAAF,sBAAA;QAAEG,aAAa,GAAAH,sBAAA;MAG/D,IAAI,CAAC,IAAI,CAACZ,YAAY,KAAKa,mBAAmB,IAAIC,oBAAoB,CAAC,EAAE;QACvE,MAAM,IAAI3B,eAAe,CACvB,oCAAoC,IAAI,CAACY,QAAQ,yBACnD,CAAC;MACH;MAEA,IAAMiB,eAAe,IAAAN,kBAAA,GAAG,IAAI,CAACV,YAAY,qBAAjBU,kBAAA,CAAmBO,SAAS,CAACF,aAAa,CAAC;MAInE,IAAI,IAAI,CAACd,aAAa,IAAIe,eAAe,EAAE;QACzC3B,YAAY,CAAC,IAAI,CAACQ,OAAO,EAAEmB,eAAe,CAAC;MAC7C;MAEA,IAAI,CAACX,qBAAqB,CAACG,MAAM,CAACM,oBAAoB,CAAC;MACvD,IAAI,CAACV,oBAAoB,CAACI,MAAM,CAACK,mBAAmB,CAAC;MAKrD,IAAI,CAAC,IAAI,CAACZ,aAAa,IAAIe,eAAe,EAAE;QAC1C3B,YAAY,CAAC,IAAI,CAACQ,OAAO,EAAEmB,eAAe,CAAC;MAC7C;MAEA,IAAI,CAACf,aAAa,GAAG,KAAK;IAC5B;EAAA;IAAAK,GAAA;IAAAC,KAAA,EAEA,SAAAW,cAAcA,CAAA,EAAS;MACrB,IAAI,CAACd,oBAAoB,CAACc,cAAc,CAAC,CAAC;MAC1C,IAAI,CAACb,qBAAqB,CAACa,cAAc,CAAC,CAAC;IAC7C;EAAA;AAAA;AAAA,SA1DmBxB,UAAU,IAAAyB,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}