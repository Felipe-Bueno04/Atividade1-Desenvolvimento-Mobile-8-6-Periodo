{"ast":null,"code":"'use strict';\n\nimport { callMicrotasks } from \"../../threads\";\nexport function setupRequestAnimationFrame() {\n  'worklet';\n\n  var nativeRequestAnimationFrame = globalThis.requestAnimationFrame;\n  var queuedCallbacks = [];\n  var queuedCallbacksBegin = 0;\n  var queuedCallbacksEnd = 0;\n  var flushedCallbacks = queuedCallbacks;\n  var flushedCallbacksBegin = 0;\n  var flushedCallbacksEnd = 0;\n  var flushRequested = false;\n  globalThis.__flushAnimationFrame = function (timestamp) {\n    flushedCallbacks = queuedCallbacks;\n    queuedCallbacks = [];\n    flushedCallbacksBegin = queuedCallbacksBegin;\n    flushedCallbacksEnd = queuedCallbacksEnd;\n    queuedCallbacksBegin = queuedCallbacksEnd;\n    for (var callback of flushedCallbacks) {\n      callback(timestamp);\n    }\n    flushedCallbacksBegin = flushedCallbacksEnd;\n    callMicrotasks();\n  };\n  globalThis.requestAnimationFrame = function (callback) {\n    var handle = queuedCallbacksEnd++;\n    queuedCallbacks.push(callback);\n    if (!flushRequested) {\n      flushRequested = true;\n      nativeRequestAnimationFrame(function (timestamp) {\n        flushRequested = false;\n        globalThis.__frameTimestamp = timestamp;\n        globalThis.__flushAnimationFrame(timestamp);\n        globalThis.__frameTimestamp = undefined;\n      });\n    }\n    return handle;\n  };\n  globalThis.cancelAnimationFrame = function (handle) {\n    if (handle < flushedCallbacksBegin || handle >= queuedCallbacksEnd) {\n      return;\n    }\n    if (handle < flushedCallbacksEnd) {\n      flushedCallbacks[handle - flushedCallbacksBegin] = function () {};\n    } else {\n      queuedCallbacks[handle - queuedCallbacksBegin] = function () {};\n    }\n  };\n}","map":{"version":3,"names":["callMicrotasks","setupRequestAnimationFrame","nativeRequestAnimationFrame","globalThis","requestAnimationFrame","queuedCallbacks","queuedCallbacksBegin","queuedCallbacksEnd","flushedCallbacks","flushedCallbacksBegin","flushedCallbacksEnd","flushRequested","__flushAnimationFrame","timestamp","callback","handle","push","__frameTimestamp","undefined","cancelAnimationFrame"],"sources":["C:\\Users\\User\\Desktop\\Atividade1-Desenvolvimento-Mobile-8-6--Periodo\\backend\\node_modules\\react-native-worklets\\src\\runLoop\\uiRuntime\\requestAnimationFrame.ts"],"sourcesContent":["'use strict';\n\nimport { callMicrotasks } from '../../threads';\n\nexport function setupRequestAnimationFrame() {\n  'worklet';\n  const nativeRequestAnimationFrame = globalThis.requestAnimationFrame;\n\n  let queuedCallbacks: ((timestamp: number) => void)[] = [];\n  let queuedCallbacksBegin = 0;\n  let queuedCallbacksEnd = 0;\n\n  let flushedCallbacks = queuedCallbacks;\n  let flushedCallbacksBegin = 0;\n  let flushedCallbacksEnd = 0;\n\n  let flushRequested = false;\n\n  globalThis.__flushAnimationFrame = (timestamp: number) => {\n    flushedCallbacks = queuedCallbacks;\n    queuedCallbacks = [];\n\n    flushedCallbacksBegin = queuedCallbacksBegin;\n    flushedCallbacksEnd = queuedCallbacksEnd;\n    queuedCallbacksBegin = queuedCallbacksEnd;\n\n    for (const callback of flushedCallbacks) {\n      callback(timestamp);\n    }\n\n    flushedCallbacksBegin = flushedCallbacksEnd;\n\n    callMicrotasks();\n  };\n\n  globalThis.requestAnimationFrame = (\n    callback: (timestamp: number) => void\n  ): number => {\n    const handle = queuedCallbacksEnd++;\n\n    queuedCallbacks.push(callback);\n    if (!flushRequested) {\n      flushRequested = true;\n\n      nativeRequestAnimationFrame((timestamp) => {\n        flushRequested = false;\n        globalThis.__frameTimestamp = timestamp;\n        globalThis.__flushAnimationFrame(timestamp);\n        globalThis.__frameTimestamp = undefined;\n      });\n    }\n    return handle;\n  };\n\n  globalThis.cancelAnimationFrame = (handle: number) => {\n    if (handle < flushedCallbacksBegin || handle >= queuedCallbacksEnd) {\n      return;\n    }\n\n    if (handle < flushedCallbacksEnd) {\n      flushedCallbacks[handle - flushedCallbacksBegin] = () => {};\n    } else {\n      queuedCallbacks[handle - queuedCallbacksBegin] = () => {};\n    }\n  };\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,SAASA,cAAc;AAEvB,OAAO,SAASC,0BAA0BA,CAAA,EAAG;EAC3C,SAAS;;EACT,IAAMC,2BAA2B,GAAGC,UAAU,CAACC,qBAAqB;EAEpE,IAAIC,eAAgD,GAAG,EAAE;EACzD,IAAIC,oBAAoB,GAAG,CAAC;EAC5B,IAAIC,kBAAkB,GAAG,CAAC;EAE1B,IAAIC,gBAAgB,GAAGH,eAAe;EACtC,IAAII,qBAAqB,GAAG,CAAC;EAC7B,IAAIC,mBAAmB,GAAG,CAAC;EAE3B,IAAIC,cAAc,GAAG,KAAK;EAE1BR,UAAU,CAACS,qBAAqB,GAAI,UAAAC,SAAiB,EAAK;IACxDL,gBAAgB,GAAGH,eAAe;IAClCA,eAAe,GAAG,EAAE;IAEpBI,qBAAqB,GAAGH,oBAAoB;IAC5CI,mBAAmB,GAAGH,kBAAkB;IACxCD,oBAAoB,GAAGC,kBAAkB;IAEzC,KAAK,IAAMO,QAAQ,IAAIN,gBAAgB,EAAE;MACvCM,QAAQ,CAACD,SAAS,CAAC;IACrB;IAEAJ,qBAAqB,GAAGC,mBAAmB;IAE3CV,cAAc,CAAC,CAAC;EAClB,CAAC;EAEDG,UAAU,CAACC,qBAAqB,GAC9B,UAAAU,QAAqC,EAC1B;IACX,IAAMC,MAAM,GAAGR,kBAAkB,EAAE;IAEnCF,eAAe,CAACW,IAAI,CAACF,QAAQ,CAAC;IAC9B,IAAI,CAACH,cAAc,EAAE;MACnBA,cAAc,GAAG,IAAI;MAErBT,2BAA2B,CAAE,UAAAW,SAAS,EAAK;QACzCF,cAAc,GAAG,KAAK;QACtBR,UAAU,CAACc,gBAAgB,GAAGJ,SAAS;QACvCV,UAAU,CAACS,qBAAqB,CAACC,SAAS,CAAC;QAC3CV,UAAU,CAACc,gBAAgB,GAAGC,SAAS;MACzC,CAAC,CAAC;IACJ;IACA,OAAOH,MAAM;EACf,CAAC;EAEDZ,UAAU,CAACgB,oBAAoB,GAAI,UAAAJ,MAAc,EAAK;IACpD,IAAIA,MAAM,GAAGN,qBAAqB,IAAIM,MAAM,IAAIR,kBAAkB,EAAE;MAClE;IACF;IAEA,IAAIQ,MAAM,GAAGL,mBAAmB,EAAE;MAChCF,gBAAgB,CAACO,MAAM,GAAGN,qBAAqB,CAAC,GAAG,YAAM,CAAC,CAAC;IAC7D,CAAC,MAAM;MACLJ,eAAe,CAACU,MAAM,GAAGT,oBAAoB,CAAC,GAAG,YAAM,CAAC,CAAC;IAC3D;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}